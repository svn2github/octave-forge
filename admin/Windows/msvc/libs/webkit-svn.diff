diff -ur WebKit-r36766/GNUmakefile.am WebKit-r36766-new/GNUmakefile.am
--- WebKit-r36766/GNUmakefile.am	Sun Sep 21 03:12:15 2008
+++ WebKit-r36766-new/GNUmakefile.am	Wed Sep 24 14:49:07 2008
@@ -133,7 +133,7 @@
 	$(GLOBALDEPS_CFLAGS) \
 	$(UNICODE_CFLAGS)
 
-libJavaScriptCore_la_CPPFLAGS = \
+libJavaScriptCore_la_CPPFLAGS = -DJS_INTERNAL \
 	$(global_cppflags) \
 	$(javascriptcore_cppflags)
 
@@ -179,7 +179,7 @@
 	$(COVERAGE_CFLAGS) \
 	$(HILDON_CFLAGS)
 
-libWebCore_la_CPPFLAGS = \
+libWebCore_la_CPPFLAGS = -DJS_INTERNAL \
 	$(global_cppflags) \
 	$(webcore_cppflags) \
 	$(javascriptcore_cppflags) \
@@ -231,17 +231,16 @@
 libwebkit_1_0_la_CFLAGS = \
 	$(libWebCore_la_CFLAGS)
 
-libwebkit_1_0_la_CPPFLAGS = \
+libwebkit_1_0_la_CPPFLAGS = -DJS_INTERNAL \
 	$(libWebCore_la_CPPFLAGS) \
 	$(webkitgtk_cppflags)
 
 libwebkit_1_0_la_LDFLAGS = \
 	$(COVERAGE_LDFLAGS) \
 	-version-info @LIBWEBKITGTK_VERSION@ \
-	-Wl,--version-script,$(srcdir)/symbols.filter \
 	$(no_undefined)
 
-libwebkit_1_0_la_LIBADD = \
+libwebkit_1_0_la_LIBADD = -lwinmm -lshlwapi \
 	libWebCore.la
 
 #
diff -ur WebKit-r36766/JavaScriptCore/API/JSBase.h WebKit-r36766-new/JavaScriptCore/API/JSBase.h
--- WebKit-r36766/JavaScriptCore/API/JSBase.h	Fri Aug  8 06:50:46 2008
+++ WebKit-r36766-new/JavaScriptCore/API/JSBase.h	Tue Sep 23 17:32:08 2008
@@ -72,7 +72,11 @@
      * TODO: Export symbols with JS_EXPORT when using MSVC.
      * See http://bugs.webkit.org/show_bug.cgi?id=16227
      */
-    #define JS_EXPORT
+    #if defined(JS_INTERNAL)
+        #define JS_EXPORT __declspec(dllexport)
+    #else
+        #define JS_EXPORT __declspec(dllimport)
+    #endif
 #else
     #define JS_EXPORT
 #endif
diff -ur WebKit-r36766/JavaScriptCore/API/tests/JSNode.c WebKit-r36766-new/JavaScriptCore/API/tests/JSNode.c
--- WebKit-r36766/JavaScriptCore/API/tests/JSNode.c	Mon Aug 25 23:55:38 2008
+++ WebKit-r36766-new/JavaScriptCore/API/tests/JSNode.c	Wed Sep 24 09:34:28 2008
@@ -105,10 +105,12 @@
 
 static JSValueRef JSNode_getNodeType(JSContextRef context, JSObjectRef object, JSStringRef propertyName, JSValueRef* exception)
 {
+    Node* node;
+
     UNUSED_PARAM(propertyName);
     UNUSED_PARAM(exception);
 
-    Node* node = JSObjectGetPrivate(object);
+    node = JSObjectGetPrivate(object);
     if (node) {
         JSStringRef nodeType = JSStringCreateWithUTF8CString(node->nodeType);
         JSValueRef value = JSValueMakeString(context, nodeType);
@@ -121,10 +123,12 @@
 
 static JSValueRef JSNode_getChildNodes(JSContextRef context, JSObjectRef thisObject, JSStringRef propertyName, JSValueRef* exception)
 {
+    Node* node;
+
     UNUSED_PARAM(propertyName);
     UNUSED_PARAM(exception);
 
-    Node* node = JSObjectGetPrivate(thisObject);
+    node = JSObjectGetPrivate(thisObject);
     ASSERT(node);
     return JSNodeList_new(context, NodeList_new(node));
 }
@@ -147,9 +151,11 @@
 
 static void JSNode_initialize(JSContextRef context, JSObjectRef object)
 {
+    Node* node;
+
     UNUSED_PARAM(context);
 
-    Node* node = JSObjectGetPrivate(object);
+    node = JSObjectGetPrivate(object);
     ASSERT(node);
 
     Node_ref(node);
@@ -165,9 +171,10 @@
 
 JSClassRef JSNode_class(JSContextRef context)
 {
+    static JSClassRef jsClass;
+
     UNUSED_PARAM(context);
 
-    static JSClassRef jsClass;
     if (!jsClass) {
         JSClassDefinition definition = kJSClassDefinitionEmpty;
         definition.staticValues = JSNode_staticValues;
diff -ur WebKit-r36766/JavaScriptCore/API/tests/JSNodeList.c WebKit-r36766-new/JavaScriptCore/API/tests/JSNodeList.c
--- WebKit-r36766/JavaScriptCore/API/tests/JSNodeList.c	Mon Aug 25 23:55:38 2008
+++ WebKit-r36766-new/JavaScriptCore/API/tests/JSNodeList.c	Wed Sep 24 09:35:44 2008
@@ -52,10 +52,12 @@
 
 static JSValueRef JSNodeList_length(JSContextRef context, JSObjectRef thisObject, JSStringRef propertyName, JSValueRef* exception)
 {
+    NodeList* nodeList;
+
     UNUSED_PARAM(propertyName);
     UNUSED_PARAM(exception);
     
-    NodeList* nodeList = JSObjectGetPrivate(thisObject);
+    nodeList = JSObjectGetPrivate(thisObject);
     ASSERT(nodeList);
     return JSValueMakeNumber(context, NodeList_length(nodeList));
 }
@@ -68,9 +70,12 @@
 static JSValueRef JSNodeList_getProperty(JSContextRef context, JSObjectRef thisObject, JSStringRef propertyName, JSValueRef* exception)
 {
     NodeList* nodeList = JSObjectGetPrivate(thisObject);
+    double index;
+    unsigned uindex;
+
     ASSERT(nodeList);
-    double index = JSValueToNumber(context, JSValueMakeString(context, propertyName), exception);
-    unsigned uindex = (unsigned)index;
+    index = JSValueToNumber(context, JSValueMakeString(context, propertyName), exception);
+    uindex = (unsigned)index;
     if (uindex == index) { /* false for NaN */
         Node* node = NodeList_item(nodeList, uindex);
         if (node)
@@ -82,9 +87,11 @@
 
 static void JSNodeList_initialize(JSContextRef context, JSObjectRef thisObject)
 {
+    NodeList* nodeList;
+
     UNUSED_PARAM(context);
 
-    NodeList* nodeList = JSObjectGetPrivate(thisObject);
+    nodeList = JSObjectGetPrivate(thisObject);
     ASSERT(nodeList);
     
     NodeList_ref(nodeList);
@@ -100,9 +107,10 @@
 
 static JSClassRef JSNodeList_class(JSContextRef context)
 {
+    static JSClassRef jsClass;
+
     UNUSED_PARAM(context);
 
-    static JSClassRef jsClass;
     if (!jsClass) {
         JSClassDefinition definition = kJSClassDefinitionEmpty;
         definition.staticValues = JSNodeList_staticValues;
diff -ur WebKit-r36766/JavaScriptCore/API/tests/Node.c WebKit-r36766-new/JavaScriptCore/API/tests/Node.c
--- WebKit-r36766/JavaScriptCore/API/tests/Node.c	Mon Aug 25 23:55:38 2008
+++ WebKit-r36766-new/JavaScriptCore/API/tests/Node.c	Wed Sep 24 09:36:14 2008
@@ -39,8 +39,10 @@
 
 void Node_appendChild(Node* node, Node* child)
 {
+    NodeLink* nodeLink;
+
     Node_ref(child);
-    NodeLink* nodeLink = (NodeLink*)malloc(sizeof(NodeLink));
+    nodeLink = (NodeLink*)malloc(sizeof(NodeLink));
     nodeLink->node = child;
     nodeLink->prev = node->childNodesTail;
     node->childNodesTail = nodeLink;
diff -ur WebKit-r36766/JavaScriptCore/API/tests/NodeList.c WebKit-r36766-new/JavaScriptCore/API/tests/NodeList.c
--- WebKit-r36766/JavaScriptCore/API/tests/NodeList.c	Mon Aug 25 23:55:38 2008
+++ WebKit-r36766-new/JavaScriptCore/API/tests/NodeList.c	Wed Sep 24 09:37:03 2008
@@ -29,9 +29,11 @@
 
 extern NodeList* NodeList_new(Node* parentNode)
 {
+    NodeList* nodeList;
+
     Node_ref(parentNode);
 
-    NodeList* nodeList = (NodeList*)malloc(sizeof(NodeList));
+    nodeList = (NodeList*)malloc(sizeof(NodeList));
     nodeList->parentNode = parentNode;
     nodeList->refCount = 0;
     return nodeList;
@@ -53,13 +55,17 @@
 extern Node* NodeList_item(NodeList* nodeList, unsigned index)
 {
     unsigned length = NodeList_length(nodeList);
+    NodeLink* n;
+    unsigned i;
+    unsigned count;
+
     if (index >= length)
         return NULL;
 
     /* Linear search from tail -- good enough for our purposes here */
-    NodeLink* n = nodeList->parentNode->childNodesTail;
-    unsigned i = 0;
-    unsigned count = length - 1 - index;
+    n = nodeList->parentNode->childNodesTail;
+    i = 0;
+    count = length - 1 - index;
     while (i < count) {
         ++i;
         n = n->prev;
diff -ur WebKit-r36766/JavaScriptCore/API/tests/minidom.c WebKit-r36766-new/JavaScriptCore/API/tests/minidom.c
--- WebKit-r36766/JavaScriptCore/API/tests/minidom.c	Mon Aug 25 23:55:38 2008
+++ WebKit-r36766-new/JavaScriptCore/API/tests/minidom.c	Wed Sep 24 09:39:16 2008
@@ -38,33 +38,45 @@
 
 int main(int argc, char* argv[])
 {
+    JSGlobalContextRef context;
+    JSObjectRef globalObject;
+    JSStringRef printIString;
+    JSStringRef node;
+    char* scriptUTF8;
+    JSStringRef script;
+    JSValueRef exception;
+    JSValueRef result;
+
     const char *scriptPath = "minidom.js";
     if (argc > 1) {
         scriptPath = argv[1];
     }
     
-    JSGlobalContextRef context = JSGlobalContextCreateInGroup(NULL, NULL);
-    JSObjectRef globalObject = JSContextGetGlobalObject(context);
+    context = JSGlobalContextCreateInGroup(NULL, NULL);
+    globalObject = JSContextGetGlobalObject(context);
     
-    JSStringRef printIString = JSStringCreateWithUTF8CString("print");
+    printIString = JSStringCreateWithUTF8CString("print");
     JSObjectSetProperty(context, globalObject, printIString, JSObjectMakeFunctionWithCallback(context, printIString, print), kJSPropertyAttributeNone, NULL);
     JSStringRelease(printIString);
     
-    JSStringRef node = JSStringCreateWithUTF8CString("Node");
+    node = JSStringCreateWithUTF8CString("Node");
     JSObjectSetProperty(context, globalObject, node, JSObjectMakeConstructor(context, JSNode_class(context), JSNode_construct), kJSPropertyAttributeNone, NULL);
     JSStringRelease(node);
     
-    char* scriptUTF8 = createStringWithContentsOfFile(scriptPath);
-    JSStringRef script = JSStringCreateWithUTF8CString(scriptUTF8);
-    JSValueRef exception;
-    JSValueRef result = JSEvaluateScript(context, script, NULL, NULL, 1, &exception);
+    scriptUTF8 = createStringWithContentsOfFile(scriptPath);
+    script = JSStringCreateWithUTF8CString(scriptUTF8);
+    result = JSEvaluateScript(context, script, NULL, NULL, 1, &exception);
     if (result)
         printf("PASS: Test script executed successfully.\n");
     else {
+	JSStringRef exceptionIString;
+	size_t exceptionUTF8Size;
+	char* exceptionUTF8;
+
         printf("FAIL: Test script threw exception:\n");
-        JSStringRef exceptionIString = JSValueToStringCopy(context, exception, NULL);
-        size_t exceptionUTF8Size = JSStringGetMaximumUTF8CStringSize(exceptionIString);
-        char* exceptionUTF8 = (char*)malloc(exceptionUTF8Size);
+        exceptionIString = JSValueToStringCopy(context, exception, NULL);
+        exceptionUTF8Size = JSStringGetMaximumUTF8CStringSize(exceptionIString);
+        exceptionUTF8 = (char*)malloc(exceptionUTF8Size);
         JSStringGetUTF8CString(exceptionIString, exceptionUTF8, exceptionUTF8Size);
         printf("%s\n", exceptionUTF8);
         free(exceptionUTF8);
@@ -87,9 +99,10 @@
     if (argumentCount > 0) {
         JSStringRef string = JSValueToStringCopy(context, arguments[0], exception);
         size_t numChars = JSStringGetMaximumUTF8CStringSize(string);
-        char stringUTF8[numChars];
+        char* stringUTF8 = malloc(sizeof(char)*numChars);
         JSStringGetUTF8CString(string, stringUTF8, numChars);
         printf("%s\n", stringUTF8);
+	free(stringUTF8);
     }
     
     return JSValueMakeUndefined(context);
diff -ur WebKit-r36766/JavaScriptCore/GNUmakefile.am WebKit-r36766-new/JavaScriptCore/GNUmakefile.am
--- WebKit-r36766/JavaScriptCore/GNUmakefile.am	Mon Sep 22 19:36:12 2008
+++ WebKit-r36766-new/JavaScriptCore/GNUmakefile.am	Tue Sep 23 17:35:05 2008
@@ -384,7 +384,7 @@
 	$(PERL) $^ > $@
 
 %.lut.h: $(CREATE_HASH_TABLE) %.cpp
-	$^ -i > $@
+	$(PERL) $^ -i > $@
 
 JavaScriptCore/pcre/chartables.c: $(srcdir)/JavaScriptCore/pcre/dftables
 	$^ $@
@@ -407,7 +407,7 @@
 	JavaScriptCore/API/tests/NodeList.h \
 	JavaScriptCore/API/tests/minidom.c
 
-Programs_minidom_CPPFLAGS = \
+Programs_minidom_CPPFLAGS = -DJS_INTERNAL \
 	$(global_cppflags) \
 	$(javascriptcore_cppflags)
 
@@ -418,15 +418,13 @@
 	$(GLOBALDEPS_CFLAGS)
 
 Programs_minidom_LDADD = \
-	 libJavaScriptCore.la \
-	 -lm \
-	 -lstdc++
+	 libJavaScriptCore.la
 
 # jsc
 Programs_jsc_SOURCES = \
 	JavaScriptCore/kjs/Shell.cpp
 
-Programs_jsc_CPPFLAGS = \
+Programs_jsc_CPPFLAGS = -DJS_INTERNAL \
 	$(global_cppflags) \
 	$(javascriptcore_cppflags)
 
diff -ur WebKit-r36766/JavaScriptCore/kjs/config.h WebKit-r36766-new/JavaScriptCore/kjs/config.h
--- WebKit-r36766/JavaScriptCore/kjs/config.h	Fri Sep 12 23:20:31 2008
+++ WebKit-r36766-new/JavaScriptCore/kjs/config.h	Wed Sep 24 12:40:42 2008
@@ -64,3 +64,4 @@
 #include <wtf/DisallowCType.h>
 #endif
 
+typedef int pid_t;
diff -ur WebKit-r36766/WebCore/GNUmakefile.am WebKit-r36766-new/WebCore/GNUmakefile.am
--- WebKit-r36766/WebCore/GNUmakefile.am	Mon Sep 22 19:36:12 2008
+++ WebKit-r36766-new/WebCore/GNUmakefile.am	Wed Sep 24 14:14:27 2008
@@ -1722,6 +1722,7 @@
 	WebCore/plugins/PluginArray.h \
 	WebCore/plugins/PluginData.cpp \
 	WebCore/plugins/PluginData.h \
+	WebCore/plugins/win/PluginDatabaseWin.cpp \
 	WebCore/plugins/PluginDatabase.cpp \
 	WebCore/plugins/PluginDatabase.h \
 	WebCore/plugins/PluginDebug.h \
@@ -3460,10 +3461,10 @@
 
 # lookup tables for old-style JavaScript bindings
 %.lut.h: %.cpp $(CREATE_HASH_TABLE)
-	$(CREATE_HASH_TABLE) $< > $@
+	$(PERL) $(CREATE_HASH_TABLE) $< > $@
 
 WebCore/bindings/js/%Table.cpp: $(srcdir)/WebCore/bindings/js/JSHTMLInputElementBase.cpp $(CREATE_HASH_TABLE)
-	$(CREATE_HASH_TABLE) $< > $@
+	$(PERL) $(CREATE_HASH_TABLE) $< > $@
 
 # HTML tag and attribute names
 DerivedSources/HTMLNames.h: DerivedSources/HTMLNames.cpp;
diff -ur WebKit-r36766/WebCore/bindings/scripts/IDLParser.pm WebKit-r36766-new/WebCore/bindings/scripts/IDLParser.pm
--- WebKit-r36766/WebCore/bindings/scripts/IDLParser.pm	Thu Aug  7 04:40:18 2008
+++ WebKit-r36766-new/WebCore/bindings/scripts/IDLParser.pm	Tue Sep 23 17:35:56 2008
@@ -64,7 +64,7 @@
     my $preprocessor = shift;
 
     if (!$preprocessor) {
-        $preprocessor = "/usr/bin/gcc -E -P -x c++";
+        $preprocessor = "gcc -E -P -x c++";
     }
 
     if (!$defines) {
diff -ur WebKit-r36766/WebCore/bindings/scripts/InFilesParser.pm WebKit-r36766-new/WebCore/bindings/scripts/InFilesParser.pm
--- WebKit-r36766/WebCore/bindings/scripts/InFilesParser.pm	Thu Aug  7 04:40:18 2008
+++ WebKit-r36766-new/WebCore/bindings/scripts/InFilesParser.pm	Wed Sep 24 10:52:57 2008
@@ -87,7 +87,7 @@
     foreach (<$fileStream>) {
         # Empty line, change from common parameter part
         # to per tag part if we have started parsing.
-        if (/^$/) {
+        if (/^\s*$/) {
             if ($hasStartedParsing) {
                 $isParsingCommonParameters = 0;
             }
diff -ur WebKit-r36766/WebCore/css/make-css-file-arrays.pl WebKit-r36766-new/WebCore/css/make-css-file-arrays.pl
--- WebKit-r36766/WebCore/css/make-css-file-arrays.pl	Fri May  9 07:39:57 2008
+++ WebKit-r36766-new/WebCore/css/make-css-file-arrays.pl	Wed Sep 24 11:29:30 2008
@@ -28,7 +28,7 @@
 GetOptions('preprocessor=s' => \$preprocessor);
 
 if (!$preprocessor) {
-    $preprocessor = "/usr/bin/gcc -E -P -x c++";
+    $preprocessor = "gcc -E -P -x c++";
 }
 
 my $header = $ARGV[0];
diff -ur WebKit-r36766/WebCore/dom/make_names.pl WebKit-r36766-new/WebCore/dom/make_names.pl
--- WebKit-r36766/WebCore/dom/make_names.pl	Sun Sep 21 03:12:16 2008
+++ WebKit-r36766-new/WebCore/dom/make_names.pl	Wed Sep 24 10:54:00 2008
@@ -42,7 +42,7 @@
 my %attrs = ();
 my %parameters = ();
 my $extraDefines = 0;
-my $preprocessor = "/usr/bin/gcc -E -P -x c++";
+my $preprocessor = "gcc -E -P -x c++";
 my %svgCustomMappings = ();
 my %htmlCustomMappings = ();
 
diff -ur WebKit-r36766/WebCore/loader/FTPDirectoryDocument.cpp WebKit-r36766-new/WebCore/loader/FTPDirectoryDocument.cpp
--- WebKit-r36766/WebCore/loader/FTPDirectoryDocument.cpp	Tue Jul 15 08:18:47 2008
+++ WebKit-r36766-new/WebCore/loader/FTPDirectoryDocument.cpp	Tue Sep 23 17:36:56 2008
@@ -235,7 +235,7 @@
 }
 
 #define localtime_r(x, y) localTimeQt(x, y)
-#elif PLATFORM(WIN) && !defined(localtime_r)
+#elif (PLATFORM(WIN) || PLATFORM(GTK)) && !defined(localtime_r)
 #define localtime_r(x, y) localtime_s((y), (x))
 #endif
 
diff -ur WebKit-r36766/WebCore/loader/FTPDirectoryParser.cpp WebKit-r36766-new/WebCore/loader/FTPDirectoryParser.cpp
--- WebKit-r36766/WebCore/loader/FTPDirectoryParser.cpp	Tue Jul 15 08:18:47 2008
+++ WebKit-r36766-new/WebCore/loader/FTPDirectoryParser.cpp	Tue Sep 23 17:37:15 2008
@@ -51,7 +51,7 @@
 }
 
 #define gmtime_r(x, y) gmtimeQt(x, y)
-#elif PLATFORM(WIN) && !defined(gmtime_r)
+#elif (PLATFORM(WIN) || PLATFORM(GTK)) && !defined(gmtime_r)
 #define gmtime_r(x, y) gmtime_s((y), (x))
 #endif
 
diff -ur WebKit-r36766/WebCore/platform/gtk/FileSystemGtk.cpp WebKit-r36766-new/WebCore/platform/gtk/FileSystemGtk.cpp
--- WebKit-r36766/WebCore/platform/gtk/FileSystemGtk.cpp	Fri Jul 11 09:17:38 2008
+++ WebKit-r36766-new/WebCore/platform/gtk/FileSystemGtk.cpp	Tue Sep 23 17:37:41 2008
@@ -120,7 +120,7 @@
     if (!filename)
         return false;
 
-    gint result = g_mkdir_with_parents(filename, S_IRWXU);
+    gint result = g_mkdir_with_parents(filename, 0700);
     g_free(filename);
 
     return result == 0;
diff -ur WebKit-r36766/WebCore/platform/gtk/KeyEventGtk.cpp WebKit-r36766-new/WebCore/platform/gtk/KeyEventGtk.cpp
--- WebKit-r36766/WebCore/platform/gtk/KeyEventGtk.cpp	Sat May 31 05:35:39 2008
+++ WebKit-r36766-new/WebCore/platform/gtk/KeyEventGtk.cpp	Wed Sep 24 12:18:01 2008
@@ -28,9 +28,9 @@
  */
 
 #include "config.h"
+#include "KeyboardCodes.h"
 #include "PlatformKeyboardEvent.h"
 
-#include "KeyboardCodes.h"
 #include "NotImplemented.h"
 #include "TextEncoding.h"
 
diff -ur WebKit-r36766/WebCore/platform/gtk/PasteboardGtk.cpp WebKit-r36766-new/WebCore/platform/gtk/PasteboardGtk.cpp
--- WebKit-r36766/WebCore/platform/gtk/PasteboardGtk.cpp	Fri May  9 07:40:01 2008
+++ WebKit-r36766-new/WebCore/platform/gtk/PasteboardGtk.cpp	Tue Sep 23 17:38:05 2008
@@ -29,6 +29,7 @@
 #include "RenderImage.h"
 #include "KURL.h"
 #include "markup.h"
+#include "Range.h"
 
 #include <gtk/gtk.h>
 
diff -ur WebKit-r36766/WebCore/plugins/PluginView.cpp WebKit-r36766-new/WebCore/plugins/PluginView.cpp
--- WebKit-r36766/WebCore/plugins/PluginView.cpp	Sat Sep 20 04:32:01 2008
+++ WebKit-r36766-new/WebCore/plugins/PluginView.cpp	Wed Sep 24 12:02:43 2008
@@ -47,7 +47,7 @@
 #include "Page.h"
 #include "FocusController.h"
 #include "PlatformMouseEvent.h"
-#if PLATFORM(WIN_OS) && !PLATFORM(WX) && ENABLE(NETSCAPE_PLUGIN_API)
+#if PLATFORM(WIN_OS) && !PLATFORM(WX) && !PLATFORM(GTK) && ENABLE(NETSCAPE_PLUGIN_API)
 #include "PluginMessageThrottlerWin.h"
 #endif
 #include "PluginPackage.h"
@@ -548,7 +548,7 @@
 #if PLATFORM(QT)
     , m_isNPAPIPlugin(false)
 #endif
-#if PLATFORM(WIN_OS) && !PLATFORM(WX) && ENABLE(NETSCAPE_PLUGIN_API)
+#if PLATFORM(WIN_OS) && !PLATFORM(WX) && !PLATFORM(GTK) && ENABLE(NETSCAPE_PLUGIN_API)
     , m_pluginWndProc(0)
     , m_lastMessage(0)
     , m_isCallingPluginWndProc(false)
diff -ur WebKit-r36766/WebCore/plugins/PluginView.h WebKit-r36766-new/WebCore/plugins/PluginView.h
--- WebKit-r36766/WebCore/plugins/PluginView.h	Sat Sep 20 04:32:01 2008
+++ WebKit-r36766-new/WebCore/plugins/PluginView.h	Wed Sep 24 12:01:53 2008
@@ -63,7 +63,7 @@
     class KeyboardEvent;
     class MouseEvent;
     class KURL;
-#if PLATFORM(WIN_OS) && !PLATFORM(WX) && ENABLE(NETSCAPE_PLUGIN_API)
+#if PLATFORM(WIN_OS) && !PLATFORM(WX) && !PLATFORM(GTK) && ENABLE(NETSCAPE_PLUGIN_API)
     class PluginMessageThrottlerWin;
 #endif
     class PluginPackage;
@@ -157,7 +157,7 @@
 
         virtual bool isPluginView() const { return true; }
 
-#if PLATFORM(WIN_OS) && !PLATFORM(WX) && ENABLE(NETSCAPE_PLUGIN_API)
+#if PLATFORM(WIN_OS) && !PLATFORM(WX) && !PLATFORM(GTK) && ENABLE(NETSCAPE_PLUGIN_API)
         static LRESULT CALLBACK PluginViewWndProc(HWND, UINT, WPARAM, LPARAM);
         LRESULT wndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam);
         WNDPROC pluginWndProc() const { return m_pluginWndProc; }
@@ -247,7 +247,7 @@
         bool m_needsXEmbed;
 #endif
 
-#if PLATFORM(WIN_OS) && !PLATFORM(WX) && ENABLE(NETSCAPE_PLUGIN_API)
+#if PLATFORM(WIN_OS) && !PLATFORM(WX) && !PLATFORM(GTK) && ENABLE(NETSCAPE_PLUGIN_API)
         OwnPtr<PluginMessageThrottlerWin> m_messageThrottler;
         WNDPROC m_pluginWndProc;
         unsigned m_lastMessage;
diff -ur WebKit-r36766/WebCore/plugins/gtk/PluginViewGtk.cpp WebKit-r36766-new/WebCore/plugins/gtk/PluginViewGtk.cpp
--- WebKit-r36766/WebCore/plugins/gtk/PluginViewGtk.cpp	Sat Sep 20 04:32:01 2008
+++ WebKit-r36766-new/WebCore/plugins/gtk/PluginViewGtk.cpp	Wed Sep 24 12:16:01 2008
@@ -442,7 +442,7 @@
             *((XID *)w) = GDK_WINDOW_XWINDOW(containingWindow()->window);
 #endif
 #ifdef GDK_WINDOWING_WIN32
-            *((HWND *)w) = GDK_WINDOWING_HWND(containingWindow()->window);
+            *((HWND *)w) = (HWND)GDK_WINDOW_HWND(containingWindow()->window);
 #endif
             return NPERR_NO_ERROR;
         }
diff -ur WebKit-r36766/WebKit/gtk/WebCoreSupport/EditorClientGtk.cpp WebKit-r36766-new/WebKit/gtk/WebCoreSupport/EditorClientGtk.cpp
--- WebKit-r36766/WebKit/gtk/WebCoreSupport/EditorClientGtk.cpp	Sun Sep 14 11:52:19 2008
+++ WebKit-r36766-new/WebKit/gtk/WebCoreSupport/EditorClientGtk.cpp	Wed Sep 24 11:11:41 2008
@@ -18,6 +18,7 @@
  */
 
 #include "config.h"
+#include "KeyboardCodes.h"
 #include "EditorClientGtk.h"
 
 #include "CString.h"
diff -ur WebKit-r36766/WebKitTools/GtkLauncher/main.c WebKit-r36766-new/WebKitTools/GtkLauncher/main.c
--- WebKit-r36766/WebKitTools/GtkLauncher/main.c	Thu Apr 17 23:37:24 2008
+++ WebKit-r36766-new/WebKitTools/GtkLauncher/main.c	Tue Sep 23 17:39:42 2008
@@ -47,10 +47,11 @@
 update_title (GtkWindow* window)
 {
     GString* string = g_string_new (main_title);
+    gchar* title;
     g_string_append (string, " - WebKit Launcher");
     if (load_progress < 100)
         g_string_append_printf (string, " (%d%%)", load_progress);
-    gchar* title = g_string_free (string, FALSE);
+    title = g_string_free (string, FALSE);
     gtk_window_set_title (window, title);
     g_free (title);
 }
@@ -137,11 +138,11 @@
 {
     GtkWidget* toolbar = gtk_toolbar_new ();
 
+    GtkToolItem* item;
+
     gtk_toolbar_set_orientation (GTK_TOOLBAR (toolbar), GTK_ORIENTATION_HORIZONTAL);
     gtk_toolbar_set_style (GTK_TOOLBAR (toolbar), GTK_TOOLBAR_BOTH_HORIZ);
 
-    GtkToolItem* item;
-
     /* the back button */
     item = gtk_tool_button_new_from_stock (GTK_STOCK_GO_BACK);
     g_signal_connect (G_OBJECT (item), "clicked", G_CALLBACK (go_back_cb), NULL);
@@ -182,9 +183,12 @@
 int
 main (int argc, char* argv[])
 {
+    GtkWidget* vbox;
+    gchar* uri;
+
     gtk_init (&argc, &argv);
 
-    GtkWidget* vbox = gtk_vbox_new (FALSE, 0);
+    vbox = gtk_vbox_new (FALSE, 0);
     gtk_box_pack_start (GTK_BOX (vbox), create_toolbar (), FALSE, FALSE, 0);
     gtk_box_pack_start (GTK_BOX (vbox), create_browser (), TRUE, TRUE, 0);
     gtk_box_pack_start (GTK_BOX (vbox), create_statusbar (), FALSE, FALSE, 0);
@@ -192,7 +196,7 @@
     main_window = create_window ();
     gtk_container_add (GTK_CONTAINER (main_window), vbox);
 
-    gchar* uri = (gchar*) (argc > 1 ? argv[1] : "http://www.google.com/");
+    uri = (gchar*) (argc > 1 ? argv[1] : "http://www.google.com/");
     webkit_web_view_open (web_view, uri);
 
     gtk_widget_grab_focus (GTK_WIDGET (web_view));
diff -ur WebKit-r36766/autogen.sh WebKit-r36766-new/autogen.sh
--- WebKit-r36766/autogen.sh	Thu Apr 17 23:37:24 2008
+++ WebKit-r36766-new/autogen.sh	Tue Sep 23 17:40:05 2008
@@ -54,4 +54,4 @@
 
 cd $ORIGDIR || exit 1
 
-$srcdir/configure $AUTOGEN_CONFIGURE_ARGS "$@" || exit $?
+#$srcdir/configure $AUTOGEN_CONFIGURE_ARGS "$@" || exit $?
