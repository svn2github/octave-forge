Index: config/config.nt
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/config/config.nt,v
retrieving revision 1.18
diff -c -p -u -r1.18 config.nt
--- config/config.nt	24 Apr 2008 16:45:59 -0000	1.18
+++ config/config.nt	6 Oct 2008 14:52:08 -0000
@@ -28,7 +28,7 @@
 /* #undef DOS32 */
 
 /* Define to allow placement of rectangles and other objects */
-#define EAM_OBJECTS 1
+/* undef EAM_OBJECTS */
 
 /* Define if color information should be passed for each vertex. */
 /* #undef EXTENDED_COLOR_SPECS */
@@ -555,7 +555,8 @@
 #define GP_EXCEPTION_NAME _exception
 #define GP_MATHERR _matherr
 #define snprintf _snprintf
-#define vsnprintf _vsnprintf
+/*#define vsnprintf _vsnprintf*/
+#define isnan _isnan
 
 /* gnuplot.gih is not used by wgnuplot */
 #define NO_GIH 1
Index: config/makefile.nt
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/config/makefile.nt,v
retrieving revision 1.21
diff -c -p -u -r1.21 makefile.nt
--- config/makefile.nt	23 Feb 2008 10:04:33 -0000	1.21
+++ config/makefile.nt	6 Oct 2008 14:52:08 -0000
@@ -31,8 +31,17 @@
 # where to place gnuplot.gih helpfile
 HELPFILE = wgnuplot.hlp
 
+# installation directory
+DESTDIR = d:\Software\VC8Libs
+
+# wxWidgets source tree location
+WXLOCATION = d:\Software\VC8Libs
+
+# Support libraries location (cairo, pango...)
+VCLIBS_ROOT = d:\Software\VC8Libs
+
 # directory for PostScript prolog and associated files
-GNUPLOT_PS_DIR = share\\PostScript
+GNUPLOT_PS_DIR = share\gnuplot\PostScript
 
 TOP = .
 
@@ -55,10 +64,15 @@ LD = link
 # compiler flags
 OPTIONS = /DUSE_MOUSE
 OPTIONS = $(OPTIONS) /DHAVE_LIBGD /DHAVE_GD_GIF /DGIF_ANIMATION /DHAVE_GD_PNG /DHAVE_GD_JPEG /DHAVE_GD_TTF
-OPTIONS = $(OPTIONS) /DHAVE_LIBPDF
+#OPTIONS = $(OPTIONS) /DHAVE_LIBPDF
 OPTIONS = $(OPTIONS) /DGNUPLOT_HISTORY
-CBASEFLAGS = /G5 /GX /GR /MD /O2 /nologo
+OPTIONS = $(OPTIONS) /DWXWIDGETS
+CBASEFLAGS = /EHsc /GR /MD /O2 /nologo /D_CRT_SECURE_NO_DEPRECATE
 CFLAGS = $(CBASEFLAGS) /I$(TOP) /D_Windows /DWIN32 /DHAVE_CONFIG_H /D__MSC__ /DHELPFILE=\"$(HELPFILE)\" $(OPTIONS)
+CXXFLAGS = /D_WINDOWS /D__WXMSW__ /DNOPCH /I$(WXLOCATION)\include /I$(WXLOCATION)\lib\vc_lib\msw
+CAIRO_CFLAGS = /I$(VCLIBS_ROOT)\include\cairo
+PANGO_CFLAGS = /I$(VCLIBS_ROOT)\include\pango-1.0 /I$(VCLIBS_ROOT)\include\glib-2.0 /I$(VCLIBS_ROOT)\lib\glib-2.0\include
+CONSOLE_CFLAGS = /DCONSOLE
 
 !IF "$(PROCESSOR_ARCHITECTURE)" == "ALPHA"
 MACHINE = $(PROCESSOR_ARCHITECTURE)
@@ -67,11 +81,13 @@ MACHINE = IX86
 !ENDIF
 
 # paths for external libs added here... 
-LDFLAGS = /subsystem:windows /nologo /MACHINE:$(MACHINE) /MAP:GNUPLOT /libpath:..\src\pdflib\pdflib /libpath:..\src\gdwin32 
+#LDFLAGS = /subsystem:windows /nologo /MACHINE:$(MACHINE) /MAP:GNUPLOT /libpath:..\src\pdflib\pdflib /libpath:..\src\gdwin32 
+LDFLAGS = /nologo /MACHINE:$(MACHINE) /MAP:GNUPLOT /LIBPATH:$(WXLOCATION)\lib\vc_lib
 
 # ...and here.
 # see other terminal defines in term.h
-TERMFLAGS = /I..\\term /I..\\src\\pdflib\\pdflib /I..\\src\\gdwin32 /DGNUPLOT_PS_DIR=\"$(GNUPLOT_PS_DIR)\"
+#TERMFLAGS = /I..\\term /I..\\src\\pdflib\\pdflib /I..\\src\\gdwin32 /DGNUPLOT_PS_DIR=\"$(GNUPLOT_PS_DIR)\"
+TERMFLAGS = /I..\\term /DGNUPLOT_PS_DIR=\"$(GNUPLOT_PS_DIR:\=\\)\"
 
 # macros for makefile.all
 O=obj
@@ -79,7 +95,7 @@ T=..\\term\\
 D=..\\docs\\
 M=..\\demo\\
 
-default: wgnuplot.exe $(HELPFILE) wgnuplot.mnu $(M)bf_test.exe pgnuplot.exe
+default: wgnuplot.exe wgnuplot.mnu $(M)bf_test.exe pgnuplot.exe wgnuplot_pipes.exe # $(HELPFILE) 
 
 !INCLUDE makefile.all
 
@@ -88,6 +104,8 @@ OBJS = $(COREOBJS) version.obj
 WINOBJS = winmain.obj wgnuplib.obj wgraph.obj wprinter.obj wtext.obj \
 	wpause.obj wmenu.obj gpexecute.obj
 
+WXOBJS = wxt_gui.obj gp_cairo.obj
+
 WINDOWS = makefile.win makefile.nt README.win win\wcommon.h \
 	win\wgnuplib.c win\wgnuplib.def win\wgnuplib.h win\wgnuplib.rc \
 	win\wgnuplot.def win\wgnuplot.hpj win\wgnuplot.mnu win\wgraph.c \
@@ -95,10 +113,15 @@ WINDOWS = makefile.win makefile.nt READM
 	win\wresourc.h win\wtext.c win\wtext.h win\geticon.c \
 	$(D)doc2rtf.c $(T)win.trm win\grpicon.ico win\texticon.ico
 
+ALL_CONSOLE_OBJS = $(OBJS:.obj=.cobj) $(WINOBJS:.obj=.cobj) $(WXOBJS:.obj=.cobj)
+
 # default rules
 .c.obj:
 	$(CC) $(CFLAGS) $*.c
 
+.c.cobj:
+	$(CC) $(CFLAGS) $(CONSOLE_CFLAGS) $*.c /Fo$@
+
 $(OBJS): config.h
 
 linkopt1.msw: makefile.nt
@@ -112,6 +135,8 @@ linkopt1.msw: makefile.nt
 	echo wpause >> linkopt1.msw
 	echo wgraph >> linkopt1.msw
 	echo wprinter >> linkopt1.msw
+	echo wxt_gui >> linkopt1.msw
+	echo gp_cairo >> linkopt1.msw
 	echo kernel32.lib >> linkopt1.msw
 	echo user32.lib >> linkopt1.msw
 	echo gdi32.lib >> linkopt1.msw
@@ -119,8 +144,21 @@ linkopt1.msw: makefile.nt
 	echo comdlg32.lib >> linkopt1.msw
 	echo advapi32.lib >> linkopt1.msw
 	echo shell32.lib >> linkopt1.msw
-	echo pdflib.lib >> linkopt1.msw
-	echo bgd.lib >> linkopt1.msw
+	echo ole32.lib >> linkopt1.msw
+	echo oleaut32.lib >> linkopt1.msw
+	echo comctl32.lib >> linkopt1.msw
+#	echo pdflib.lib >> linkopt1.msw
+	echo gd.lib >> linkopt1.msw
+	echo wxmsw28.lib >> linkopt1.msw
+	echo wxtiff.lib >> linkopt1.msw
+	echo jpeg.lib >> linkopt1.msw
+	echo png.lib >> linkopt1.msw
+	echo glib-2.0.lib >> linkopt1.msw
+	echo gobject-2.0.lib >> linkopt1.msw
+	echo gmodule-2.0.lib >> linkopt1.msw
+	echo cairo.lib >> linkopt1.msw
+	echo pango-1.0.lib >> linkopt1.msw
+	echo pangocairo-1.0.lib >> linkopt1.msw
 	echo wgnuplot.res >> linkopt1.msw
 
 makefile.nt: ..\config\makefile.nt
@@ -129,45 +167,96 @@ makefile.nt: ..\config\makefile.nt
 config.h: ..\config\config.nt
 	copy ..\config\config.nt config.h
 
-wgnuplot.exe: $(OBJS) $(WINOBJS) win\wgnuplot.def wgnuplot.res linkopt1.msw texticon.ico grpicon.ico
-	$(LD) $(LDFLAGS) /out:wgnuplot.exe @linkopt1.msw
+wgnuplot.exe: $(OBJS) $(WINOBJS) $(WXOBJS) win\wgnuplot.def wgnuplot.res linkopt1.msw texticon.ico grpicon.ico
+	$(LD) /subsystem:windows $(LDFLAGS) /out:wgnuplot.exe @linkopt1.msw
+	mt -outputresource:$@ -manifest $@.manifest
 
 # rules
 
 wgnuplot.res :  win\wgnuplot.rc win\wgnuplib.rc win\wresourc.h texticon.ico grpicon.ico
-	rc /l 0x409 /fowgnuplot.res /i "win" /d "NDEBUG" /d WIN32 /d MSRC win\wgnuplot.rc
+	rc /l 0x409 /fowgnuplot.res /i "win" /i "$(WXLOCATION)\include" /d "NDEBUG" /d WIN32 /d MSRC /d WXWIDGETS win\wgnuplot.rc
 
 term.obj: term.c term.h plot.h setshow.h bitmap.h $(CORETERM)
-	$(CC) $(CFLAGS) $(TERMFLAGS) term.c
+	$(CC) $(CFLAGS) $(TERMFLAGS) term.c /Fo$@
+
+term.cobj: term.c term.h plot.h setshow.h bitmap.h $(CORETERM)
+	$(CC) $(CFLAGS) $(CONSOLE_CFLAGS) $(TERMFLAGS) term.c /Fo$@
 
 winmain.obj: win\winmain.c win\wgnuplib.h win\wtext.h plot.h
-	$(CC) $(CFLAGS) win\winmain.c
+	$(CC) $(CFLAGS) win\winmain.c /Fo$@
+
+winmain.cobj: win\winmain.c win\wgnuplib.h win\wtext.h plot.h
+	$(CC) $(CFLAGS) $(CONSOLE_CFLAGS) win\winmain.c /Fo$@
 
 WINDEPS = win\wgnuplib.h win\wcommon.h win\wresourc.h
 
 wgnuplib.obj: win\wgnuplib.c $(WINDEPS)
-	$(CC) $(CFLAGS) win\wgnuplib.c
+	$(CC) $(CFLAGS) win\wgnuplib.c /Fo$@
+
+wgnuplib.cobj: win\wgnuplib.c $(WINDEPS)
+	$(CC) $(CFLAGS) $(CONSOLE_CFLAGS) win\wgnuplib.c /Fo$@
 
 wmenu.obj: win\wmenu.c $(WINDEPS)
-	$(CC) $(CFLAGS) win\wmenu.c
+	$(CC) $(CFLAGS) win\wmenu.c /Fo$@
+
+wmenu.cobj: win\wmenu.c $(WINDEPS)
+	$(CC) $(CFLAGS) $(CONSOLE_CFLAGS) win\wmenu.c /Fo$@
 
 wtext.obj: win\wtext.c $(WINDEPS)
-	$(CC) $(CFLAGS) win\wtext.c
+	$(CC) $(CFLAGS) win\wtext.c /Fo$@
+
+wtext.cobj: win\wtext.c $(WINDEPS)
+	$(CC) $(CFLAGS) $(CONSOLE_CFLAGS) win\wtext.c /Fo$@
 
 wpause.obj: win\wpause.c $(WINDEPS)
-	$(CC) $(CFLAGS) win\wpause.c
+	$(CC) $(CFLAGS) win\wpause.c /Fo$@
+
+wpause.cobj: win\wpause.c $(WINDEPS)
+	$(CC) $(CFLAGS) $(CONSOLE_CFLAGS) win\wpause.c /Fo$@
 
 wprinter.obj: win\wprinter.c $(WINDEPS)
-	$(CC) $(CFLAGS) win\wprinter.c
+	$(CC) $(CFLAGS) win\wprinter.c /Fo$@
+
+wprinter.cobj: win\wprinter.c $(WINDEPS)
+	$(CC) $(CFLAGS) $(CONSOLE_CFLAGS) win\wprinter.c /Fo$@
 
 wgraph.obj: win\wgraph.c $(WINDEPS)
-	$(CC) $(CFLAGS) win\wgraph.c
+	$(CC) $(CFLAGS) win\wgraph.c /Fo$@
+
+wgraph.cobj: win\wgraph.c $(WINDEPS)
+	$(CC) $(CFLAGS) $(CONSOLE_CFLAGS) win\wgraph.c /Fo$@
+
+wxt_gui.obj: wxterminal\wxt_gui.cpp wxterminal\wxt_gui.h $(WXLOCATION)
+	$(CXX) -c $(CFLAGS) $(CXXFLAGS) $(CAIRO_CFLAGS) wxterminal\wxt_gui.cpp /Fo$@
+
+wxt_gui.cobj: wxterminal\wxt_gui.cpp wxterminal\wxt_gui.h $(WXLOCATION)
+	$(CXX) -c $(CFLAGS) $(CXXFLAGS) $(CAIRO_CFLAGS) $(CONSOLE_CFLAGS) wxterminal\wxt_gui.cpp /Fo$@
+
+gp_cairo.obj: wxterminal\gp_cairo.c wxterminal\gp_cairo.h
+	$(CC) -c $(CFLAGS) $(CXXFLAGS) $(CAIRO_CFLAGS) $(PANGO_CFLAGS) wxterminal\gp_cairo.c /Fo$@
+
+gp_cairo.cobj: wxterminal\gp_cairo.c wxterminal\gp_cairo.h
+	$(CC) -c $(CFLAGS) $(CXXFLAGS) $(CAIRO_CFLAGS) $(PANGO_CFLAGS) $(CONSOLE_CFLAGS) wxterminal\gp_cairo.c /Fo$@
 
 wgnuplot.mnu: win\wgnuplot.mnu
 	copy win\wgnuplot.mnu wgnuplot.mnu
 
-pgnuplot.exe: win\pgnuplot.c
-	cl $(CBASEFLAGS) /I$(TOP) win\pgnuplot.c /link version.obj user32.lib
+wgnuplot_pipes.exe: win\pgnuplot.c
+	cl $(CBASEFLAGS) /I$(TOP) win\pgnuplot.c /Fe$@ /link version.obj user32.lib
+	mt -outputresource:$@ -manifest $@.manifest
+
+pgnuplot.exe: $(ALL_CONSOLE_OBJS) win\wgnuplot.def wgnuplot.res texticon.ico grpicon.ico
+	$(LD) /subsystem:console $(LDFLAGS) /out:$@ @<<
+$(ALL_CONSOLE_OBJS)
+kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib
+advapi32.lib shell32.lib ole32.lib oleaut32.lib comctl32.lib
+gd.lib wxmsw28.lib wxtiff.lib
+jpeg.lib png.lib
+glib-2.0.lib gobject-2.0.lib gmodule-2.0.lib
+cairo.lib pango-1.0.lib pangocairo-1.0.lib
+wgnuplot.res
+<<
+	mt -outputresource:$@ -manifest $@.manifest
 
 # extract icons from wgnuplot.rc
 texticon.ico: grpicon.ico
@@ -201,6 +290,7 @@ dbinary.obj: binary.c
 # clean up temporary files
 clean:
 	if exist *.obj del *.obj
+	if exist *.cobj del *.cobj
 	if exist *.ico del *.ico
 	if exist wgnuplot.res del wgnuplot.res
 	if exist win\gnuplot.rtf del win\gnuplot.rtf
@@ -216,6 +306,7 @@ veryclean: clean
 	if exist wgnuplot.hlp del wgnuplot.hlp
 	if exist wgnuplot.mnu del wgnuplot.mnu
 	if exist pgnuplot.exe del pgnuplot.exe
+	if exist wgnuplot_pipes.exe del wgnuplot_pipes.exe
 	if exist ..\demo\binary1 del ..\demo\binary1
 	if exist ..\demo\binary2 del ..\demo\binary2
 	if exist ..\demo\binary3 del ..\demo\binary3
@@ -223,3 +314,18 @@ veryclean: clean
 	if exist ..\demo\soundfit.par del ..\demo\soundfit.par
 	if exist config.h del config.h
 	if exist makefile.nt del makefile.nt
+	if exist *.manifest del *.manifest
+
+install: default
+	if not exist $(DESTDIR) mkdir $(DESTDIR)\bin
+	copy /Y wgnuplot.exe $(DESTDIR)\bin\wgnuplot.exe
+	copy /Y win\wgnuplot.mnu $(DESTDIR)\bin\wgnuplot.mnu
+#	copy /Y wgnuplot.hlp $(DESTDIR)\bin\wgnuplot.hlp
+	copy /Y pgnuplot.exe $(DESTDIR)\bin\pgnuplot.exe
+	copy /Y wgnuplot_pipes.exe $(DESTDIR)\bin\wgnuplot_pipes.exe
+	if not exist $(DESTDIR)\$(GNUPLOT_PS_DIR) mkdir $(DESTDIR)\$(GNUPLOT_PS_DIR)
+	xcopy /Y ..\term\PostScript\*.ps $(DESTDIR)\$(GNUPLOT_PS_DIR)
+	if not exist $(DESTDIR) mkdir $(DESTDIR)
+	for %f in (BUGS README FAQ Copyright NEWS) do copy ..\%f $(DESTDIR)\%f
+	if not exist $(DESTDIR)\share\gnuplot\demo mkdir $(DESTDIR)\share\gnuplot\demo
+	xcopy /Y ..\demo $(DESTDIR)\share\gnuplot\demo
Index: src/command.c
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/src/command.c,v
retrieving revision 1.176
diff -c -p -u -r1.176 command.c
--- src/command.c	15 Aug 2008 00:45:34 -0000	1.176
+++ src/command.c	6 Oct 2008 14:52:09 -0000
@@ -1148,7 +1148,7 @@ pause_command()
     }
 
     if (sleep_time < 0) {
-#ifdef _Windows
+#if defined(_Windows) && !defined(CONSOLE)
     if (paused_for_mouse && !graphwin.hWndGraph) {
 	if (interactive) { /* cannot wait for Enter in a non-interactive session without the graph window */
 	    char tmp[512];
@@ -2701,6 +2701,9 @@ read_line(const char *prompt)
 	    if (last >= 0) {
 		if (gp_input_line[last] == '\n') {	/* remove any newline */
 		    gp_input_line[last] = NUL;
+		    if (last > 0 && gp_input_line[last-1] == '\r') {
+		        gp_input_line[--last] = NUL;
+		    }
 		    /* Watch out that we don't backup beyond 0 (1-1-1) */
 		    if (last > 0)
 			--last;
Index: src/mouse.c
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/src/mouse.c,v
retrieving revision 1.110
diff -c -p -u -r1.110 mouse.c
--- src/mouse.c	2 Oct 2008 21:30:16 -0000	1.110
+++ src/mouse.c	6 Oct 2008 14:52:09 -0000
@@ -1656,7 +1656,9 @@ event_buttonrelease(struct gp_event_t *g
 #ifdef _Windows
     if (paused_for_mouse & PAUSE_CLICK) {
 	/* remove pause message box after 'pause mouse' */
+#ifndef CONSOLE
 	paused_for_mouse = 0;
+#endif
 	kill_pending_Pause_dialog();
     }
 #endif
Index: src/plot.c
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/src/plot.c,v
retrieving revision 1.100
diff -c -p -u -r1.100 plot.c
--- src/plot.c	13 Aug 2008 02:43:09 -0000	1.100
+++ src/plot.c	6 Oct 2008 14:52:09 -0000
@@ -458,7 +458,7 @@ main(int argc, char **argv)
     else
 	interactive = FALSE;
 #else
-# if (defined(__MSC__) && defined(_Windows)) || defined(__WIN32__)
+# if ((defined(__MSC__) && defined(_Windows)) || defined(__WIN32__)) && ! defined(CONSOLE)
     interactive = TRUE;
 # else
     interactive = isatty(fileno(stdin));
Index: src/readline.c
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/src/readline.c,v
retrieving revision 1.44
diff -c -p -u -r1.44 readline.c
--- src/readline.c	10 Aug 2008 00:52:20 -0000	1.44
+++ src/readline.c	6 Oct 2008 14:52:09 -0000
@@ -228,7 +228,12 @@ static int ansi_getc __PROTO((void));
 #  include "win/winmain.h"
 #  define TEXTUSER 0xf1
 #  define TEXTGNUPLOT 0xf0
+#  ifdef CONSOLE
+#   define special_getc() win_getch()
+static char win_getch __PROTO((void));
+#  else
 #  define special_getc() msdos_getch()
+#  endif /* CONSOLE */
 static char msdos_getch __PROTO((void));	/* HBB 980308: PROTO'ed it */
 # endif				/* _Windows */
 
@@ -767,6 +772,17 @@ ansi_getc()
 
 #if defined(MSDOS) || defined(_Windows) || defined(DOS386) || defined(OS2)
 
+#ifdef CONSOLE
+static char
+win_getch()
+{
+    if (term && term->waitforinput)
+        return term->waitforinput();
+    else
+        return ConsoleGetch();
+}
+#endif
+
 /* Convert Arrow keystrokes to Control characters: */
 static char
 msdos_getch()
Index: src/term.c
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/src/term.c,v
retrieving revision 1.180
diff -c -p -u -r1.180 term.c
--- src/term.c	16 Sep 2008 05:35:25 -0000	1.180
+++ src/term.c	6 Oct 2008 14:52:09 -0000
@@ -101,6 +101,7 @@ FILE *open_printer __PROTO((void));     
 void close_printer __PROTO((FILE * outfile));
 # ifdef __MSC__
 #  include <malloc.h>
+#  include <io.h>
 # else
 #  include <alloc.h>
 # endif                         /* MSC */
Index: src/version.c
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/src/version.c,v
retrieving revision 1.83
diff -c -p -u -r1.83 version.c
--- src/version.c	4 Sep 2008 16:34:15 -0000	1.83
+++ src/version.c	6 Oct 2008 14:52:09 -0000
@@ -40,7 +40,7 @@ static char *RCSid() { return RCSid("$Id
 
 
 const char gnuplot_version[] = "4.3";
-const char gnuplot_patchlevel[] = "0";
+const char gnuplot_patchlevel[] = "0-octave";
 const char gnuplot_date[] = "September 2008";
 const char gnuplot_copyright[] = "Copyright (C) 1986 - 1993, 1998, 2004, 2007, 2008";
 
Index: src/win/wgnuplib.h
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/src/win/wgnuplib.h,v
retrieving revision 1.27
diff -c -p -u -r1.27 wgnuplib.h
--- src/win/wgnuplib.h	17 May 2008 15:37:25 -0000	1.27
+++ src/win/wgnuplib.h	6 Oct 2008 14:52:09 -0000
@@ -45,7 +45,9 @@
 #include <windows.h>
 
 #ifdef _WINDOWS
-#define _Windows
+# ifndef _Windows
+#  define _Windows
+# endif
 #endif
 
 /* HBB 19990506: The following used to be #ifdef __DLL__.
Index: src/win/winmain.c
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/src/win/winmain.c,v
retrieving revision 1.24
diff -c -p -u -r1.24 winmain.c
--- src/win/winmain.c	17 May 2008 15:37:27 -0000	1.24
+++ src/win/winmain.c	6 Oct 2008 14:52:09 -0000
@@ -62,6 +62,7 @@ static char *RCSid() { return RCSid("$Id
 #include <string.h>
 #include <stdarg.h>
 #include <ctype.h>
+#include <fcntl.h>
 #ifdef __MSC__
 # include <malloc.h>
 #endif
@@ -101,6 +102,7 @@ GW graphwin;
 PW pausewin;
 MW menuwin;
 LPSTR szModuleName;
+LPSTR szPackageDir;
 LPSTR winhelpname;
 LPSTR szMenuName;
 #define MENUNAME "wgnuplot.mnu"
@@ -251,12 +253,22 @@ appdata_directory(void)
 
 #endif /* WIN32 */
 
+#ifndef CONSOLE
 int PASCAL WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
 		LPSTR lpszCmdLine, int nCmdShow)
+#else
+int main(int argc, char **argv)
+#endif
 {
 	/*WNDCLASS wndclass;*/
 	LPSTR tail;
 
+#ifdef CONSOLE
+# define _argv argv
+# define _argc argc
+	HINSTANCE hInstance = NULL, hPrevInstance = NULL;
+	int nCmdShow = 0;
+#else	 
 #ifdef __MSC__  /* MSC doesn't give us _argc and _argv[] so ...   */
 # ifdef WIN32    /* WIN32 has __argc and __argv */
 #  define _argv __argv
@@ -271,6 +283,7 @@ int PASCAL WinMain(HINSTANCE hInstance, 
 		_argv[++_argc] = _fstrtok( NULL, " ");
 # endif /* WIN32 */
 #endif /* __MSC__ */
+#endif /* CONSOLE */
 
 #ifdef	__WATCOMC__
 # define _argv __argv
@@ -296,6 +309,17 @@ int PASCAL WinMain(HINSTANCE hInstance, 
 	szModuleName = (LPSTR)farrealloc(szModuleName, _fstrlen(szModuleName)+1);
 	CheckMemory(szModuleName);
 
+	if (_fstrlen(szModuleName) >= 5 && _fstrnicmp(&szModuleName[_fstrlen(szModuleName)-5], "\\bin\\", 5) == 0)
+	{
+		int len = _fstrlen(szModuleName)-4;
+		szPackageDir = (LPSTR)farmalloc(len+1);
+		CheckMemory(szPackageDir);
+		_fstrncpy(szPackageDir, szModuleName, len);
+		szPackageDir[len] = '\0';
+	}
+	else
+		szPackageDir = szModuleName;
+
 	winhelpname = (LPSTR)farmalloc(_fstrlen(szModuleName)+_fstrlen(HELPFILE)+1);
 	CheckMemory(winhelpname);
 	_fstrcpy(winhelpname,szModuleName);
@@ -352,6 +376,7 @@ int PASCAL WinMain(HINSTANCE hInstance, 
 	graphwin.color=TRUE;
 	graphwin.fontsize = WINFONTSIZE;
 
+#ifndef CONSOLE
 	if (TextInit(&textwin))
 		exit(1);
 	textwin.hIcon = LoadIcon(hInstance, "TEXTICON");
@@ -377,16 +402,22 @@ int PASCAL WinMain(HINSTANCE hInstance, 
 		InvalidateRect(textwin.hWndParent, (LPRECT) &rect, 1);
 		UpdateWindow(textwin.hWndParent);
 	}
+#endif
 
 
 	atexit(WinExit);
 
+	if (!isatty(fileno(stdin)))
+		setmode(fileno(stdin), O_BINARY);
+
 	gnu_main(_argc, _argv, environ);
 
 	return 0;
 }
 
 
+#ifndef CONSOLE
+
 /* replacement stdio routines that use Text Window for stdin/stdout */
 /* WARNING: Do not write to stdout/stderr with functions not listed
    in win/wtext.h */
@@ -584,6 +615,91 @@ MyFRead(void *ptr, size_t size, size_t n
     return fread(ptr, size, n, file);
 }
 
+#else
+
+DWORD WINAPI stdin_pipe_reader(LPVOID param)
+{
+#if 0
+    HANDLE h = (HANDLE)_get_osfhandle(fileno(stdin));
+    char c;
+    DWORD cRead;
+
+    if (ReadFile(h, &c, 1, &cRead, NULL))
+        return c;
+#else
+    unsigned char c;
+    if (fread(&c, 1, 1, stdin) == 1)
+        return (DWORD)c;
+    return EOF;
+#endif
+}
+
+int ConsoleGetch()
+{
+    int fd = fileno(stdin);
+    HANDLE h;
+    DWORD waitResult;
+
+    if (!isatty(fd))
+        h = CreateThread(NULL, 0, stdin_pipe_reader, NULL, 0, NULL);
+    else
+        h = (HANDLE)_get_osfhandle(fd);
+
+    do
+    {
+        waitResult = MsgWaitForMultipleObjects(1, &h, FALSE, INFINITE, QS_ALLINPUT);
+        if (waitResult == WAIT_OBJECT_0)
+        {
+            if (isatty(fd))
+            {
+                INPUT_RECORD rec;
+                DWORD recRead;
+
+                ReadConsoleInput(h, &rec, 1, &recRead);
+                if (recRead == 1 && rec.EventType == KEY_EVENT && rec.Event.KeyEvent.bKeyDown &&
+                        (rec.Event.KeyEvent.wVirtualKeyCode < VK_SHIFT || 
+                         rec.Event.KeyEvent.wVirtualKeyCode > VK_MENU))
+                {
+                    if (rec.Event.KeyEvent.uChar.AsciiChar)
+                        return rec.Event.KeyEvent.uChar.AsciiChar;
+                    else
+                        switch (rec.Event.KeyEvent.wVirtualKeyCode)
+                        {
+                            case VK_UP: return 020;
+                            case VK_DOWN: return 016;
+                            case VK_LEFT: return 002;
+                            case VK_RIGHT: return 006;
+                            case VK_HOME: return 001;
+                            case VK_END: return 005;
+                            case VK_DELETE: return 004;
+                        }
+                }
+            }
+            else
+            {
+                DWORD c;
+                GetExitCodeThread(h, &c);
+		CloseHandle(h);
+                return c;
+            }
+        }
+        else if (waitResult == WAIT_OBJECT_0+1)
+        {
+            MSG msg;
+
+            while (PeekMessage(&msg, NULL, 0, 0, PM_REMOVE))
+            {
+                TranslateMessage(&msg);
+                DispatchMessage(&msg);
+            }
+        }
+        else
+            break;
+    } while (1);
+}
+
+#endif /* CONSOLE */
+
 /* public interface to printer routines : Windows PRN emulation
  * (formerly in win.trm)
  */
Index: src/win/winmain.h
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/src/win/winmain.h,v
retrieving revision 1.6
diff -c -p -u -r1.6 winmain.h
--- src/win/winmain.h	16 Jul 2006 02:50:56 -0000	1.6
+++ src/win/winmain.h	6 Oct 2008 14:52:09 -0000
@@ -55,6 +55,7 @@ extern MW menuwin;
 
 extern LPSTR winhelpname;
 extern LPSTR szModuleName;
+extern LPSTR szPackageDir;
 
 int Pause __PROTO((LPSTR str));
 void screen_dump __PROTO((void));
Index: src/win/wtext.h
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/src/win/wtext.h,v
retrieving revision 1.9
diff -c -p -u -r1.9 wtext.h
--- src/win/wtext.h	1 Jul 2004 17:10:11 -0000	1.9
+++ src/win/wtext.h	6 Oct 2008 14:52:09 -0000
@@ -40,6 +40,8 @@
 /* redefine functions that can talk to tty devices, to use
  * implementation in winmain.c/wgnuplot.dll */
 
+#ifndef CONSOLE
+
 #define kbhit()  MyKBHit()
 #define getche() MyGetChE()
 #define getch()  MyGetCh()
@@ -102,3 +104,9 @@ int MyPrintF(const char *fmt, ...);
 size_t MyFWrite(const void *ptr, size_t size, size_t n, FILE *stream);
 size_t MyFRead(void *ptr, size_t size, size_t n, FILE *stream);
 
+#else /* CONSOLE */
+
+#define getch ConsoleGetch
+int ConsoleGetch();
+
+#endif /* CONSOLE */
Index: src/wxterminal/gp_cairo.c
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/src/wxterminal/gp_cairo.c,v
retrieving revision 1.40
diff -c -p -u -r1.40 gp_cairo.c
--- src/wxterminal/gp_cairo.c	30 Sep 2008 04:55:05 -0000	1.40
+++ src/wxterminal/gp_cairo.c	6 Oct 2008 14:52:09 -0000
@@ -77,6 +77,10 @@
 #include <pango/pangocairo.h>
 #include <glib.h>
 
+#ifdef _MSC_VER
+#define rint(x) floor((x)+0.5L)
+#endif
+
 /* undef this to see what happens without the Symbol-to-unicode processing */
 #define MAP_SYMBOL
 
@@ -787,6 +791,7 @@ void gp_cairo_draw_text(plot_struct *plo
 	cairo_translate(plot->cr, x, y);
 	cairo_rotate(plot->cr, -arg);
 
+	{
 	PangoRectangle ink, logical;
 	double lw = cairo_get_line_width (plot->cr);
 	pango_layout_get_extents (layout, &ink, &logical);
@@ -806,6 +811,7 @@ void gp_cairo_draw_text(plot_struct *plo
 			(double)ink.width / PANGO_SCALE + lw,
 			(double)ink.height / PANGO_SCALE + lw);
 	cairo_stroke (plot->cr);
+	}
 #endif /* helper boxes to understand how text is positionned */
 
 	/* free the layout object */
Index: src/wxterminal/wxt_gui.cpp
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/src/wxterminal/wxt_gui.cpp,v
retrieving revision 1.67
diff -c -p -u -r1.67 wxt_gui.cpp
--- src/wxterminal/wxt_gui.cpp	29 Jul 2008 22:15:49 -0000	1.67
+++ src/wxterminal/wxt_gui.cpp	6 Oct 2008 14:52:09 -0000
@@ -365,7 +365,7 @@ wxtFrame::wxtFrame( const wxString& titl
 	/* set up the toolbar */
 	wxToolBar * toolbar = CreateToolBar();
 	/* With wxMSW, default toolbar size is only 16x15. */
-	toolbar->SetToolBitmapSize(wxSize(16,16));
+//	toolbar->SetToolBitmapSize(wxSize(16,16));
 
 	toolbar->AddTool(Toolbar_CopyToClipboard, wxT("Copy"),
 				*(toolBarBitmaps[0]), wxT("Copy the plot to clipboard"));
@@ -398,6 +398,7 @@ wxtFrame::wxtFrame( const wxString& titl
 
 	/* setting minimum height and width for the window */
 	SetSizeHints(100, 100);
+	OnSize( wxSizeEvent( this->GetSize() ) );
 
 	FPRINTF((stderr,"wxtFrame constructor 3\n"));
 }
@@ -1405,6 +1406,7 @@ void wxt_init()
 
 #ifdef __WXMSW__
 		/* the following is done in wxEntry() with wxMSW only */
+		WXDLLIMPEXP_BASE void wxSetInstance(HINSTANCE hInst);
 		wxSetInstance(GetModuleHandle(NULL));
 		wxApp::m_nCmdShow = SW_SHOW;
 #endif
@@ -3126,7 +3128,29 @@ int wxt_waitforinput()
  * the terminal events are directly processed when they are received */
 int wxt_waitforinput()
 {
-	return getch();
+#ifdef CONSOLE
+	if (paused_for_mouse)
+	{
+		MSG msg;
+		BOOL ret;
+
+		while ((ret = GetMessage(&msg, NULL, 0, 0)) != 0)
+		{
+			if (ret == -1)
+				break;
+
+			TranslateMessage(&msg);
+			DispatchMessage(&msg);
+
+			if (!paused_for_mouse)
+				break;
+		}
+		
+		return '\0';
+	}
+	else
+#endif
+		return getch();
 }
 #endif /* WXT_MONOTHREADED || WXT_MULTITHREADED */
 
Index: term/post.trm
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/term/post.trm,v
retrieving revision 1.236
diff -c -p -u -r1.236 post.trm
--- term/post.trm	6 Aug 2008 16:36:23 -0000	1.236
+++ term/post.trm	6 Oct 2008 14:52:09 -0000
@@ -3363,9 +3363,9 @@ PS_open_prologue_file(char *name)
 # if defined(_Windows)
 	/* retrieve prologues path relatively to gnuplot executable,
 	 * whose path is in szModuleName (winmain.c) */
-	ps_prologue_dir = gp_alloc(strlen((char*) szModuleName)
+	ps_prologue_dir = gp_alloc(strlen((char*) szPackageDir)
 			+ strlen(GNUPLOT_PS_DIR) + 2, "Prolog path");
-	strcpy(ps_prologue_dir, (char*) szModuleName);
+	strcpy(ps_prologue_dir, (char*) szPackageDir);
 	strcat(ps_prologue_dir, "\\");
 	/* GNUPLOT_PS_DIR is _relative_ path */
 	strcat(ps_prologue_dir, GNUPLOT_PS_DIR);
Index: term/win.trm
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/term/win.trm,v
retrieving revision 1.63
diff -c -p -u -r1.63 win.trm
--- term/win.trm	8 Sep 2008 17:56:55 -0000	1.63
+++ term/win.trm	6 Oct 2008 14:52:09 -0000
@@ -85,6 +85,7 @@ TERM_PUBLIC void WIN_set_ruler __PROTO((
 TERM_PUBLIC void WIN_set_cursor __PROTO((int, int, int));
 TERM_PUBLIC void WIN_put_tmptext __PROTO((int, const char str[]));
 TERM_PUBLIC void WIN_set_clipboard __PROTO((const char[]));
+TERM_PUBLIC int WIN_waitforinput __PROTO((void));
 #endif
 TERM_PUBLIC int WIN_make_palette __PROTO((t_sm_palette *palette));
 TERM_PUBLIC void WIN_set_color __PROTO((t_colorspec *));
@@ -467,6 +468,16 @@ WIN_set_clipboard ( const char s[] )
     Graph_set_clipboard(&graphwin, s);
 }
 
+#ifdef CONSOLE
+
+TERM_PUBLIC int
+WIN_waitforinput  ()
+{
+    return ConsoleGetch();
+}
+
+#endif /* CONSOLE */
+
 #endif /* USE_MOUSE */
 
 
@@ -896,7 +907,11 @@ TERM_TABLE_START(win_driver)
     WIN_text /* suspend */ , WIN_resume,
     WIN_boxfill, WIN_linewidth
 #ifdef USE_MOUSE
+# ifdef CONSOLE
+    , WIN_waitforinput , 
+# else
     , 0 /* WIN_waitforinput */,
+# endif /* CONSOLE */
     WIN_put_tmptext, WIN_set_ruler, WIN_set_cursor, WIN_set_clipboard
 #endif
     , WIN_make_palette, 0 /* previous_palette */,
Index: term/wxt.trm
===================================================================
RCS file: /cvsroot/gnuplot/gnuplot/term/wxt.trm,v
retrieving revision 1.23
diff -c -p -u -r1.23 wxt.trm
--- term/wxt.trm	2 Jun 2008 00:48:12 -0000	1.23
+++ term/wxt.trm	6 Oct 2008 14:52:09 -0000
@@ -58,7 +58,7 @@ TERM_PUBLIC void wxt_text_wrapper __PROT
 
 /* terminal state, defined extern in wxt_term.h */
 int wxt_window_number = 0;
-TBOOLEAN wxt_enhanced_enabled = FALSE;
+TBOOLEAN wxt_enhanced_enabled = TRUE;
 int wxt_persist = UNSET;
 int wxt_raise = UNSET;
 int wxt_ctrl = UNSET;
