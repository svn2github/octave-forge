diff -urN -x module-defs-win32.c -x module-defs-fc.c pango-1.16.4/msvc_recommended_pragmas.h pango-1.16.4-new/msvc_recommended_pragmas.h
--- pango-1.16.4/msvc_recommended_pragmas.h	1970-01-01 01:00:00.000000000 +0100
+++ pango-1.16.4-new/msvc_recommended_pragmas.h	2007-07-20 10:50:42.193547000 +0200
@@ -0,0 +1,28 @@
+#ifndef _MSC_VER
+#pragma error "This header is for Microsoft VC only."
+#endif /* _MSC_VER */
+
+/* Make MSVC more pedantic, this is a recommended pragma list
+ * from _Win32_Programming_ by Rector and Newcomer.
+ */
+#pragma warning(error:4002) /* too many actual parameters for macro */
+#pragma warning(error:4003) /* not enough actual parameters for macro */
+#pragma warning(1:4010)     /* single-line comment contains line-continuation character */
+#pragma warning(error:4013) /* 'function' undefined; assuming extern returning int */
+#pragma warning(1:4016)     /* no function return type; using int as default */
+#pragma warning(error:4020) /* too many actual parameters */
+#pragma warning(error:4021) /* too few actual parameters */
+#pragma warning(error:4027) /* function declared without formal parameter list */
+#pragma warning(error:4029) /* declared formal parameter list different from definition */
+#pragma warning(error:4033) /* 'function' must return a value */
+#pragma warning(error:4035) /* 'function' : no return value */
+#pragma warning(error:4045) /* array bounds overflow */
+#pragma warning(error:4047) /* different levels of indirection */
+#pragma warning(error:4049) /* terminating line number emission */
+#pragma warning(error:4053) /* An expression of type void was used as an operand */
+#pragma warning(error:4071) /* no function prototype given */
+#pragma warning(disable:4101) /* unreferenced local variable */
+#pragma warning(error:4150)
+
+#pragma warning(disable:4244)	/* No possible loss of data warnings */
+#pragma warning(disable:4305)   /* No truncation from int to char warnings */
diff -urN -x module-defs-win32.c -x module-defs-fc.c pango-1.16.4/pango/makefile.msc pango-1.16.4-new/pango/makefile.msc
--- pango-1.16.4/pango/makefile.msc	2007-01-23 00:35:26.000000000 +0100
+++ pango-1.16.4-new/pango/makefile.msc	2007-07-20 11:07:27.929305800 +0200
@@ -1,5 +1,12 @@
 TOP = ../..
-!INCLUDE $(TOP)/glib/build/win32/make.msc
+#!INCLUDE $(TOP)/glib/build/win32/make.msc
+PREFIX = D:\Software\VCLibs
+LDFLAGS = /link
+GLIB_CFLAGS = -I$(PREFIX)\include\glib-2.0 -I$(PREFIX)\lib\glib-2.0\include
+GLIB_LIBS = glib-2.0.lib gobject-2.0.lib gmodule-2.0.lib
+FREETYPE2_CFLAGS = -I$(PREFIX)\include\freetype2
+CAIRO_CFLAGS = -I$(PREFIX)\include\cairo
+CAIRO_LIBS = cairo.lib
 
 !IFNDEF PERL
 PERL = perl
@@ -15,8 +22,8 @@
 
 !IFNDEF PACKAGE
 
-DLLS = pango pangowin32 pangoft2 pangocairo # pangox
-EXES = querymodules testfonts
+DLLS = pango pangowin32 pangocairo # pangoft2 pangox
+EXES = querymodules # testfonts
 #? test1 test2 test3 test4 test5
 
 # The main target
@@ -37,18 +44,59 @@
 sub-one-exe:
 	nmake -nologo -f makefile.msc $(THIS).exe PACKAGE=$(THIS) OBJS_$(THIS)=1
 
+clean:
+	-del /q *.obj *.dll *.exp *.lib *.res *.manifest *.exe
+	-del /q pangocairo.rc
+	-del /q ..\config.h ..\config.h.win32
+
+pango_headers =		   \
+	pango.h		   \
+	pango-attributes.h \
+	pango-break.h	   \
+	pango-context.h	   \
+	pango-coverage.h   \
+	pango-engine.h	   \
+	pango-font.h       \
+	pango-fontmap.h	   \
+	pango-fontset.h    \
+	pango-glyph.h	   \
+	pango-glyph-item.h \
+	pango-gravity.h    \
+	pango-item.h	   \
+	pango-layout.h	   \
+	pango-matrix.h     \
+	pango-modules.h	   \
+	pango-renderer.h   \
+	pango-script.h	   \
+	pango-tabs.h	   \
+	pango-types.h	   \
+	pango-utils.h	   \
+	pango-features.h	\
+	pango-enum-types.h	\
+	pangocairo.h		\
+	pangowin32.h
+
+install:
+	-mkdir $(PREFIX)\bin
+	for %b in (*.dll *.exe) do copy %b $(PREFIX)\bin
+	-mkdir $(PREFIX)\lib
+	for %l in (pango*-1.0.lib) do copy %l $(PREFIX)\lib
+	-mkdir $(PREFIX)\include\pango-1.0\pango
+	for %h in ($(pango_headers)) do copy %h $(PREFIX)\include\pango-1.0\pango
+
 !ELSE
 
 PRJ_TOP = ..
 PKG_VER = $(PANGO_VER)
 PKG_DEF = $(PACKAGE).def
+PKG_RC  = $(PACKAGE).res
 
-PKG_CFLAGS = -FImsvc_recommended_pragmas.h -I.. -I. -I$(PRJ_TOP) \
+PKG_CFLAGS = -nologo -MD -O2 -FImsvc_recommended_pragmas.h -I.. -I. -I$(PRJ_TOP) \
 		-DPACKAGE=\"Pango\" -DVERSION=\"$(PANGO_VER)\" \
 		-DPANGO_ENABLE_BACKEND -DPANGO_ENABLE_ENGINE \
 		-DMODULE_VERSION=\"$(PANGO_MODULE_VERSION)\" \
 		$(GLIB_CFLAGS) $(LIBICONV_CFLAGS) \
-		$(X11_CFLAGS)  -DSYSCONFDIR=\"/etc\"
+		$(X11_CFLAGS)  -DSYSCONFDIR=\"/etc\" -DPANGO_BINARY_AGE=0
 
 !IFDEF OBJS_pango
 # don't link with itself
@@ -77,6 +125,8 @@
 PKG_LINK = $(GLIB_LIBS) $(LIBICONV_LIBS) \
 	pango-$(PANGO_VER).lib $(CAIRO_LIBS) \
 	pangowin32-$(PANGO_VER).lib $(FONTCONFIG_LIBS) 
+pangocairo.rc: pangowin32.rc
+	sed -e "s/Win32/Cairo/g" -e "s/win32/cairo/g" pangowin32.rc > $@
 !ENDIF
 
 !IF DEFINED (OBJS_querymodules) || DEFINED (OBJS_testfonts)
@@ -103,6 +153,7 @@
 	pango-coverage.obj \
 	pango-fontset.obj \
 	pango-fontmap.obj \
+	pango-gravity.obj \
 	pango-glyph-item.obj \
 	pango-item.obj \
 	pango-markup.obj \
@@ -121,21 +172,21 @@
 !ENDIF
 
 basic-win32.obj : ..\modules\basic\basic-win32.c
-	$(CC) $(PKG_CFLAGS) -GD -DPANGO_MODULE_PREFIX=_pango_basic_win32 -c ..\modules\basic\basic-win32.c
+	$(CC) $(PKG_CFLAGS) -DPANGO_MODULE_PREFIX=_pango_basic_win32 -c ..\modules\basic\basic-win32.c
 
 basic-fc.obj : ..\modules\basic\basic-fc.c
-	$(CC) $(PKG_CFLAGS) -GD -DPANGO_MODULE_PREFIX=_pango_basic_ft2 -c ..\modules\basic\basic-fc.c
+	$(CC) $(PKG_CFLAGS) -DPANGO_MODULE_PREFIX=_pango_basic_ft2 -c ..\modules\basic\basic-fc.c
 
 basic-x.obj : ..\modules\basic\basic-x.c
-	$(CC) $(PKG_CFLAGS) -GD -DPANGO_MODULE_PREFIX=_pango_basic_xs -c ..\modules\basic\basic-x.c
+	$(CC) $(PKG_CFLAGS) -DPANGO_MODULE_PREFIX=_pango_basic_xs -c ..\modules\basic\basic-x.c
 
 
 fribidi.obj : mini-fribidi\fribidi.c
-	$(CC) $(PKG_CFLAGS) -GD -c mini-fribidi\fribidi.c
+	$(CC) $(PKG_CFLAGS) -c mini-fribidi\fribidi.c
 fribidi_types.obj : mini-fribidi\fribidi_types.c
-	$(CC) $(PKG_CFLAGS) -GD -c mini-fribidi\fribidi_types.c
+	$(CC) $(PKG_CFLAGS) -c mini-fribidi\fribidi_types.c
 fribidi_char_type.obj : mini-fribidi\fribidi_char_type.c
-	$(CC) $(PKG_CFLAGS) -GD -c mini-fribidi\fribidi_char_type.c
+	$(CC) $(PKG_CFLAGS) -c mini-fribidi\fribidi_char_type.c
 
 !IFDEF OBJS_pangowin32
 PKG_CFLAGS = $(PKG_CFLAGS) -DPANGO_MODULE_PREFIX=_pango_basic_win32
@@ -209,8 +260,8 @@
 module-defs-fc.c : module-defs-fc.c.win32
 	copy module-defs-fc.c.win32 module-defs-fc.c
 
-module-defs-lang.c : module-defs-lang.c.win32
-	copy module-defs-lang.c.win32 module-defs-lang.c
+#module-defs-lang.c : module-defs-lang.c.win32
+#	copy module-defs-lang.c.win32 module-defs-lang.c
 
 pango_headers=		   \
 	pango.h		   \
@@ -235,7 +286,7 @@
 	pangofc-font.h	   \
 	pangofc-fontmap.h
 
-pango-enum-types.h: $(pango_headers) makefile.msc
+pango-enum-types.h: $(pango_headers)
 	$(PERL) $(GLIB)\gobject\glib-mkenums  \
 		--fhead "#ifndef __PANGO_ENUM_TYPES_H__\n#define __PANGO_ENUM_TYPES_H__\n\n#include <glib-object.h>\n\nG_BEGIN_DECLS\n" \
 		--fprod "/* enumerations from \"@filename@\" */\n" \
@@ -243,7 +294,7 @@
 		--ftail "G_END_DECLS\n#endif /* __PANGO_ENUM_TYPES_H__ */" \
 		$(pango_headers) > pango-enum-types.h
 
-pango-enum-types.c: $(pango_headers) pango-enum-types.h makefile.msc
+pango-enum-types.c: $(pango_headers) pango-enum-types.h
 	$(PERL) $(GLIB)\gobject\glib-mkenums  \
 		--fhead "#include <pango.h>" \
 		--fprod "\n/* enumerations from \"@filename@\" */" \
@@ -255,12 +306,14 @@
 $(PACKAGE)-$(PKG_VER)s.lib : $(OBJECTS) $(PRJ_TOP)\config.h
 	lib /out:$(PACKAGE)-$(PKG_VER)s.lib $(OBJECTS)
 
-lib$(PACKAGE)-$(PKG_VER)-0.dll : $(OBJECTS) $(PKG_DEF) $(PRJ_TOP)\config.h
-	$(CC) $(CFLAGS) -LD -Fe$@ $(OBJECTS) $(PKG_LINK) \
+lib$(PACKAGE)-$(PKG_VER)-0.dll : $(PRJ_TOP)\config.h $(OBJECTS) $(PKG_DEF) $(PKG_RC)
+	$(CC) $(CFLAGS) -LD -Fe$@ $(OBJECTS) $(PKG_RC) $(PKG_LINK) \
 	user32.lib gdi32.lib advapi32.lib $(LDFLAGS) /implib:$(PACKAGE)-$(PKG_VER).lib /def:$(PKG_DEF)
+	mt -outputresource:$@ -manifest $@.manifest
 
-$(PACKAGE).exe : $(PKG_LINK) $(OBJECTS)
+$(PACKAGE).exe : $(OBJECTS)
 	$(CC) $(CFLAGS) -Fe$(PACKAGE).exe $(OBJECTS) $(PKG_LINK) gdi32.lib user32.lib
+	mt -outputresource:$@ -manifest $@.manifest
 
 $(PRJ_TOP)\config.h.win32 : makefile.msc
 	echo /*empty*/ > $(PRJ_TOP)\config.h.win32
@@ -270,6 +323,6 @@
 
 
 .c.obj :
-	$(CC) $(CFLAGS) -GD -c $(PKG_CFLAGS) $<
+	$(CC) $(CFLAGS) -c $(PKG_CFLAGS) $<
 
 !ENDIF #PACKAGE
