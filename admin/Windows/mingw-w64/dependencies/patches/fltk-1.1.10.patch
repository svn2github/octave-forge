diff --git a/FL/Makefile.in b/FL/Makefile.in
--- a/FL/Makefile.in
+++ b/FL/Makefile.in
@@ -37,7 +37,7 @@
 	echo "Installing include files in $(DESTDIR)$(includedir)..."
 	$(RMDIR) $(DESTDIR)$(includedir)/FL
 	$(INSTALL_DIR) $(DESTDIR)$(includedir)/FL
-	for file in *.[hrH]; do \
+	for file in $(srcdir)/FL/*.[hrH]; do \
 		$(INSTALL_DATA) $$file $(DESTDIR)$(includedir)/FL; \
 	done
 @HLINKS@	cd $(DESTDIR)$(includedir)/FL;\
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -69,7 +69,7 @@
 
 dnl OS-specific pre-tests...
 case $uname in
-    CYGWIN* | MINGW*)
+    CYGWIN*)
         # Handle Cygwin option *first*, before all other tests.
 	AC_ARG_ENABLE(cygwin, [  --enable-cygwin         use the CygWin libraries [default=no]])
 	if test x$enable_cygwin != xyes; then
@@ -232,11 +232,9 @@
 	    # -Wl,--enable-runtime-pseudo-reloc: See str 1585
 	    # appears to be necessary for older binutils versions < 2.16
 	    #-----------------------------------------------------------
-            LDFLAGS="$LDFLAGS -Wl,--enable-auto-import -Wl,--enable-runtime-pseudo-reloc"
-	    DSOCOMMAND="\$(CXX) \$(DSOFLAGS) -shared \
-	    	-Wl,--whole-archive -Wl,--export-all-symbols \
-		-Wl,--enable-runtime-pseudo-reloc -Wl,--enable-auto-import \
-		-Wl,--enable-auto-image-base -o \$@"
+            LDFLAGS="$LDFLAGS -Wl,--enable-auto-import"
+	    DSOCOMMAND="\$(CXX) \$(LDFLAGS) \$(DSOFLAGS) -shared \
+	    	-Wl,--whole-archive -o \$@"
 	    ;;
 	*)
             AC_MSG_WARN(Shared libraries may not be supported.  Trying -shared option with compiler.)
@@ -320,7 +318,7 @@
 
 dnl How do we make libraries?
 AC_PROG_RANLIB
-AC_PATH_PROG(AR, ar)
+AC_CHECK_PROG(AR, ar, , ar)
 
 if test "x$AR" = "x:"; then
     AC_MSG_ERROR(Configure could not find the library archiver, aborting.)
diff --git a/fluid/Makefile b/fluid/Makefile
--- a/fluid/Makefile
+++ b/fluid/Makefile
@@ -52,6 +52,11 @@
 
 include ../makeinclude
 
+vpath %.cxx  $(srcdir)/fluid
+vpath %.h    $(srcdir)/fluid
+vpath %.fl   $(srcdir)/fluid
+vpath %.xpm  $(srcdir)/fluid
+
 all:	$(FLUID) fluid$(EXEEXT)
 
 fluid$(EXEEXT):		$(OBJECTS) $(LIBNAME) $(FLLIBNAME) \
diff --git a/makeinclude.in b/makeinclude.in
--- a/makeinclude.in
+++ b/makeinclude.in
@@ -55,8 +55,8 @@
 # flags for C++ compiler:
 ARCHFLAGS	= @ARCHFLAGS@
 OPTIM		= @OPTIM@
-CFLAGS		= $(OPTIM) @LARGEFILE@ @PTHREAD_FLAGS@ @CPPFLAGS@ @CFLAGS@
-CXXFLAGS	= $(OPTIM) @LARGEFILE@ @PTHREAD_FLAGS@ @CPPFLAGS@ @CXXFLAGS@
+CFLAGS		= $(OPTIM) @LARGEFILE@ @PTHREAD_FLAGS@ @CPPFLAGS@ @CFLAGS@ -DFL_LIBRARY
+CXXFLAGS	= $(OPTIM) @LARGEFILE@ @PTHREAD_FLAGS@ @CPPFLAGS@ @CXXFLAGS@ -DFL_LIBRARY
 
 # program to make the archive:
 LIBNAME		= @LIBNAME@
@@ -132,7 +132,7 @@
 UNINSTALL_DESKTOP = @UNINSTALL_DESKTOP@
 
 # Be quiet when building...
-.SILENT:
+#.SILENT:
 
 # Build commands and filename extensions...
 .SUFFIXES:	.0 .1 .3 .6 .c .cxx .h .fl .man .o .z $(EXEEXT)
@@ -144,11 +144,11 @@
 
 .c.o:
 	echo Compiling $<...
-	$(CC) -I.. $(ARCHFLAGS) @PNGINC@ @JPEGINC@ @ZLIBINC@ $(CFLAGS) -c $<
+	$(CC) -I.. -I$(srcdir) $(ARCHFLAGS) @PNGINC@ @JPEGINC@ @ZLIBINC@ $(CPPFLAGS) $(CFLAGS) -c $<
 
 .cxx.o:
 	echo Compiling $<...
-	$(CXX) -I.. $(ARCHFLAGS) @PNGINC@ @JPEGINC@ @ZLIBINC@ $(CXXFLAGS) -c $<
+	$(CXX) -I.. -I$(srcdir) $(ARCHFLAGS) @PNGINC@ @JPEGINC@ @ZLIBINC@ $(CPPFLAGS) $(CXXFLAGS) -c $<
 
 .man.0 .man.1 .man.3 .man.6:
 	echo Formatting $<...
diff --git a/src/Makefile b/src/Makefile
--- a/src/Makefile
+++ b/src/Makefile
@@ -192,6 +192,12 @@
 
 include ../makeinclude
 
+vpath	%.cxx $(srcdir)/src
+vpath	%.c   $(srcdir)/src
+vpath	%.h   $(srcdir)/src
+vpath	%.H   $(srcdir)/src
+vpath	%.xpm $(srcdir)/src
+
 OBJECTS = $(CPPFILES:.cxx=.o) $(CFILES:.c=.o)
 GLOBJECTS = $(GLCPPFILES:.cxx=.o)
 FLOBJECTS = $(FLCPPFILES:.cxx=.o)
@@ -436,53 +442,53 @@
 fl_set_fonts.o:	fl_set_fonts_mac.cxx fl_set_fonts_x.cxx \
 		fl_set_fonts_xft.cxx fl_set_fonts_win32.cxx
 
-fl_arci.o:	../FL/mac.H ../FL/win32.H
-Fl_arg.o:	../FL/mac.H ../FL/win32.H
-fl_ask.o:	../FL/mac.H ../FL/win32.H
-Fl_Bitmap.o:	../FL/mac.H ../FL/win32.H
-fl_color.o:	../FL/mac.H ../FL/win32.H
-fl_cursor.o:	../FL/mac.H ../FL/win32.H
-fl_dnd.o:	../FL/mac.H ../FL/win32.H
-Fl.o:	../FL/mac.H ../FL/win32.H Fl_win32.cxx Fl_mac.cxx
-Fl_Double_Window.o:	../FL/mac.H ../FL/win32.H
-fl_draw_image.o:	../FL/mac.H ../FL/win32.H
-fl_draw_image_mac.o:	../FL/mac.H ../FL/win32.H
-fl_draw_image_win32.o:	../FL/mac.H ../FL/win32.H
-fl_draw_pixmap.o:	../FL/mac.H ../FL/win32.H
-fl_encoding_latin1.o:	../FL/mac.H ../FL/win32.H
-fl_encoding_mac_roman.o:   ../FL/mac.H ../FL/win32.H
-Fl_File_Chooser2.o:	../FL/mac.H ../FL/win32.H
-fl_font.o:	../FL/mac.H ../FL/win32.H
-Fl_get_key.o:	../FL/mac.H ../FL/win32.H
-Fl_get_system_colors.o:	../FL/mac.H ../FL/win32.H
-Fl_Gl_Choice.o:	../FL/mac.H ../FL/win32.H
-Fl_Gl_Overlay.o:	../FL/mac.H ../FL/win32.H
-Fl_Gl_Window.o:	../FL/mac.H ../FL/win32.H
-Fl_grab.o:	../FL/mac.H ../FL/win32.H
-Fl_Image.o:	../FL/mac.H ../FL/win32.H
-fl_line_style.o:	../FL/mac.H ../FL/win32.H
-Fl_mac.o:	../FL/mac.H ../FL/win32.H
-Fl_Menu_Window.o:	../FL/mac.H ../FL/win32.H
-fl_overlay.o:	../FL/mac.H ../FL/win32.H
-fl_overlay_visual.o:	../FL/mac.H ../FL/win32.H
-Fl_Overlay_Window.o:	../FL/mac.H ../FL/win32.H
-Fl_own_colormap.o:	../FL/mac.H ../FL/win32.H
-Fl_Pixmap.o:	../FL/mac.H ../FL/win32.H
-fl_read_image.o:	../FL/mac.H ../FL/win32.H
-fl_read_image_mac.o:	../FL/mac.H ../FL/win32.H
-fl_read_image_win32.o:	../FL/mac.H ../FL/win32.H
-fl_rect.o:	../FL/mac.H ../FL/win32.H
-fl_scroll_area.o:	../FL/mac.H ../FL/win32.H
-fl_set_font.o:	../FL/mac.H ../FL/win32.H
-fl_set_fonts.o:	../FL/mac.H ../FL/win32.H
-fl_shortcut.o:	../FL/mac.H ../FL/win32.H
-fl_vertex.o:	../FL/mac.H ../FL/win32.H
-Fl_visual.o:	../FL/mac.H ../FL/win32.H
-Fl_Window_fullscreen.o:	../FL/mac.H ../FL/win32.H
-Fl_Window_iconize.o:	../FL/mac.H ../FL/win32.H
-Fl_x.o:	../FL/mac.H ../FL/win32.H
-gl_draw.o:	../FL/mac.H ../FL/win32.H
-gl_start.o:	../FL/mac.H ../FL/win32.H
+fl_arci.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_arg.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_ask.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_Bitmap.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_color.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_cursor.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_dnd.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H Fl_win32.cxx Fl_mac.cxx
+Fl_Double_Window.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_draw_image.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_draw_image_mac.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_draw_image_win32.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_draw_pixmap.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_encoding_latin1.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_encoding_mac_roman.o:   $(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_File_Chooser2.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_font.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_get_key.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_get_system_colors.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_Gl_Choice.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_Gl_Overlay.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_Gl_Window.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_grab.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_Image.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_line_style.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_mac.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_Menu_Window.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_overlay.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_overlay_visual.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_Overlay_Window.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_own_colormap.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_Pixmap.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_read_image.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_read_image_mac.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_read_image_win32.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_rect.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_scroll_area.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_set_font.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_set_fonts.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_shortcut.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+fl_vertex.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_visual.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_Window_fullscreen.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_Window_iconize.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+Fl_x.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+gl_draw.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
+gl_start.o:	$(srcdir)/FL/mac.H $(srcdir)/FL/win32.H
 
 ################################################################
 
diff --git a/src/fl_rect.cxx b/src/fl_rect.cxx
--- a/src/fl_rect.cxx
+++ b/src/fl_rect.cxx
@@ -423,7 +423,7 @@
 #define STACK_MAX (STACK_SIZE - 1)
 static Fl_Region rstack[STACK_SIZE];
 static int rstackptr=0;
-int fl_clip_state_number=0; // used by gl_begin.cxx to update GL clip
+FL_EXPORT int fl_clip_state_number=0; // used by gl_begin.cxx to update GL clip
 
 #if !defined(WIN32) && !defined(__APPLE__)
 // Missing X call: (is this the fastest way to init a 1-rectangle region?)
diff --git a/src/flstring.c b/src/flstring.c
--- a/src/flstring.c
+++ b/src/flstring.c
@@ -32,6 +32,7 @@
  * 'fl_strlcat()' - Safely concatenate two strings.
  */
 
+FL_EXPORT
 size_t				/* O - Length of string */
 fl_strlcat(char       *dst,	/* O - Destination string */
            const char *src,	/* I - Source string */
@@ -72,6 +73,7 @@
  * 'fl_strlcpy()' - Safely copy two strings.
  */
 
+FL_EXPORT
 size_t				/* O - Length of string */
 fl_strlcpy(char       *dst,	/* O - Destination string */
            const char *src,	/* I - Source string */
diff --git a/test/Makefile b/test/Makefile
--- a/test/Makefile
+++ b/test/Makefile
@@ -27,6 +27,15 @@
 
 include ../makeinclude
 
+vpath %.cxx $(srcdir)/test
+vpath %.c $(srcdir)/test
+vpath %.fl $(srcdir)/test
+vpath %.xpm $(srcdir)/test
+vpath %.xbm $(srcdir)/test
+vpath %.h $(srcdir)/test
+
+override CPPFLAGS += -I. -I$(srcdir)/test
+
 CPPFILES =\
 	unittests.cxx \
 	adjuster.cxx \
@@ -412,9 +421,9 @@
 	$(OSX_ONLY) $(INSTALL_BIN) sudoku$(EXEEXT) sudoku.app/Contents/MacOS
 	$(POSTBUILD) $@ ../FL/mac.r
 
-sudoku.exe: sudoku.o sudoku.rc
+sudoku.exe: sudoku.o $(srcdir)/test/sudoku.rc
 	echo Linking $@...
-	windres sudoku.rc sudokures.o
+	windres $(srcdir)/test/sudoku.rc sudokures.o
 	$(CXX) $(ARCHFLAGS) $(LDFLAGS) sudoku.o sudokures.o -o $@ $(AUDIOLIBS) $(LINKFLTKIMG) $(LDLIBS)
 
 symbols$(EXEEXT): symbols.o
