md5="befc9b8a96679b7e94ba18e4b65b1f00";rev="4142";by="Jorge Barros de Abreu <ficmatin01 at skipthis solar dot com dot br>"
-*- texinfo -*-
@deftypefn {Fun@value{cedilha}@~ao Carreg@'avel} {[@var{j}, @var{ierr}] =} besselj (@var{alpha}, @var{x}, @var{opt})
@deftypefnx {Fun@value{cedilha}@~ao Carreg@'avel} {[@var{y}, @var{ierr}] =} bessely (@var{alpha}, @var{x}, @var{opt})
@deftypefnx {Fun@value{cedilha}@~ao Carreg@'avel} {[@var{i}, @var{ierr}] =} besseli (@var{alpha}, @var{x}, @var{opt})
@deftypefnx {Fun@value{cedilha}@~ao Carreg@'avel} {[@var{k}, @var{ierr}] =} besselk (@var{alpha}, @var{x}, @var{opt})
@deftypefnx {Fun@value{cedilha}@~ao Carreg@'avel} {[@var{h}, @var{ierr}] =} besselh (@var{alpha}, @var{k}, @var{x}, @var{opt})
Calcula fun@,{c}@~oes de Bessel ou de Hankel de v@'arios tipos:

@table @code
@item besselj
Fun@value{cedilha}@~oes de Bessel de primeiro tipo.
@item bessely
Fun@value{cedilha}@~oes de Bessel de segundo tipo.
@item besseli
Fun@value{cedilha}@~oes de Bessel modificadas de primeiro tipo.
@item besselk
Fun@value{cedilha}@~oes de Bessel modificadas de segundo tipo.
@item besselh
Calcula fun@value{cedilha}@~oes de Hankel de primeiro (@var{k} = 1) ou de segundo (@var{k}
 = 2) tipo.
@end table

Se o argumento @var{opt} for fornecido, @'e aplicado sobre o resultado uma escala atrav@'es de
@code{exp (-I*@var{x})} para @var{k} = 1 ou @code{exp (I*@var{x})} para
 @var{k} = 2.

Se @var{alpha} for um escalar, o resultado possuir@'a o mesmo tamanho que @var{x}.
Se @var{x} for um escalar, o resultado possuir@'a o mesmo tamanho que @var{alpha}.
Se @var{alpha} for um vetor linha e @var{x} for um vetor coluna, o
resultado @'uma matriz com @code{length (@var{x})} linhas e
@code{length (@var{alpha})} colunas.  De outra forma, @var{alpha} e
@var{x} devem estar de acordo e o resultado ser@'a do mesmo tamanho.

O valor de @var{alpha} deve ser real.  O valor de @var{x} pode ser
complexo.

Se requisitada, @var{ierr} cont@'em a sequinte informa@,{c}@~ao de status
e possui o mesmo tamanho do resultado.

@enumerate 0
@item
Retorno normal.
@item
Erro de entrada, retorna @code{NaN}.
@item
Sobrecarga, retorna @code{Inf}.
@item
Perda de signific@^ancia atrav@'es de resultados de redu@,{c}@~ao de argumento em menos que
metade da precis@~ao da m@'aquina.
@item
Perda completa de signific@^ancia atrav@'es de redu@,{c}@~ao de argumento, retorna @code{NaN}.
@item
Erro---nenhum c@'alculo, condi@,{c}@~ao de termina@,{c}@~ao de algor@'itmo n@~ao alcan@,{c}ada,
retorna @code{NaN}.
@end enumerate
@end deftypefn
