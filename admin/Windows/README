Most of the work of building a new release is
encoded in admin/Windows/Makefile.

First you will need a cygwin environment.
Search the net for details.  As of this writing,
only the gcc 3.2 compiler is acceptable, later
versions being too slow.

You will need to download octave-forge (which
presumably you have already done, otherwise you
wouldn't be reading this) and octave sources.
I put them in /c/src/octave-forge-YYYY.MM.DD
and /c/src/octave-2.1.xx, and I build octave
in /c/src/cygwin/octave-2.1.xx.  If for some 
reason this is not acceptable, modify the top 
few lines of the Makefile to reflect your 
environment.

You will need a directory /opt which has a
number of supplementary packages.  These
will be distributed from the octave-forge
download site.

The configuration options are hardcoded in 
config-octave.

Now you are ready to build.  You should be
able to do:

  (cd /c/src/octave-forge; cvs -q update -dP)
  make v=2.1.xx clean.forge
  make v=2.1.xx

The results of the build will be in:

  config.octave
  build.octave
  check.octave
  install.octave
  config.forge
  build.forge
  check.forge
  install.forge

You should be able to run the new octave with

  /opt/octave-2.1.xx/bin/octave

The following make targets are available:

  setup
    * create /opt/octave-2.1.xx
    * unpack packages in /opt/PACKAGE.tar.gz
    * build stdc++.dll

  config -> config.octave
    * remove single-precision lapack requirements
    * call ./configure with the appropriate options 

  build -> build.octave
    * call make in the octave directory

  check -> check.octave
    * calls make check in the octave directory

  install -> install.octave
    * calls make install in the octave directory

  docs
    * copies octave docs to the install directory

  cygwin
    * sets up a cygwin environment for octave, taken
      from the current environment.  The list of
      cygwin files is hard-coded.  You may need a
      different list for your version of cygwin.

  clean.forge
    * call make clean in the octave-forge directory
  config.forge -> config.forge
    * call ./autogen.sh and ./configure in octave-forge
  build.forge -> build.forge
    * call make in octave-forge
  check.forge -> check.forge
    * call make check in octave-forge
  install.forge -> install.forge
    * call make install in octave-forge

  dist (not implemented)
    * use nsis to build a new octave distribution.

Check the results files *.octave and *.forge for
questionable output.  If you need to repeat your 
build for some reason, you will need to remove 
the output targets:

	rm *.octave *.forge


2004-07-14

Octave+octave-forge windows old build instructions

Build /opt/octave-2.1.xx
    rm -rf /opt/octave-2.1.xx
    mkdir /opt/octave-2.1.xx
    cd /opt/octave-2.1.xx
        
Install epstk
	cd /opt/octave/share/octave/site/m
	# Grab the latest epstk from http://epstk.sf.net/down
	# Skip the manual --- we can link directly to the web
	unzip epstk2.zip
	mv m epstk

Hack the links
	# Some hand modifications were done in /opt/octave/bin
	# /opt/octave/libexec/.../oct and opt/octave/libexec/...octave-forge
	# to replace linked files with *.link, where *.link contains
	# the required link command:  ln -sf base name
	# This process needs to be automated, but I don't know how.

	# find all links
	find /opt/octave-2.1.57 -type l

Grab nsis 2.0 from http://www.nullsoft.com/free/nsis/#download
	cd <octave-forge>/admin/Windows
	# Modify install_octave.sh to use the appropriate ARCH=dir
        # then build the exe as follows:
	<NSIS>/makensis /DVERSION=<ver> octave-install-win32.nsi
