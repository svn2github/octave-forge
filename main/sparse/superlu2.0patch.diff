# Patch for SuperLU version 2.0 for the octave spare functions
# $Id$
#
# Instructions:
#
# 0. Note, If you got the SuperLU directory with your download,
#      then you don't need this patch
#
# 1. Download SuperLU from one of the following sites
#                          http://www.netlib.org/scalapack/prototype
#                          ftp://ftp.cs.berkeley/pub/src/lapack/SuperLU
#                          http://www.nersc.gov/~xiaoye/SuperLU/
#
# 2. Unpack SuperLU into the directory you'll be building the
#     octave sparse functions from
#
# 3. Apply the patch
#           patch -p0 < superlu2.0patch.diff
#
# 4. Build the octave sparse functions
#           run make in the octave sparse functions directory
#           NOTE: do not run the SuperLU makefiles - 
#                it doesn't build the right objects into the library
#
diff -Naur SuperLU-v2.0/SRC/get_perm_c.c SuperLU/SRC/get_perm_c.c
--- SuperLU-v2.0/SRC/get_perm_c.c	Wed Aug 11 13:48:15 1999
+++ SuperLU/SRC/get_perm_c.c	Sat Dec 11 21:10:53 1999
@@ -373,12 +373,16 @@
     switch ( ispec ) {
         case 0: /* Natural ordering */
 	      for (i = 0; i < n; ++i) perm_c[i] = i;
+#ifdef VERBOSE                     
 	      printf("Use natural column ordering.\n");
+#endif              
 	      return;
         case 1: /* Minimum degree ordering on A'*A */
 	      getata(m, n, Astore->nnz, Astore->colptr, Astore->rowind,
 		     &bnz, &b_colptr, &b_rowind);
+#ifdef VERBOSE                     
 	      printf("Use minimum degree ordering on A'*A.\n");
+#endif              
 	      t = SuperLU_timer_() - t;
 	      /*printf("Form A'*A time = %8.3f\n", t);*/
 	      break;
@@ -386,14 +390,18 @@
 	      if ( m != n ) ABORT("Matrix is not square");
 	      a_plus_at(n, Astore->nnz, Astore->colptr, Astore->rowind,
 			&bnz, &b_colptr, &b_rowind);
+#ifdef VERBOSE                     
 	      printf("Use minimum degree ordering on A'+A.\n");
+#endif
 	      t = SuperLU_timer_() - t;
 	      /*printf("Form A'+A time = %8.3f\n", t);*/
 	      break;
         case 3: /* Approximate minimum degree column ordering. */
 	      get_colamd(m, n, Astore->nnz, Astore->colptr, Astore->rowind,
 			 perm_c);
+#ifdef VERBOSE                     
 	      printf(".. Use approximate minimum degree column ordering.\n");
+#endif              
 	      return; 
         default:
 	      ABORT("Invalid ISPEC");
diff -Naur SuperLU-v2.0/SRC/util.c SuperLU/SRC/util.c
--- SuperLU-v2.0/SRC/util.c	Thu Aug  5 15:23:11 1999
+++ SuperLU/SRC/util.c	Sat Dec 11 16:11:26 1999
@@ -229,6 +229,8 @@
 void
 PrintStat(SuperLUStat_t *SuperLUStat)
 {
+/* mods by aadler, dec 99*/
+#ifdef VERBOSE
     double         *utime;
     flops_t        *ops;
 
@@ -243,7 +245,7 @@
     if ( utime[SOLVE] != 0.0 )
       printf("Solve flops = %e\tMflops = %8.2f\n", ops[SOLVE],
 	     ops[SOLVE]*1e-6/utime[SOLVE]);
-
+#endif // VERBOSE
 }
 
 
