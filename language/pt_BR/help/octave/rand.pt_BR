md5="639ea7a81657f47222e0d2b4882e8124";rev="4142";by="Jorge Barros de Abreu <ficmatin01 at skipthis solar dot com dot br>"
-*- texinfo -*-
@deftypefn {Fun@value{cedilha}@~ao Carreg@'avel} {} rand (@var{x})
@deftypefnx {Fun@value{cedilha}@~ao Carreg@'avel} {} rand (@var{n}, @var{m})
@deftypefnx {Fun@value{cedilha}@~ao Carreg@'avel} {} rand ("state", @var{x})
@deftypefnx {Fun@value{cedilha}@~ao Carreg@'avel} {} rand ("seed", @var{x})
Retorna uma matriz com elementos aleat@'orios uniformemente distribu@'idos sobre o
intervalo (0, 1).  Os argumentos s@~ao manuseados da mesma forma que os argumentos
para @code{eye}.

voc@^e pode pesquisar o estado do gerador de n@'umeros aleat@'orios usando a
forma

@example
v = rand ("state")
@end example

Esse comando retorna um vetor coluna @var{v} de comprimento 625. Posteriormente, voc@^e pode
restaurar o estado @var{v} do gerador de n@'umeros aleat@'orios
usando a forma

@example
rand ("state", v)
@end example

@noindent
Voc@^e pode tamb@'em inicializar o vetor estado a partir de um vetor arbitr@'ario de
comprimento <= 625 para @var{v}.  Esse novo estado ir@'a ser um hash baseado no
valor de @var{v}, n@~ao @var{v} em si mesmo.

Por padr@~ao, o gerador @'e inicializado usando @code{/dev/urandom} se este estiver
dispon@'ivel, de outra forma a partir da data e hora da cpu, separa hora de rel@'ogio e a fra@,{c}@~ao
corrente de um segundo.

@code{rand} utiliza o Mersenne Twister com um per@'iodo de 2^19937-1
(Veja M. Matsumoto e T. Nishimura, ``Mersenne Twister: A 623-dimensionally
equidistributed uniform pseudorandom number generator'', ACM Trans. on
Modeling and Computer Simulation Vol. 8, No. 1, Januray pp.3-30 1998,
@url{http://www.math.keio.ac.jp/~matumoto/emt.html}).
N@~AO use para CRIPTOGRAFIA sem seguramente hashing muitos valores
retornados conjuntamente, de outra forma o estado gerador pode ser aprendido ap@'os
a leitura de 624 valores consecutivos.

@code{rand} inclue um segundo gerador de n@'umeros aleat@'orios, que foi o
gerador anterior usado no octave. O novo gerador @'e usado por padr@~ao
uma vez que @'e significativamente mais r@'apido que o antigo, e produz
n@'umeros aleat@'orios com um ciclo de tempo significativamente mais longo. Todavia, em
algumas circunstâncias pode ser desej@'avel obter as mesmas seq@"u@^encias
aleat@'orias como eram usads pelos antigos geradores. Para fazer isso a palavra chave
"seed" @'e usada para especificar que os velos geradores podem ser usados,
como em

@example
rand ("seed", val)
@end example

que escolhe a semente do gerador para @var{val}. A semente do
pode ser pesquisada com

@example
s = rand ("seed")
@end example

Todavia, isso pode ser notado que pesquisando a semente n@~ao ir@'a fazer com que
@code{rand} use os geradores antigos, somente escolhendo "seed" isso ir@'a ocorrer.
Para fazer com que @code{rand} novamente use os novos geradores, a
palavra chave "state" pode ser usada para voltar ao estado inicial de @code{rand}.
@seealso{randn,rande,randg,randp}
@end deftypefn
