-*- texinfo -*-
@deftypefn {Loadable Function} {} find (@var{x})
@deftypefnx {Loadable Function} {} find (@var{x}, @var{n})
@deftypefnx {Loadable Function} {} find (@var{x}, @var{n}, @var{direction})
Return a vector of indices of nonzero elements of a matrix.  To obtain a
single index for each matrix element, Octave pretends that the columns
of a matrix form one long vector (like Fortran arrays are stored).  For
example,

@example
@group
find (eye (2))
     @result{} [ 1; 4 ]
@end group
@end example

If two outputs are requested, @code{find} returns the row and column
indices of nonzero elements of a matrix.  For example,

@example
@group
[i, j] = find (2 * eye (2))
     @result{} i = [ 1; 2 ]
     @result{} j = [ 1; 2 ]
@end group
@end example

If three outputs are requested, @code{find} also returns a vector
containing the nonzero values.  For example,

@example
@group
[i, j, v] = find (3 * eye (2))
     @result{} i = [ 1; 2 ]
     @result{} j = [ 1; 2 ]
     @result{} v = [ 3; 3 ]
@end group
@end example

If two inputs are given, @var{n} indicates the number of elements to
find from the beginning of the matrix or vector.

If three inputs are given, @var{direction} should be one of "first" or
"last" indicating that it should start counting found elements from the
first or last element.
@end deftypefn
