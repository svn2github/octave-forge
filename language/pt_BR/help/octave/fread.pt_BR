md5="e0d5a1a6453ea375c3154aeae0bf58e2";rev="4142";by="Jorge Barros de Abreu <ficmatin01 at skipthis solar dot com dot br>"
-*- texinfo -*-
@deftypefn {Fun@value{cedilha}@~ao Interna} {[@var{val}, @var{contador}] =} fread (@var{fid}, @var{tamanho}, @var{precis@~ao}, @var{pulo}, @var{arch})
L@^e dados bin@'arios do tipo @var{precis@~ao} usando o identificador de arquivo especificado
@var{fid}.

O argumento opcional @var{tamanho} especifica o montante de dados para ler
e pode ser um de

@table @code
@item Inf
L@^e tanto quanto poss@'ivel, retornando um vetor coluna.

@item @var{nr}
Leia at@'e @var{nr} elementos, retornando um vetor coluna.

@item [@var{nr}, Inf]
Leia tanto quanto poss@'ivel poss@'ivel, retornando uma matriz com @var{nr} linhas.  Se o
n@'umero de elementos lidos n@~ao for um multiplo exato de @var{nr}, a @'ultima
coluna @'e preenchida com zeros.

@item [@var{nr}, @var{nc}]
L@^e at@'e @code{@var{nr} * @var{nc}} elementos, retornando uma matriz com
@var{nr} linhas.  Se o n@'umero de elementos lidos n@~ao for um multiplo exato
de @var{nr}, a @'ultima coluna dever@'a ser preenchida com zeros.
@end table

@noindent
Se @var{tamanho} for omitido, um valor de @code{Inf} @'e assumido.

O argumento opcional @var{precis@~ao} @'e uma seq@"u@^encia de caracteres especificando o tipo de
dados para ler e pode ser um de

@table @code
@item "schar"
@itemx "signed char"
Caractere com sinal.

@item "uchar"
@itemx "unsigned char"
Caractere sem sinal.

@item "int8"
@itemx "integer*1"

Inteiro com sinal de 8-bit de tamanho.

@item "int16"
@itemx "integer*2"
Inteiro com sinal de 16-bit de tamanho.

@item "int32"
@itemx "integer*4"
Inteiro com sinal de 32-bit de tamanho.

@item "int64"
@itemx "integer*8"
inteiro com sinal de 64-bit de tamanho.

@item "uint8"
Inteiro sem sinal de 8-bit de tamanho.

@item "uint16"
Inteiro sem sinal de 16-bit de tamanho.

@item "uint32"
Inteiro sem sinal de 32-bit de tamanho.

@item "uint64"
Inteiro sem sinal de 64-bit de tamanho.

@item "single"
@itemx "float32"
@itemx "real*4"
N@'umero em ponto flutuante de 32-bit de tamanho.

@item "double"
@itemx "float64"
@itemx "real*8"
N@'umero em ponto flutuante de 64-bit de tamanho.

@item "char"
@itemx "char*1"
Caractere simples.

@item "short"
Inteiro curto (o tamanho @'e dependente da plantaforma).

@item "int"
Inteiro (o tamanho @'e dependente da plantaforma).

@item "long"
Inteiro longo (o tamanho @'e dependente da plantaforma).

@item "ushort"
@itemx "unsigned short"
Inteiro curto sem sinal (o tamanho @'e dependente da plantaforma).

@item "uint"
@itemx "unsigned int"
Inteiro sem sinal (o tamanho @'e dependente da plantaforma).

@item "ulong"
@itemx "unsigned long"
Inteiro longo sem sinal (o tamanho @'e dependente da plantaforma).

@item "float"
N@'umero em ponto flutuante de precis@~ao simples (o tamanho @'e dependente da plantaforma).
@end table

@noindent
A precis@~ao padr@~ao @'e @code{"uchar"}.

O argumento @var{precis@~ao} pode tamb@'em especificar um contador de repeti@,{c}@~ao
opcional.  Por exemplo, @samp{32*single} faz com que @code{fread} leia
um bloco de 32 n@'umeros em ponto flutuante de precis@~ao simples.  leitura em
blocos @'e @'util em combina@,{c}@~ao com o argumento @var{pulo}.

O argumento @var{precis@~ao} pode tamb@'em especificar um tipo de convers@~ao.
Por exemplo, @samp{int16=>int32} faz com que @code{fread} leia valores
inteiros de 16-bit e retorne um array de valores inteiros de 32-bit.  Por
padr@~ao, @code{fread} retorna um array de precis@~ao dupla.  A forma
especial @samp{*TIPO} @'e a forma abreviada para @samp{TIPO=>TIPO}.

A convers@~ao e o contador de repeti@,{c}@~ao podem ser combinados.  Por exemplo,
@samp{32*single=>single} faz com que @code{fread} leia blocos valores
em ponto flutuante de precis@~ao simples e retorne um array de valores de
precis@~ao simples em lugar do array padr@~ao de valores de precis@~ao dupla.

O argumento opcional @var{pulo} especifica o n@'umero de bytes a serem omitidos
ap@'os cada elemento (ou bloco de elementos) se lido.  Se isso n@~ao for
especificado, o valor 0 @'e assumido.  Se o bloco final lido n@~ao for
completo, a omiss@~ao final n@~ao @'e feita.  Por exemplo,

@example
fread (f, 10, "3*single=>single", 8)
@end example

@noindent
ir@'a omitir o pulo final de 8-byte porque o @'ultimo bloco lido n@~ao ser@'a
um bloco completo de 3 valores.

O argumento opcional @var{arch} @'e uma seq@"u@^encia de caracteres especificando o formato dos dados
para o arquivo.  Valores v@'alidos s@~ao

@table @code
@item "native"
O formato corrente da m@'aquina.

@item "ieee-be"
IEEE big endian.

@item "ieee-le"
IEEE little endian.

@item "vaxd"
formato flutuante VAX D.

@item "vaxg"
formato flutuante VAX G.

@item "cray"
formato flutuante Cray.
@end table

@noindent
Convers@~oes s@~ao atualmente suportadas somente para os formatos
@code{"ieee-be"} e @code{"ieee-le"}.

Os dados lidos do arquivo s@~ao retornados em @var{val}, e o n@'umero de
valores lidos @'e retornado em @code{contador}
@seealso{fwrite, fopen, fclose}
@end deftypefn

