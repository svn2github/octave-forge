\input texinfo   @c -*-texinfo-*-

@c Copyright (c)  2007  Thomas Treichl <treichl@users.sourceforge.net>
@c odepkg.texi - A package for solving differential equations with Octave
@c
@c Permission is granted to copy, distribute and/or modify this document
@c under the terms of the GNU Free Documentation License, Version 1.2
@c or any later version published by the Free Software Foundation;
@c with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
@c Texts.  A copy of the license is included in the section entitled "GNU
@c Free Documentation License".

@c %*** Start of HEADER
@setfilename odepkg.info
@settitle OdePkg - A package for solving differential equations with Octave
@c %*** End of the HEADER

@c %*** Start of COPYRIGHT
@copying
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
copy of the license is included in the section entitled "GNU Free
Documentation License".
@end copying
@c %*** End of COPYRIGHT

@c %*** Start of TITLEPAGE
@titlepage
@title OdePkg
@subtitle A package for solving differential equations with Octave
@author by Thomas Treichl
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage
@c %*** End of TITLEPAGE

@c %*** Start of BODY
@contents
@ifnottex
@node Top, Beginners's Guide, (dir), (dir)
@top Copyright
@insertcopying
@end ifnottex

@menu
* Beginners's Guide:: Manual for users that are completely new to OdePkg
* User's Guide:: Manual for users that are already familiar with OdePkg
* Coder's Guide:: Manual for users that want to make changes to OdePkg
@end menu

@c %*** Start of first chapter: Beginner's Guide
@node Beginners's Guide, User's Guide, Top, Top
@chapter Beginners's Guide
The ``Beginner's Guide'' is intended for new users who want to solve differential equations with the higher level interpreter language Octave and the toolbox OdePkg. In this chapter it will be explained what OdePkg is about in @ref{About OdePkg} and how OdePkg grew up from the beginning in @ref{OdePkg history and roadmap}. In @ref{Installation and deinstallation} it is explained how OdePkg can be installed and in @ref{First tests and demos} the first examples are explained.

@node About OdePkg, OdePkg history and roadmap, Beginners's Guide, Beginners's Guide
@section About OdePkg
OdePkg is part of the @b{GNU Octave Repository} (resp. the Octave--Forge project) that is hosted at @url{http://octave.sourceforge.net}. The package includes commands for setting up options, output functions etc. before solving a set of differential equations. OdePkg formerly was initiated to solve explicitly formulated ordinary differential equations (ODEs) only, but there are already improvements so that differential algebraic equations (DAEs) in explicit form can also be solved. At this time OdePkg is under development with the main target, to make a package that is mostly compatible to the solver functions of Matlab.

@node OdePkg history and roadmap, Installation and deinstallation, About OdePkg, Beginners's Guide
@section OdePkg history and roadmap
@cindex history
@cindex roadmap

@multitable @columnfractions .25 .75
@item OdePkg Version 0.0.1
@tab The initial release was already a modification of the old ``ode package'' that was hosted at Octave--Forge and that was written by Marc Compere somewhen between 1999 and 2001. The four variable step--size Runge--Kutta algorithms in three solver files and the three fixed step--size solvers have been merged. It was possible to set some options for these solvers. The four output--functions (@command{odeprint}, @command{odeplot}, @command{odephas2} and @command{odephas3}) have been added along with other examples that initialy have not been there.
@item OdePkg Version 0.1.x
@tab The major milestone along versions 0.1.x was that four stable solvers have been implemented (ie. @command{ode23}, @command{ode45}, @command{ode54} and @command{ode78}) supporting all options that can be set for these kind of solvers and also all necessary functions for setting their options (eg. @command{odeset}, @command{odepkg_structure_check}, etc.). Since version 0.1.3 there is also code available that interfaces the Fortran solver @file{dopri5.f} that is written by Ernst Hairer and Gerhard Wanner (cf. @file{odepkg_mexsolver_dopri5.c} and the helper files @file{odepkgext.c} and @file{odepkgmex.c}).
@item @b{(current)} Version 0.2.x
@tab The main work that has to be done along version 0.2.x is to make the interface functions for the solvers of Hairer and Wanner stable enough, so that they can be installed by default (by now they have to be installed by hand if somebody wants them).
@item @b{(future)} Version 0.3.x
@tab All interface functions for the solvers of Hairer and Wanner are stable so that they can be installed by default (via a @file{Makefile} or the @file{PKA_ADD} file). Finished adding all wrapper functions and help descriptions for theses solvers, added tests and demos for these solvers. Ongoing work with this manual.
@item @b{(future)} Version 0.4.x
@tab Maybe some of the Hindmarsh, Brown and Petzold solvers are added, but I think I prefer the solvers of Jeff Cash instead.
@item @b{(future)} Version 0.5.x
@tab Finished most work with this manual. Manual is build by default, making rules have been added to the OdePkg. A lot of compatibility tests will be done.
@item @b{(future)} Version 0.6.x
@tab Final release before version 1.0.0.
@item @b{(future)} Version 1.0.0
@tab Completed odepkg release 1.0.0 with m--solvers and mex--solvers.
@end multitable

@node Installation and deinstallation, First tests and demos, OdePkg history and roadmap, Beginners's Guide
@section Installation and deinstallation
@cindex installation
@cindex deinstallation

OdePkg can be installed easily using the @command{pkg} command of Octave. Therefore get into the directory where the current release of OdePkg can be found, start @command{octave} and type
@example
pkg install odepkg-x.x.x.tar.gz
@end example
where @file{x.x.x} in the name of the @file{*.tar.gz} file is the current release number that is available. If you want to deinstall resp. remove OdePkg then simply type
@example
pkg uninstall odepkg-x.x.x.tar.gz
@end example
If you encounter problems when installing OdePkg with the @command{pkg} command or if you have an OdePkg that seems to be broken then please report this on the mailing--list of Octave--Forge using the email adress @email{octave-dev@@lists.sourceforge.net}. Please do the same if you encounter problems during @dots{}

@node First tests and demos,  , Installation and deinstallation, Beginners's Guide
@section First tests and demos
@cindex First tests and demos

@c %*** End of first chapter: Beginner's Guide

@c %*** Start of second chapter: User's Guide
@node User's Guide, Coder's Guide, Beginners's Guide, Top
@chapter User's Guide
@cindex User's Guide
The ``User's Guide'' is intended for users who already do know in principal how to solve differential equations with the higher level language Octave and OdePkg. In this chapter it will be explained which solvers can be used for the different kind of problems in @ref{Solver families} and which options can be set for the optimisation of the solving process in @ref{ODE/DAE options}.

@node Solver families, ODE/DAE options, User's Guide, User's Guide
@section Solver families
@cindex Solver

@menu
* M--file Runge--Kutta solvers::  
* Mex--file Runge--Kutta solvers::  
* Other solvers::               
@end menu

@node M--file Runge--Kutta solvers, Mex--file Runge--Kutta solvers, Solver families, Solver families
@subsection M--file Runge--Kutta solvers
The m--file Runge--Kutta solvers are written in the Octave interpreter language and ...

@node Mex--file Runge--Kutta solvers, Other solvers, M--file Runge--Kutta solvers, Solver families
@subsection Mex--file Runge--Kutta solvers

Interface functions for the solvers from Ernst Hairer and Gerhard Wanner (hosted at @url{http://www.unige.ch/~hairer}) have been added to the OdePkg as a compressed file with the name @file{hairer.tgz}. The licence of these solvers is a modified BSD license (without advertising clause) and can be found as @file{licence.txt} file in the @file{hairer.tgz} package. Therefore the Fortran files are GPL compatible.

@node Other solvers,  , Mex--file Runge--Kutta solvers, Solver families
@subsection Other solvers
@c The solvers from Jeff Cash http://www.ma.ic.ac.uk/~jcash have not been added to the OdePkg because it seems that there may exist some unfixed bugs. Modified solver files with bugfixes can be found at http://pitagora.dm.uniba.it/~testset, but the disclaimer's part of this site is not clear and maybe the modified solver files are not GPL compatible.

@c The people from the University of Bari at http://pitagora.dm.uniba.it/~testset have been created the solvers BIMD and GAMD. But like before the disclaimer's part of this internet site is not clear and maybe is not GPL compatible.

@c The OdePack solvers from http://www.netlib.org/odepack have not been added to OdePkg, because the question is not answered if they are really needed from somebody. Other solvers from http://www.netlib.org/ode have not been added because of the same reason.

@node ODE/DAE options,  , Solver families, User's Guide
@section ODE/DAE options
@cindex ODE/DAE options
The default values of odeset can be displayed if odeset is called without any input argument and one output argument argument, eg. the following way
@example
A = odeset ();
disp (A);
@end example

@table @samp
@item RelTol
The option @option{RelTol} is used to set the relative error tolerance for the error estimation of the solver while solving. It can either be a positive scalar or a vector with every element of the vector being a positive scalar (this depends on the solver that is used). The definite error estimation equation also depends on the solver that is used, but generalised it may be of the form @math{e(t) = max (RelTol^T y(t), AbsTol)}. Run
@example
A = odeset ('RelTol', 1, 'OutputFcn', @@odeplot);
ode78 (@@odepkg_equations_vanderpol, [0 20], [2 0], A);
B = odeset ('RelTol', 1e-10, 'OutputFcn', @@odeplot);
ode78 (@@odepkg_equations_vanderpol, [0 20], [2 0], B);
@end example
to see the effect of using different values for the option @option{RelTol}.

@item AbsTol
The option @option{AbsTol} is used to set the absolute error tolerance for the error estimation of the solver while solving. It can either be a positive scalar or a vector with every element of the vector being a positive scalar (this depends on the solver that is used). The definite error estimation equation also depends on the solver that is used, but generalised it may be of the form @math{e(t) = max (RelTol^T y(t), AbsTol)}. Run
@example
A = odeset ('AbsTol', 1e-3, 'OutputFcn', @@odeplot);
ode78 (@@odepkg_equations_vanderpol, [0 20], [2 0], A);
B = odeset ('AbsTol', 1e-10, 'OutputFcn', @@odeplot);
ode78 (@@odepkg_equations_vanderpol, [0 20], [2 0], B);
@end example
to see the effect of using different values for the option @option{AbsTol}.

@item NormControl
The option @option{NormControl} is used to set the type of error tolerance calculation of the solver while solving. It can either be the string @command{'on'} or @command{'off'}. At the time the solver starts the initialisation procedure a warning message may be displayed if the solver will ignore the @command{'on'} setting of this option because of an unhandled resp. missing implementation. The definite error estimation equation if set @command{'on'} also depends on the solver that is used, but generalised it may be of the form @math{e(t) = max (RelTol^T max || y(t), 1.0 ||, AbsTol)}. Run
@example
A = odeset ('NormControl', 'on', 'OutputFcn', @@odeplot);
ode78 (@@odepkg_equations_vanderpol, [0 20], [2 0], A);
B = odeset ('NormControl', 'off', 'OutputFcn', @@odeplot);
ode78 (@@odepkg_equations_vanderpol, [0 20], [2 0], B);
@end example
to see the effect of using different values for the option @option{NormControl}.

@item MaxStep
The option @option{MaxStep} is used to set the maximum step size for the solver that is used while solving. It can only be a positive scalar. By default this value is set internally by every solver and also may be different when using different solvers. Run
@example
A = odeset ('MaxStep', 10, 'OutputFcn', @@odeprint);
ode78 (@@odepkg_equations_vanderpol, [0 20], [2 0], A);
B = odeset ('MaxStep', 1e-1, 'OutputFcn', @@odeprint);
ode78 (@@odepkg_equations_vanderpol, [0 20], [2 0], B);
@end example
to see the effect of using different values for the option @option{MaxStep}.

@item InitialStep
The option @option{InitialStep} is used to set the initial first step size for the solver. It can only be a positive scalar. By default this value is set internally by every solver and also may be different when using different solvers. Run
@example
A = odeset ('InitialStep', 1, 'OutputFcn', @@odeprint);
ode78 (@@odepkg_equations_vanderpol, [0 1], [2 0], A);
B = odeset ('InitialStep', 1e-5, 'OutputFcn', @@odeprint);
ode78 (@@odepkg_equations_vanderpol, [0 1], [2 0], B);
@end example
to see the effect of using different values for the option @option{InitialStep}.

@item InitialSlope
The option @option{InitialSlope} is not handled by any of the solvers by now.

@item OutputFcn
The option @option{OutputFcn} can be used to set up an output function for displaying the results of the solver while solving. It must be a function handle to a valid function. There are four predefined output functions available with OdePkg. @command{odeprint} prints the actual time values and results in the octave window while solving, @command{odeplot} plots the results over time in a new figure window while solving, @command{odephas2} plots the first result over the second result as a two--dimensional plot while solving and @command{odephas3} plots the first result over the second result over the third result as a three--dimensional plot while solving. Run
@example
A = odeset ('OutputFcn', @@odeprint);
ode78 (@@odepkg_equations_vanderpol, [0 2], [2 0], A);
@end example
to see the effect of using an output function with the option @option{OutputFcn}. User defined output functions can also be used. A typical framework for a self--made output function may then be of the form
@example
function [vret] = odeoutput (vt, vy, vdeci, varargin)
  switch vdeci
    case 'init'
      ## Do everything needed to intialize output function
    case 'calc'
      ## Do everything needed to create output
    case 'done'
      ## Do everything needed to clean up output function
  endswitch
endfunction
@end example

@item Refine
The option @option{Refine} is used to set the interpolation factor that is used to increase the quality for the output values if an output function is also set with the option @option{OutputFcn}. It can only be a scalar integer value @math{0<=Refine<=5}. Run
@example
A = odeset ('Refine', 0, 'OutputFcn', @@odeplot);
ode78 (@@odepkg_equations_vanderpol, [0 20], [2 0], A);
B = odeset ('Refine', 3, 'OutputFcn', @@odeplot);
ode78 (@@odepkg_equations_vanderpol, [0 20], [2 0], B);
@end example
to see the effect of using different values for the option @option{AbsTol}.

@item OutputSel
@item Stats

@item Jacobian
@item JPattern
@item Vectorized

@item Mass 
@item MStateDependence 
@item MvPattern 
@item MassSingular

@item NonNegative
The option @option{NonNegative} is not handled by any of the solvers by now.
@item Events
@item MaxOrder
The option @option{MaxOrder} is not handled by any of the solvers by now.
@item BDF
The option @option{BDF} is not handled by any of the solvers by now.
@end table

@c %*** End of second chapter: User's Guide

@c %*** Start of third chapter: Coder's Guide
@node Coder's Guide,  , User's Guide, Top
@chapter Coder's Guide
@cindex Coder's Guide

@section C Mex Function Reference
@cindex C Mex Function Reference
@include odepkgmex.texi

@c %*** End of second chapter: Coder's Guide

@c @node Appendix, Index, Coder's Guide, Top
@c @appendix Appendix
@c @include fdl.texi

@c @node Index, C Mex Function Index, Coder's Guide, Top
@c @unnumbered Index
@c @printindex cp

@c @node C Mex Function Index,  , Coder's Guide, Top
@c @unnumbered C Mex Function Index
@c @printindex fn

@bye

@c Local Variables: 
@c mode: texinfo
@c TeX-master: "odepkg"
@c End: 
