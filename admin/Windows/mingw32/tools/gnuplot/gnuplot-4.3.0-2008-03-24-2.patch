diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/config/makefile.mgw gnuplot-4.3.0-2008-03-24/config/makefile.mgw
--- gnuplot-4.3.0-2008-03-24-orig/config/makefile.mgw	Sat Feb 23 11:03:35 2008
+++ gnuplot-4.3.0-2008-03-24/config/makefile.mgw	Thu Jun  5 21:00:59 2008
@@ -15,6 +15,8 @@
 # Workshop 4.03.
 #
 
+SRCDIR = @SRCDIR@
+
 #
 # ************** Begin of Configuration section ************************
 #
@@ -77,7 +79,7 @@
 
 # Where to install the PostScript prologue files, relatively to the executable
 # wgnuplot.exe
-GNUPLOT_PS_DIR = share/PostScript
+GNUPLOT_PS_DIR = share\\\\gnuplot\\\\PostScript
 
 # Destination directory, used in 'make install':
 DESTDIR = /c/Progra~1/Gnuplot4.3
@@ -89,13 +91,13 @@
 # Do you want some special optimization?
 # -mpentium means optimise for Pentium processor
 # -mpentiumpro means optimize for Pentium II and Pro procesors
-CFLAGS =
+CFLAGS += $(GCC_ARCH_FLAGS) -O2 -DVOLATILE_REFRESH
 
 
 # To compile the .hlp file you need hcw either out of Microsoft SDK or MS Help
 # Workshop. The latter can be obtained at www.helpmaster.com/help/devaids.htm.
 # Put the path to hcw here unless it is already in PATH:
-HCWPATH = /c/Program\ Files/Help\ Workshop/
+HCWPATH = 
 HCW = $(HCWPATH)hcw
 # Switches are for HCW 4.03:
 HCWFLAG =
@@ -120,10 +122,10 @@
 #
 
 
-CC = $(GCCPATH)gcc
-LD = $(GCCPATH)gcc
-CXX = $(GCCPATH)g++
-LDX = $(GCCPATH)g++
+#CC = $(GCCPATH)gcc
+LD = $(CC)
+#CXX = $(GCCPATH)g++
+LDX = $(CXX)
 
 RM = rm -f
 CP = cp -p
@@ -141,11 +143,11 @@
   LDFLAGS2 = -mconsole
 endif
 
-TOP = ..
+TOP = $(SRCDIR)
 TERMFLAGS = -DGNUPLOT_PS_DIR=\"$(GNUPLOT_PS_DIR)\" -I$(TOP)/term
 TERMLIBS = 
 
-CFLAGS += -I$(TOP) -I. -D_Windows -DHAVE_CONFIG_H\
+CFLAGS += -I$(TOP) -I$(TOP)/src -I. -D_Windows -DHAVE_CONFIG_H\
 	$(OPTS)
 
 ifdef MOUSE
@@ -215,7 +217,7 @@
   # RC = d:/cygnus/cygwin-b20/H-i586-cygwin32/bin/windres
   RC  = $(GCCPATH)windres
   RCFLAGS = --include-dir /mingw32/include \
-	--include-dir=win \
+	--include-dir=$(TOP)/src/win \
 	--define __WIN32__ --define __WIN95__ --define MSRC \
 	--define __GNUWIN32__ --use-temp-file
   ifdef WXT
@@ -235,20 +237,21 @@
 
 # macros for makefile.all
 O=o
-T=../term/
-D=../docs/
+CO=co
+T=$(SRCDIR)/term/
+D=$(SRCDIR)/docs/
 L=docs/latex/			# HBB FIXME 20060430: what's this for?
-M=../demo/
+M=$(SRCDIR)/demo/
 
 
-default: wgnuplot.exe $(HELPFILE) wgnuplot.mnu $(M)bf_test.exe \
-	pgnuplot.exe
+default: wgnuplot.exe wgnuplot.mnu bf_test.exe \
+	pgnuplot.exe pgnuplot_win.exe $(HELPFILE) gnuplot.pdf
 
 all:	default gnuplot.ps gnuplot.pdf
 
 
 # include the 'core makefile template'
-include makefile.all
+include $(SRCDIR)/src/makefile.all
 
 OBJS = $(COREOBJS) version.$(O) gpexecute.$(O) $(WX_OBJS)
 
@@ -261,18 +264,29 @@
 	win/wresourc.h win/wtext.c win/wtext.h win/geticon.c \
 	$(D)doc2rtf.c $(T)win.trm win/grpicon.ico win/texticon.ico
 
+CONSOLE_FLAGS=-DCONSOLE
+ALL_CONSOLE_OBJS = $(OBJS:.$(O)=.$(CO)) $(WINOBJS:.$(O)=.$(CO))
 
 # default rules
-.SUFFIXES: .exe .o .c
-.c.o:
-	$(CC) -c $(CFLAGS) $*.c
+.SUFFIXES: .exe .o .c .co
+.c.$(O):
+	$(CC) -c $(CFLAGS) -o $@ $<
+.c.$(CO):
+	$(CC) -c $(CFLAGS) $(CONSOLE_FLAGS) -o $@ $<
 
 LDLIBS = -lkernel32 -lgdi32 -lwinspool -lcomdlg32 -ladvapi32 -lshell32 -ladvapi32
 
+vpath	%.c	$(SRCDIR)/src
+vpath	%.c	$(SRCDIR)/term
+vpath	%.h	$(SRCDIR)/src
+vpath	%.def $(SRCDIR)/src
+vpath	%.rc	$(SRCDIR)/src
+vpath	%.trm	$(SRCDIR)/term
+
 #
 # Create config.h
 #
-config.h: ../config/config.mgw
+config.h: $(SRCDIR)/config/config.mgw
 	cp $< $@
 
 $(OBJS) $(WINOBJS) dbinary.$(O): config.h
@@ -281,47 +295,75 @@
 	$(LDX) $(LDFLAGS) $(LDFLAGS2) -mwindows -o $@ $(OBJS) $(WINOBJS) wgplt_res.o $(LDLIBS)\
 	$(TERMLIBS) $(WX_LIBS) $(CAIRO_LIBS) $(PANGO_LIBS)
 
-pgnuplot.exe: win/pgnuplot.c version.o
-	gcc -O2 -DHAVE_STDBOOL_H -s -o pgnuplot.exe win/pgnuplot.c version.o -I. -luser32
+pgnuplot_win.exe: win/pgnuplot.c version.o
+	$(CC) -O2 -I$(TOP)/src -DHAVE_STDBOOL_H -s -o $@ $< version.o -I. -luser32
+
+pgnuplot.exe: $(ALL_CONSOLE_OBJS) win/wgnuplot.def wgplt_res.o texticon.ico grpicon.ico
+	$(LDX) $(LDFLAGS) $(LDFLAGS2) -mconsole -o $@ $(ALL_CONSOLE_OBJS) wgplt_res.o $(LDLIBS)\
+	$(TERMLIBS) $(WX_LIBS) $(CAIRO_LIBS) $(PANGO_LIBS)
 
 # rules
 
 wgplt_res.o :  win/wgnuplot.rc win/wgnuplib.rc win/wresourc.h texticon.ico grpicon.ico
-	$(RC) $(RCFLAGS) --include-dir=win win/wgnuplot.rc $(RCOUT)
+	$(RC) $(RCFLAGS) --include-dir=win $< $(RCOUT)
 	$(RES2COFF)
 
-show.o: show.c plot.h setshow.h
-	$(CC) -c $(CFLAGS) -DHELPFILE=\"$(HELPFILE)\" -DBINDIR=\"$(bindir)\" -c $<
+show.$(O): show.c plot.h setshow.h
+	$(CC) -o $@ -c $(CFLAGS) -DHELPFILE=\"$(HELPFILE)\" -DBINDIR=\"$(bindir)\" -c $<
 
 term.$(O): term.c term.h plot.h setshow.h bitmap.h $(CORETERM)
-	$(CC) -c $(CFLAGS) $(TERMFLAGS) term.c
+	$(CC) -o $@ -c $(CFLAGS) $(TERMFLAGS) $<
+
+term.$(CO): term.c term.h plot.h setshow.h bitmap.h $(CORETERM)
+	$(CC) -o $@ -c $(CFLAGS) $(CONSOLE_FLAGS) $(TERMFLAGS) $<
 
 version.$(O): version.c
 
 WINDEPS = win/wgnuplib.h win/wcommon.h win/wresourc.h
 
 winmain.$(O): win/winmain.c win/wgnuplib.h win/wtext.h plot.h
-	$(CC) -c $(CFLAGS) -DHELPFILE=\"$(HELPFILE)\"  win/winmain.c
+	$(CC) -o $@ -c $(CFLAGS) -DHELPFILE=\"$(HELPFILE)\"  $<
+
+winmain.$(CO): win/winmain.c win/wgnuplib.h win/wtext.h plot.h
+	$(CC) -o $@ -c $(CFLAGS) $(CONSOLE_FLAGS) -DHELPFILE=\"$(HELPFILE)\"  $<
 
 wgnuplib.$(O): win/wgnuplib.c $(WINDEPS)
-	$(CC) -c $(CFLAGS) win/wgnuplib.c
+	$(CC) -o $@ -c $(CFLAGS) $<
+
+wgnuplib.$(CO): win/wgnuplib.c $(WINDEPS)
+	$(CC) -o $@ -c $(CFLAGS) $(CONSOLE_FLAGS) $<
 
 wmenu.$(O): win/wmenu.c $(WINDEPS)
-	$(CC) -c $(CFLAGS) win/wmenu.c
+	$(CC) -o $@ -c $(CFLAGS) $<
+
+wmenu.$(CO): win/wmenu.c $(WINDEPS)
+	$(CC) -o $@ -c $(CFLAGS) $(CONSOLE_FLAGS) $<
 
 wtext.$(O): win/wtext.c $(WINDEPS)
-	$(CC) -c $(CFLAGS) win/wtext.c
+	$(CC) -o $@ -c $(CFLAGS) $<
+
+wtext.$(CO): win/wtext.c $(WINDEPS)
+	$(CC) -o $@ -c $(CFLAGS) $(CONSOLE_FLAGS) $<
 
 wpause.$(O): win/wpause.c wxterminal/wxt_term.h $(WINDEPS)
-	$(CC) -c $(CFLAGS) win/wpause.c
+	$(CC) -o $@ -c $(CFLAGS) $<
+
+wpause.$(CO): win/wpause.c wxterminal/wxt_term.h $(WINDEPS)
+	$(CC) -o $@ -c $(CFLAGS) $(CONSOLE_FLAGS) $<
 
 wprinter.$(O): win/wprinter.c $(WINDEPS)
-	$(CC) -c $(CFLAGS) win/wprinter.c
+	$(CC) -o $@ -c $(CFLAGS) $<
+
+wprinter.$(CO): win/wprinter.c $(WINDEPS)
+	$(CC) -o $@ -c $(CFLAGS) $(CONSOLE_FLAGS) $<
 
 wgraph.$(O): win/wgraph.c $(WINDEPS)
-	$(CC) -c $(CFLAGS) win/wgraph.c
+	$(CC) -o $@ -c $(CFLAGS) $<
 
-wgnuplot.mnu: win/wgnuplot.mnu
+wgraph.$(CO): win/wgraph.c $(WINDEPS)
+	$(CC) -o $@ -c $(CFLAGS) $(CONSOLE_FLAGS) $<
+
+wgnuplot.mnu: $(TOP)/src/win/wgnuplot.mnu
 	$(CP) $^ $@
 
 wxt_gui.$(O): wxterminal/wxt_gui.cpp wxterminal/wxt_gui.h $(WX_LOCATION)
@@ -333,24 +375,26 @@
 # extract icons from wgnuplot.rc
 texticon.ico: grpicon.ico
 
-grpicon.ico: geticon.exe win/wgnuplot.rc
-	./geticon win/wgnuplot.rc
+grpicon.ico: win/wgnuplot.rc geticon.exe 
+	./geticon $<
 
 geticon.exe: win/geticon.c
-	$(LD) $(LDFLAGS) -o $@ win/geticon.c
+	$(LD) $(LDFLAGS) -o $@ $<
 
 # convert gnuplot.doc to gnuplot.rtf
-$(HELPFILE): doc2rtf.exe $(D)gnuplot.doc win/wgnuplot.hpj
-	./doc2rtf $(D)gnuplot.doc win/gnuplot.rtf
-	$(HCW) -c -e win/wgnuplot.hpj
+$(HELPFILE): doc2rtf.exe $(D)gnuplot.doc $(SRCDIR)/src/win/wgnuplot.hpj
+	./doc2rtf $(D)gnuplot.doc gnuplot.rtf
+	$(CP) $(SRCDIR)/src/win/wgnuplot.hpj wgnuplot.hpj
+	$(HCW) -c -e wgnuplot.hpj
 
 doc2rtf.exe: $(D)doc2rtf.c $(D)termdoc.c $(D)xref.c
 	$(LD) $(LDFLAGS) -o $@ -DWINDOWS_NO_GUI $(CFLAGS) -I. -I$(D:/=) -I$(T:/=) $^
 
 #make binary demo files
-$(M)bf_test.exe : bf_test.c dbinary.$(O) alloc.$(O)
+bf_test.exe : bf_test.c dbinary.$(O) alloc.$(O)
 	$(LD) $(LDFLAGS) $(CFLAGS) -U_Windows -o $@ $^
-	(cd $(M) ; ./bf_test.exe )
+	./bf_test.exe
+#	(cd $(M) ; ./bf_test.exe )
 #	cd ..
 
 # _Windows causes wtext.h to define fread() etc
@@ -369,7 +413,7 @@
 # sort alphabetically all terminals (note: req. GNU sort, not from MS)
 allterm.h: $(CORETERM)
 	@echo "Building allterm.h"
-	@for e in `egrep "^[ 	]*START_HELP" $(CORETERM) |\
+	@for e in `egrep "^[ 	]*START_HELP" $^ |\
 	     $(GNUSORT) -f -t':' -k2` ; do \
 	  f=`echo $$e |cut -d\: -f1` ; s=`echo $$e | cut -d\: -f2` ;\
 	  sed -n "/^[ 	]*$$s/,/^[ 	]*END_HELP/p" $$f ; \
@@ -404,17 +448,20 @@
 	rm -f $(D)gp_tex2.*
 gnuplot.ps: gnuplot.dvi
 	dvips -o gnuplot.ps gnuplot.dvi
+
+PDFTEXFLAG="-include-directory=$(D)"
+
 gnuplot.pdf: gnuplot.tex $(D)titlepag.tex
-	cp gnuplot.tex $(D)gp_tex2.tex
-	cp $(D)../VERSION $(D)
-	cd $(D) && pdflatex gp_tex2.tex && pdflatex gp_tex2.tex && pdflatex gp_tex2.tex
-	mv $(D)gp_tex2.pdf gnuplot.pdf
-	rm -f $(D)gp_tex2.*
+	cp gnuplot.tex gp_tex2.tex
+	cp $(D)../VERSION .
+	pdflatex $(PDFTEXFLAG) gp_tex2.tex && pdflatex $(PDFTEXFLAG) gp_tex2.tex && pdflatex $(PDFTEXFLAG) gp_tex2.tex
+	mv gp_tex2.pdf gnuplot.pdf
+	rm -f gp_tex2.*
 
 
 # clean up temporary files
 clean:
-	$(RM) config.h *.$(O) wgnuplot.map wgnuplot.res win/gnuplot.rtf
+	$(RM) config.h *.$(O) *.$(CO) wgnuplot.map wgnuplot.res win/gnuplot.rtf
 	$(RM) wxterminal/*.$(O)
 	$(RM) doc2rtf.exe win/wgnuplib.res wgnuplib.map wgnuplot.lib
 	$(RM) $(M)bf_test.exe *.ico geticon.exe allterm.h allterm.c
@@ -432,5 +479,6 @@
 	cp win/wgnuplot.mnu $(DESTDIR)/wgnuplot.mnu
 	cp wgnuplot.hlp $(DESTDIR)/wgnuplot.hlp
 	cp pgnuplot.exe $(DESTDIR)/pgnuplot.exe
+	cp pgnuplot_win.exe $(DESTDIR)/pgnuplot_win.exe
 	mkdir -p $(DESTDIR)/share/PostScript
 	cp ../term/PostScript/*.ps $(DESTDIR)/$(GNUPLOT_PS_DIR)
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/docs/psdoc/Makefile gnuplot-4.3.0-2008-03-24/docs/psdoc/Makefile
--- gnuplot-4.3.0-2008-03-24-orig/docs/psdoc/Makefile	Mon Dec 16 15:17:52 2002
+++ gnuplot-4.3.0-2008-03-24/docs/psdoc/Makefile	Thu Jun  5 21:31:20 2008
@@ -2,27 +2,29 @@
 # Create ps_symbols.ps
 #
 
+SRCDIR=@SRCDIR@
+
 top_srcdir = ../..
 
 all: ps_symbols.ps ps_fontfile_doc.ps
 
 pdf: ps_fontfile_doc.pdf
 
-ps_symbols.ps: ps_symbols.gpi
+ps_symbols.ps: $(SRCDIR)/docs/psdoc/ps_symbols.gpi
 	@if test -f $(top_srcdir)/src/gnuplot ; then \
 		$(top_srcdir)/src/gnuplot ps_symbols.gpi ; \
 	else \
 		gnuplot ps_symbols.gpi ; \
 	fi
 
-ps_fontfile_doc.ps: ps_fontfile_doc.tex
-	latex ps_fontfile_doc
-	latex ps_fontfile_doc
+ps_fontfile_doc.ps: $(SRCDIR)/docs/psdoc/ps_fontfile_doc.tex
+	latex $<
+	latex $<
 	dvips -j0 ps_fontfile_doc
 
-ps_fontfile_doc.pdf: ps_fontfile_doc.tex
-	pdflatex ps_fontfile_doc
-	pdflatex ps_fontfile_doc
+ps_fontfile_doc.pdf: $(SRCDIR)/docs/psdoc/ps_fontfile_doc.tex
+	pdflatex $<
+	pdflatex $<
 
 clean:
 	-rm -f ps_symbols.ps ps_fontfile_doc.aux ps_fontfile_doc.dvi \
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/src/command.c gnuplot-4.3.0-2008-03-24/src/command.c
--- gnuplot-4.3.0-2008-03-24-orig/src/command.c	Sun Mar 23 22:39:30 2008
+++ gnuplot-4.3.0-2008-03-24/src/command.c	Thu Apr 10 20:12:52 2008
@@ -1103,7 +1103,7 @@
     }
 
     if (sleep_time < 0) {
-#ifdef _Windows
+#if defined(_Windows) && !defined(CONSOLE)
     if (paused_for_mouse && !graphwin.hWndGraph) {
 	if (interactive) { /* cannot wait for Enter in a non-interactive session without the graph window */
 	    char tmp[512];
@@ -2723,6 +2723,9 @@
 	    if (last >= 0) {
 		if (gp_input_line[last] == '\n') {	/* remove any newline */
 		    gp_input_line[last] = NUL;
+		    if (last > 0 && gp_input_line[last-1] == '\r') {
+		        gp_input_line[--last] = NUL;
+		    }
 		    /* Watch out that we don't backup beyond 0 (1-1-1) */
 		    if (last > 0)
 			--last;
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/src/mouse.c gnuplot-4.3.0-2008-03-24/src/mouse.c
--- gnuplot-4.3.0-2008-03-24-orig/src/mouse.c	Thu Mar 13 21:02:12 2008
+++ gnuplot-4.3.0-2008-03-24/src/mouse.c	Thu Apr 10 20:12:52 2008
@@ -1653,7 +1653,9 @@
 #ifdef _Windows
     if (paused_for_mouse & PAUSE_CLICK) {
 	/* remove pause message box after 'pause mouse' */
+#ifndef CONSOLE
 	paused_for_mouse = 0;
+#endif
 	kill_pending_Pause_dialog();
     }
 #endif
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/src/plot.c gnuplot-4.3.0-2008-03-24/src/plot.c
--- gnuplot-4.3.0-2008-03-24-orig/src/plot.c	Sun Mar 16 21:03:50 2008
+++ gnuplot-4.3.0-2008-03-24/src/plot.c	Thu Apr 10 20:12:52 2008
@@ -480,7 +480,7 @@
     else
 	interactive = FALSE;
 #else
-# if (defined(__MSC__) && defined(_Windows)) || defined(__WIN32__)
+# if ((defined(__MSC__) && defined(_Windows)) || defined(__WIN32__)) && ! defined(CONSOLE)
     interactive = TRUE;
 # else
     interactive = isatty(fileno(stdin));
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/src/readline.c gnuplot-4.3.0-2008-03-24/src/readline.c
--- gnuplot-4.3.0-2008-03-24-orig/src/readline.c	Thu Jun 21 11:02:57 2007
+++ gnuplot-4.3.0-2008-03-24/src/readline.c	Thu Apr 10 21:26:31 2008
@@ -228,7 +228,12 @@
 #  include "win/winmain.h"
 #  define TEXTUSER 0xf1
 #  define TEXTGNUPLOT 0xf0
+#  ifdef CONSOLE
+#   define special_getc() win_getch()
+static char win_getch __PROTO((void));
+#  else
 #  define special_getc() msdos_getch()
+#  endif /* CONSOLE */
 static char msdos_getch __PROTO((void));	/* HBB 980308: PROTO'ed it */
 # endif				/* _Windows */
 
@@ -764,6 +769,17 @@
 #endif
 
 #if defined(MSDOS) || defined(_Windows) || defined(DOS386) || defined(OS2)
+
+#ifdef CONSOLE
+static char
+win_getch()
+{
+    if (term && term->waitforinput)
+        return term->waitforinput();
+    else
+        return ConsoleGetch();
+}
+#endif
 
 /* Convert Arrow keystrokes to Control characters: */
 static char
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/src/term.c gnuplot-4.3.0-2008-03-24/src/term.c
--- gnuplot-4.3.0-2008-03-24-orig/src/term.c	Sun Feb 24 20:49:37 2008
+++ gnuplot-4.3.0-2008-03-24/src/term.c	Thu Apr 10 20:12:52 2008
@@ -101,6 +101,7 @@
 void close_printer __PROTO((FILE * outfile));
 # ifdef __MSC__
 #  include <malloc.h>
+#  include <io.h>
 # else
 #  include <alloc.h>
 # endif                         /* MSC */
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/src/version.c gnuplot-4.3.0-2008-03-24/src/version.c
--- gnuplot-4.3.0-2008-03-24-orig/src/version.c	Sat Mar 22 19:04:19 2008
+++ gnuplot-4.3.0-2008-03-24/src/version.c	Thu Apr 10 20:07:55 2008
@@ -40,7 +40,7 @@
 
 
 const char gnuplot_version[] = "4.3";
-const char gnuplot_patchlevel[] = "0";
+const char gnuplot_patchlevel[] = "0-octave-mingw32";
 const char gnuplot_date[] = "March 2008";
 const char gnuplot_copyright[] = "Copyright (C) 1986 - 1993, 1998, 2004, 2007, 2008";
 
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/src/win/wgnuplib.h gnuplot-4.3.0-2008-03-24/src/win/wgnuplib.h
--- gnuplot-4.3.0-2008-03-24-orig/src/win/wgnuplib.h	Sun Mar  5 02:15:56 2006
+++ gnuplot-4.3.0-2008-03-24/src/win/wgnuplib.h	Thu Apr 10 20:12:52 2008
@@ -45,7 +45,9 @@
 #include <windows.h>
 
 #ifdef _WINDOWS
-#define _Windows
+# ifndef _Windows
+#  define _Windows
+# endif
 #endif
 
 /* HBB 19990506: The following used to be #ifdef __DLL__.
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/src/win/winmain.c gnuplot-4.3.0-2008-03-24/src/win/winmain.c
--- gnuplot-4.3.0-2008-03-24-orig/src/win/winmain.c	Sun Mar 18 04:18:49 2007
+++ gnuplot-4.3.0-2008-03-24/src/win/winmain.c	Thu Jun  5 20:37:34 2008
@@ -62,6 +62,7 @@
 #include <string.h>
 #include <stdarg.h>
 #include <ctype.h>
+#include <fcntl.h>
 #ifdef __MSC__
 # include <malloc.h>
 #endif
@@ -101,6 +102,7 @@
 PW pausewin;
 MW menuwin;
 LPSTR szModuleName;
+LPSTR szPackageDir;
 LPSTR winhelpname;
 LPSTR szMenuName;
 #define MENUNAME "wgnuplot.mnu"
@@ -251,12 +253,22 @@
 
 #endif /* WIN32 */
 
+#ifndef CONSOLE
 int PASCAL WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
 		LPSTR lpszCmdLine, int nCmdShow)
+#else
+int main(int argc, char **argv)
+#endif
 {
 	/*WNDCLASS wndclass;*/
 	LPSTR tail;
 
+#ifdef CONSOLE
+# define _argv argv
+# define _argc argc
+	HINSTANCE hInstance = GetModuleHandle(NULL), hPrevInstance = NULL;
+	int nCmdShow = 0;
+#else	 
 #ifdef __MSC__  /* MSC doesn't give us _argc and _argv[] so ...   */
 # ifdef WIN32    /* WIN32 has __argc and __argv */
 #  define _argv __argv
@@ -271,6 +283,7 @@
 		_argv[++_argc] = _fstrtok( NULL, " ");
 # endif /* WIN32 */
 #endif /* __MSC__ */
+#endif /* CONSOLE */
 
 #ifdef	__WATCOMC__
 # define _argv __argv
@@ -296,6 +309,17 @@
 	szModuleName = (LPSTR)farrealloc(szModuleName, _fstrlen(szModuleName)+1);
 	CheckMemory(szModuleName);
 
+	if (_fstrlen(szModuleName) >= 5 && _fstrnicmp(&szModuleName[_fstrlen(szModuleName)-5], "\\bin\\", 5) == 0)
+	{
+		int len = _fstrlen(szModuleName)-4;
+		szPackageDir = (LPSTR)farmalloc(len+1);
+		CheckMemory(szPackageDir);
+		_fstrncpy(szPackageDir, szModuleName, len);
+		szPackageDir[len] = '\0';
+	}
+	else
+		szPackageDir = szModuleName;
+
 	winhelpname = (LPSTR)farmalloc(_fstrlen(szModuleName)+_fstrlen(HELPFILE)+1);
 	CheckMemory(winhelpname);
 	_fstrcpy(winhelpname,szModuleName);
@@ -352,6 +376,7 @@
 	graphwin.color=TRUE;
 	graphwin.fontsize = WINFONTSIZE;
 
+#ifndef CONSOLE
 	if (TextInit(&textwin))
 		exit(1);
 	textwin.hIcon = LoadIcon(hInstance, "TEXTICON");
@@ -377,16 +402,22 @@
 		InvalidateRect(textwin.hWndParent, (LPRECT) &rect, 1);
 		UpdateWindow(textwin.hWndParent);
 	}
+#endif
 
 
 	atexit(WinExit);
 
+	if (!isatty(fileno(stdin)))
+		setmode(fileno(stdin), O_BINARY);
+
 	gnu_main(_argc, _argv, environ);
 
 	return 0;
 }
 
 
+#ifndef CONSOLE
+
 /* replacement stdio routines that use Text Window for stdin/stdout */
 /* WARNING: Do not write to stdout/stderr with functions not listed
    in win/wtext.h */
@@ -583,6 +614,91 @@
     }
     return fread(ptr, size, n, file);
 }
+
+#else
+
+DWORD WINAPI stdin_pipe_reader(LPVOID param)
+{
+#if 0
+    HANDLE h = (HANDLE)_get_osfhandle(fileno(stdin));
+    char c;
+    DWORD cRead;
+
+    if (ReadFile(h, &c, 1, &cRead, NULL))
+        return c;
+#else
+    unsigned char c;
+    if (fread(&c, 1, 1, stdin) == 1)
+        return (DWORD)c;
+    return EOF;
+#endif
+}
+
+int ConsoleGetch()
+{
+    int fd = fileno(stdin);
+    HANDLE h;
+    DWORD waitResult;
+
+    if (!isatty(fd))
+        h = CreateThread(NULL, 0, stdin_pipe_reader, NULL, 0, NULL);
+    else
+        h = (HANDLE)_get_osfhandle(fd);
+
+    do
+    {
+        waitResult = MsgWaitForMultipleObjects(1, &h, FALSE, INFINITE, QS_ALLINPUT);
+        if (waitResult == WAIT_OBJECT_0)
+        {
+            if (isatty(fd))
+            {
+                INPUT_RECORD rec;
+                DWORD recRead;
+
+                ReadConsoleInput(h, &rec, 1, &recRead);
+                if (recRead == 1 && rec.EventType == KEY_EVENT && rec.Event.KeyEvent.bKeyDown &&
+                        (rec.Event.KeyEvent.wVirtualKeyCode < VK_SHIFT || 
+                         rec.Event.KeyEvent.wVirtualKeyCode > VK_MENU))
+                {
+                    if (rec.Event.KeyEvent.uChar.AsciiChar)
+                        return rec.Event.KeyEvent.uChar.AsciiChar;
+                    else
+                        switch (rec.Event.KeyEvent.wVirtualKeyCode)
+                        {
+                            case VK_UP: return 020;
+                            case VK_DOWN: return 016;
+                            case VK_LEFT: return 002;
+                            case VK_RIGHT: return 006;
+                            case VK_HOME: return 001;
+                            case VK_END: return 005;
+                            case VK_DELETE: return 004;
+                        }
+                }
+            }
+            else
+            {
+                DWORD c;
+                GetExitCodeThread(h, &c);
+		CloseHandle(h);
+                return c;
+            }
+        }
+        else if (waitResult == WAIT_OBJECT_0+1)
+        {
+            MSG msg;
+
+            while (PeekMessage(&msg, NULL, 0, 0, PM_REMOVE))
+            {
+                TranslateMessage(&msg);
+                DispatchMessage(&msg);
+            }
+        }
+        else
+            break;
+    } while (1);
+}
+
+#endif /* CONSOLE */
 
 /* public interface to printer routines : Windows PRN emulation
  * (formerly in win.trm)
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/src/win/winmain.h gnuplot-4.3.0-2008-03-24/src/win/winmain.h
--- gnuplot-4.3.0-2008-03-24-orig/src/win/winmain.h	Sun Jul 16 04:50:56 2006
+++ gnuplot-4.3.0-2008-03-24/src/win/winmain.h	Thu Apr 10 20:12:52 2008
@@ -55,6 +55,7 @@
 
 extern LPSTR winhelpname;
 extern LPSTR szModuleName;
+extern LPSTR szPackageDir;
 
 int Pause __PROTO((LPSTR str));
 void screen_dump __PROTO((void));
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/src/win/wtext.h gnuplot-4.3.0-2008-03-24/src/win/wtext.h
--- gnuplot-4.3.0-2008-03-24-orig/src/win/wtext.h	Thu Jul  1 19:10:11 2004
+++ gnuplot-4.3.0-2008-03-24/src/win/wtext.h	Thu Apr 10 20:12:52 2008
@@ -40,6 +40,8 @@
 /* redefine functions that can talk to tty devices, to use
  * implementation in winmain.c/wgnuplot.dll */
 
+#ifndef CONSOLE
+
 #define kbhit()  MyKBHit()
 #define getche() MyGetChE()
 #define getch()  MyGetCh()
@@ -102,3 +104,9 @@
 size_t MyFWrite(const void *ptr, size_t size, size_t n, FILE *stream);
 size_t MyFRead(void *ptr, size_t size, size_t n, FILE *stream);
 
+#else /* CONSOLE */
+
+#define getch ConsoleGetch
+int ConsoleGetch();
+
+#endif /* CONSOLE */
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/term/emf.trm gnuplot-4.3.0-2008-03-24/term/emf.trm
--- gnuplot-4.3.0-2008-03-24-orig/term/emf.trm	Mon Jan 14 07:38:25 2008
+++ gnuplot-4.3.0-2008-03-24/term/emf.trm	Tue Apr 22 19:13:54 2008
@@ -149,7 +149,7 @@
 #define EMF_10THDEG2RAD (3.14159265359/1800)
 #define EMF_XMAX (1024 * EMF_PX2HM)
 #define EMF_YMAX (768 * EMF_PX2HM)
-#define EMF_HTIC (EMF_XMAX / 160)
+#define EMF_HTIC (EMF_XMAX / 320)
 #define EMF_VTIC EMF_HTIC
 #define EMF_FONTNAME "Arial"
 #define EMF_FONTSIZE 12
@@ -276,7 +276,7 @@
 static unsigned int emf_posy;
 static unsigned int emf_record_count = 0;
 static unsigned int emf_linetype = 1;
-static unsigned int emf_linewidth;	/* line width in plot units */
+static float emf_linewidth;	/* line width in plot units */
 static unsigned int emf_dashtype = 0;
 static unsigned long emf_color = 0L;
 static unsigned int emf_colors = EMF_COLORS;
@@ -584,8 +584,6 @@
 		term->xmax = tempxmax * EMF_PX2HM;
 	    if (tempymax > 0)
 		term->ymax = tempymax * EMF_PX2HM;
-	    term->h_tic = term->xmax / 160;
-	    term->v_tic = term->h_tic;
 	    break;
 	}
 	if (equals(c_token, "font"))
@@ -772,6 +770,7 @@
     if (linecolor == LT_BACKGROUND)
 	emf_color = RGB(255, 255, 255);	/* white (background) */
     else {
+	if( linecolor == -1 ) linecolor = 12;  /* set grid default linetype to light gray color */
 	linecolor = (linecolor < 0 || emf_monochrome) ? 7 : (linecolor % EMF_COLORS);
 	emf_color = color_table_data[linecolor];
     }
@@ -912,9 +911,6 @@
 	4, 9, 4, 2, 4, 2, 0, 0,	/* 4 - dash-dot-dot      */
     };
 
-    if (dashtype < 0)
-	dashtype = 0;
-
     emf_dashtype = dashtype;
 
     EMF_flush_polyline();
@@ -925,7 +921,7 @@
     if (dashtype == LT_AXIS)
 	dashtype = 2;
 
-    if (dashtype < 1 || !emf_dashed) {	/* solid mode */
+    if (dashtype < 0 || !emf_dashed) {	/* solid mode */
 	EMF_SelectObject(EMF_STOCK_OBJECT_BLACK_PEN);
 	EMF_DeleteObject(EMF_HANDLE_PEN);
 	EMF_CreatePen(EMF_HANDLE_PEN, 0, emf_linewidth * EMF_PX2HM, emf_color);
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/term/gd.trm gnuplot-4.3.0-2008-03-24/term/gd.trm
--- gnuplot-4.3.0-2008-03-24-orig/term/gd.trm	Sun Feb 24 20:49:38 2008
+++ gnuplot-4.3.0-2008-03-24/term/gd.trm	Thu Apr 10 20:17:38 2008
@@ -152,6 +152,10 @@
 # endif
 #endif
 
+#ifdef __MINGW32__
+#undef GD_NEED_LOCAL_FONT_POINTERS
+#endif
+
 #ifdef GD_NEED_LOCAL_FONT_POINTERS
 # include "gdfonts.h"
 # include "gdfontl.h"
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/term/post.trm gnuplot-4.3.0-2008-03-24/term/post.trm
--- gnuplot-4.3.0-2008-03-24-orig/term/post.trm	Thu Mar 13 19:01:27 2008
+++ gnuplot-4.3.0-2008-03-24/term/post.trm	Sun Jun 15 10:34:10 2008
@@ -193,7 +193,7 @@
 } ps_params_t;
 
 #define POST_PARAMS_DEFAULT { \
-    PSTERM_POSTSCRIPT, 50, 50, \
+    PSTERM_POSTSCRIPT, 0, 0, \
     PSTERM_LANDSCAPE, FALSE, FALSE, FALSE, FALSE, 1.0, 1.0, FALSE, \
     FALSE, FALSE, NULL, "Helvetica", 14, FALSE, FALSE, 2000, 0.003, \
     FALSE, TRUE \
@@ -203,7 +203,7 @@
 static const ps_params_t post_params_default = POST_PARAMS_DEFAULT;
 
 #define EPSLATEX_PARAMS_DEFAULT { \
-    PSTERM_EPSLATEX, 50, 50, \
+    PSTERM_EPSLATEX, 0, 0, \
     PSTERM_EPS, FALSE, FALSE, TRUE, FALSE, 1.0, 1.0, FALSE, \
     FALSE, FALSE, NULL, "", 11, TRUE, FALSE, 2000, 0.003, \
     FALSE, FALSE \
@@ -3341,9 +3341,9 @@
 # if defined(_Windows)
 	/* retrieve prologues path relatively to gnuplot executable,
 	 * whose path is in szModuleName (winmain.c) */
-	ps_prologue_dir = gp_alloc(strlen((char*) szModuleName)
+	ps_prologue_dir = gp_alloc(strlen((char*) szPackageDir)
 			+ strlen(GNUPLOT_PS_DIR) + 2, "Prolog path");
-	strcpy(ps_prologue_dir, (char*) szModuleName);
+	strcpy(ps_prologue_dir, (char*) szPackageDir);
 	strcat(ps_prologue_dir, "\\");
 	/* GNUPLOT_PS_DIR is _relative_ path */
 	strcat(ps_prologue_dir, GNUPLOT_PS_DIR);
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/term/win.trm gnuplot-4.3.0-2008-03-24/term/win.trm
--- gnuplot-4.3.0-2008-03-24-orig/term/win.trm	Fri Jul 27 08:55:53 2007
+++ gnuplot-4.3.0-2008-03-24/term/win.trm	Fri Apr 11 14:56:35 2008
@@ -86,6 +86,7 @@
 TERM_PUBLIC void WIN_set_cursor __PROTO((int, int, int));
 TERM_PUBLIC void WIN_put_tmptext __PROTO((int, const char str[]));
 TERM_PUBLIC void WIN_set_clipboard __PROTO((const char[]));
+TERM_PUBLIC int WIN_waitforinput __PROTO((void));
 #endif
 TERM_PUBLIC int WIN_make_palette __PROTO((t_sm_palette *palette));
 TERM_PUBLIC void WIN_set_color __PROTO((t_colorspec *));
@@ -453,6 +454,16 @@
     Graph_set_clipboard(&graphwin, s);
 }
 
+#ifdef CONSOLE
+
+TERM_PUBLIC int
+WIN_waitforinput  ()
+{
+    return ConsoleGetch();
+}
+
+#endif /* CONSOLE */
+
 #endif /* USE_MOUSE */
 
 
@@ -860,7 +871,11 @@
     WIN_text /* suspend */ , WIN_resume,
     WIN_boxfill, WIN_linewidth
 #ifdef USE_MOUSE
+# ifdef CONSOLE
+    , WIN_waitforinput , 
+# else
     , 0 /* WIN_waitforinput */,
+# endif /* CONSOLE */
     WIN_put_tmptext, WIN_set_ruler, WIN_set_cursor, WIN_set_clipboard
 #endif
     , WIN_make_palette, 0 /* previous_palette */,
diff -urN -x *.exe -x *.dll -x *.o -x *.a -x *.bak -x *.orig gnuplot-4.3.0-2008-03-24-orig/tutorial/makefile.dst gnuplot-4.3.0-2008-03-24/tutorial/makefile.dst
--- gnuplot-4.3.0-2008-03-24-orig/tutorial/makefile.dst	Fri Jun 30 04:17:26 2006
+++ gnuplot-4.3.0-2008-03-24/tutorial/makefile.dst	Thu Jun  5 21:41:57 2008
@@ -1,6 +1,11 @@
 # Makefile for gnuplot LaTeX tutorial
 # To make the manual from scratch, we run latex two times
-all: tutorial.dvi done
+
+SRCDIR=@SRCDIR@/tutorial
+
+vpath	%.tex	$(SRCDIR)
+
+all: tutorial.dvi
 
 done:
 	latex tutorial
@@ -13,9 +18,10 @@
 force:
 	latex tutorial
 
-tutorial.dvi: eg1.tex eg2.tex eg3.tex eg4.tex eg5.tex eg6.tex eg7.tex test.tex \
-	tutorial.tex header.tex
-	latex tutorial
+tutorial.dvi: tutorial.tex eg1.tex eg2.tex eg3.tex eg4.tex eg5.tex eg6.tex eg7.tex test.tex \
+	header.tex
+	latex $<
+	latex $<
 	rm -f done
 
 .SUFFIXES: .tex .plt
