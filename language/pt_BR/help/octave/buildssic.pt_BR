md5="9a74626d65479d6fe6ff0855faca8eef";rev="1.1";by="Jorge Barros de Abreu <ficmatin01 at skipthis solar dot com dot br>"
-*- texinfo -*-
@deftypefn {Arquivo de Fun@value{cedilha}@~ao} {} buildssic (@var{clst}, @var{ulst}, @var{olst}, @var{ilst}, @var{s1}, @var{s2}, @var{s3}, @var{s4}, @var{s5}, @var{s6}, @var{s7}, @var{s8})

Forma um sistema complexo arbitr@'ario (ciclo aberto ou fechado) em
forma espa@,{c}o-estado de muitos sistemas.  @command{buildssic} pode
facilmente (despido de sua sintaxe obscura) integrar fun@,{c}@~oes de transfer@^encia
de um complexo diagrama em blocos em um sistema simples com uma chamada.
Essa fun@value{cedilha}@~ao @'e especialmente @'util para construir intersec@,{c}@~oes de ciclos
abertos para designs
@iftex
@tex
$ { \cal H }_\infty $ e $ { \cal H }_2 $
@end tex
@end iftex
@ifinfo
H-infinito e H-2
@end ifinfo
ou para fechar ciclos com esse controladores.

Embora essa fun@value{cedilha}@~ao seja de prop@'osito geral, os usos de @command{sysgrupo}
@command{sysmult}, @command{sysconnect} e o como @'e recomendado para
opera@,{c}@~oes comuns uma vez que ele pode manusear sistemas mistos de discreto
e cont@'inuo e tamb@'em os nomes de entradas, sa@'idas e estados.

Os par@^ametros consistem de 4 listas que descrevem as conec@,{c}@~oes
de sa@'ida e entrada e at@'e 8 sistemas @var{s1}--@var{s8}.
Formato da lista:
@table @var
@item      clst
Lista de conec@,{c}@~ao, descreve o sinal de entrada de
cada sistema. O n@'umero m@'aximo de linhas de Clst @'e
igual @`a soma de todas as entradas de s1-s8.

Exemplo:
@code{[1 2 -1; 2 1 0]} significa que:  nova entrada 1 @'e antiga entrada 1
+ sa@'ida 2 - sa@'ida 1, e nova entrada 2 @'e antiga entrada 2
+ sa@'ida 1. A ordem de linhas @'e arbitr@'aria.

@item ulst
Se a antiga entrada n@~ao for vazia no vetor @var{ulst} ser@'a
anexada @`as sa@'idas. Voc@^e precisa disso se voc@^e
quer ``puxar para fora'' a entrada de um sistema. Elementos
s@~ao n@'umeros de entrada de @var{s1}--@var{s8}.

@item olst
lista de sa@'ida, especifica as sa@'idas dos sistemas
resultantes. Elementos s@~ao n@'umeros de sa@'ida de @var{s1}--@var{s8}.
Os n@'umeros s@~ao permitidos serem negativos e podem
aparecer em qualquer ordem. Uma matriz vazia significa
todas as sa@'idas.

@item ilst
lista de entrada, especifica as entradas dos sistemas
resultantes. Elementos s@~ao n@'umeros de entrada de @var{s1}--@var{s8}.
Os n@'umeros s~ao permitidos serem negativos e podem
aparecer em qualquer ordem. Uma matriz vazia significa
todas as entradas.
@end table

Example:  Um sistema de ciclo fechado muito simples.
@example
@group
w        e  +-----+   u  +-----+
 --->o--*-->|  K  |--*-->|  G  |--*---> y
     ^  |   +-----+  |   +-----+  |
   - |  |            |            |
     |  |            +----------------> u
     |  |                         |
     |  +-------------------------|---> e
     |                            |
     +----------------------------+
@end group
@end example

O sistema de ciclo fechado @var{GW} pode ser obtido atrav@'es de
@example
GW = buildssic([1 2; 2 -1], 2, [1 2 3], 2, G, K);
@end example
@table @var
@item clst
primeira linha: conecte entrada 1 (@var{G}) com sa@'ida 2 (@var{K}).

segunda  linha: conecte entrada 2 (@var{K}) com sa@'ida negativa 1 (@var{G}).
@item ulst
Anexe entrada de 2 (@var{K}) ao n@'umero de sa@'idas.
@item olst
S@'aidas s@~ao sa@'idas de 1 (@var{G}), 2 (@var{K}) e 
anexadas a sa@'ida 3 (de @var{ulst}).
@item ilst
A entrada @'e somente 2 (@var{K}).
@end table

Aqui est@'a um exemplo real:
@example
@group
                         +----+
    -------------------->| W1 |---> v1
z   |                    +----+
----|-------------+
    |             |
    |    +---+    v      +----+
    *--->| G |--->O--*-->| W2 |---> v2
    |    +---+       |   +----+
    |                |
    |                v
   u                  y
@end group
@end example
@iftex
@tex
$$ { \rm min } \Vert GW_{vz} \Vert _\infty $$  
@end tex
@end iftex
@ifinfo
@example
min || GW   ||
         vz   infty
@end example
@end ifinfo

O sistema de ciclo fechado @var{GW} 
@iftex
@tex
de $ [z, u]^T $ to $ [v_1, v_2, y]^T $
@end tex
@end iftex
@ifinfo
de [z, u]' to [v1, v2, y]' 
@end ifinfo
pode ser obtido atrav@'es de (todos sistemas @acronym{SISO}):
@example
GW = buildssic([1, 4; 2, 4; 3, 1], 3, [2, 3, 5],
               [3, 4], G, W1, W2, One);
@end example
onde ``One'' @'e uma fun@value{cedilha}@~ao de ganho de unidade (auxilar) com ordem 0.
(e.g. @code{One = ugain(1);})
@end deftypefn
