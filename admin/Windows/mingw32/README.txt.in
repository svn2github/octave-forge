This package has been built against the @OCTAVE_VERSION@ version of Octave 
available from http://www.octave.org.
It has been built using revision @BUILD_REVISION@ of the building scripts 
hosted at http://octave.sourceforge.net.

This version of Octave has many new features relative to previous versions, 
including:

  * Compatibility with Matlab graphics has been improved.
  * New experimental OpenGL/FLTK based plotting system.
  * Improvements to the debugger.
  * Improved traceback error messages.
  * Object Oriented Programming.
  * Block comments.
  * Single Precision data type.
  * 64-bit integer arithmetic.
  * New functions for reading and writing images.
  
For an exhausive list of changes and news see the end of this file.

For changes specific to the mingw32 binary of Octave refer to the changelog 
below or the one available at
https://octave.svn.sourceforge.net/svnroot/octave/trunk/octave-forge/admin/Windows/mingw32/CHANGELOG.txt
and the file CHANGELOG.txt in your local installation root.

For known issues of octave on mingw32 platform see the known issues section 
below or the one available at
https://octave.svn.sourceforge.net/svnroot/octave/trunk/octave-forge/admin/Windows/mingw32/KNOWN_ISSUES.txt
and the KNOWN_ISSUES.txt file in your local installation root.

Installing Octave:
------------------

It is highly recommended to install Octave to a path WITHOUT spaces. 
Octave will work if installed to a path including spaces, and all packages 
added at the installation will work if installed into a path containing spaces,
HOWEVER you will currently NOT be able to install packages using octave's
package manager at a later time if Octave was installed to a directory 
containing spaces.

Using the Java interface packages
---------------------------------

The "java" and "jhandles" packages are marked "noauto" as they require a Java
Runtime Environment (JRE) installed when loaded in octave.
The JRE is *not* included in the octave/mingw32 installer. You can get a JRE for 
windows at http://www.java.com. 
To use these packages in octave execute "pkg load java".
To mark them as autoload execute "pkg rebuild -auto java".

Using the xls/ods scripts in the io package
-------------------------------------------

The io package now includes read/write access scripts for Excel/xls and 
OpenOffice/ods spreadsheet files. Depending on the interface chosen, these
scripts depend on additional software.

Accessing Excel/xls files can be done using either the Excel/COM interface or
a Java interface (ApachePOI or JExcelAPI). Access to OpenOffice/ods files is 
implemented using a java interface (either JOpenDocument or odfdom/xerces).

The Excel/COM Interface additionally requires:
   * the windows-1.0.8+ package from the octave/mingw32 installer 
   * An installed version of Excel
   
The Java interface additionally requires:
   * the java-1.2.7+ package from the octave/mingw32 installer
   * a Java Runtime Environment (JRE) >1.6.0 installed

All necessary .jar files for the java interface (except for the JRE) are 
included in the installer.

Please also refer to the documentation of the io package located at
   <path-to-octave>\share\octave\packages\io-1.0.11\doc
specifically the notes on Java memory usage in READ-XLS.html!


Using this package for the development of OCT and MEX files:
-----------------------------------------------------------

This package is bundled with the compiler used to compile this package.
This version of the package has been compiled with Mingw32 gcc using GCC 
version @GCC_VERSION@.
The compiler is available from

http://sourceforge.net/projects/mingw

OCT files can be compiled from the Octave prompt with the "mkoctfile"
command, whereas as MEX files can be compiled with the "mex" command.

Contributing to Octave:
----------------------

There are a number of ways that you can contribute to help make Octave
a better system. Perhaps the most important way to contribute is to
write high-quality code for solving new problems, and to make your
code freely available for others to use. For inspiration, we have a
wish-list of projects (http://www.octave.org/projects.html) and
feature requests.

If you've written a useful function for Octave that you would like to
make available for others to use, please post it to the sources
mailing list (sources@octave.org). Messages sent to this list will be
seen by the Octave maintainers, and will be considered for inclusion
in future releases of Octave. The messages are also archived
(http://www.octave.org/archive.org) , so even if the code is not
included in a future release, it will remain available for others to
use.

If you find Octave useful, consider providing additional funding
(http://www.octave.org/funding.html) to continue its development. Even
a modest amount of additional funding could make a significant
difference in the amount of time that its author can devote to
development and support.

If you cannot provide funding or contribute code, you can still help
make Octave better and more reliable by reporting any bugs
(http://www.octave.org/bugs.html) you find and by offering suggestions
for ways to improve Octave.

Octave-Forge Packages
---------------------

This package is also bundled with a minimum MSYS environment required for
octave's package manager. Provided that the dependencies are met, octave-forge
packages can be installed from the octave prompt with the "pkg" command.

MIND that package installation is currently only possible if Octave is 
installed to a directory WITHOUT spaces!

This package is bundled with the binaries & development files of external
libraries (*except* a Java development kit) allowing the build of the 
following octave-forge packages:
