md5="d98991881721daeab0552e4463000550";rev="4142";by="Jorge Barros de Abreu <ficmatin01 at skipthis solar dot com dot br>"
-*- texinfo -*-
@deftypefn {Fun@value{cedilha}@~ao Interna} {} eye (@var{x})
@deftypefnx {Fun@value{cedilha}@~ao Interna} {} eye (@var{n}, @var{m})
@deftypefnx {Fun@value{cedilha}@~ao Interna} {} eye (@dots{}, @var{class})
Retorna uma matriz identidade.  Se invocada com um argumento escalar simples,
@code{eye} retorna uma matriz quadrada com a dimens@~ao especificada.  Se voc@^e
fornecer dois argumentos escalares, @code{eye} toma-os para ser o n@'umero de
linhas e colunas.  Se fornecido um vetor com dois elementos, @code{eye} usa
os valores dos elementos como o n@'umero de linhas e colunas,
respectivamente.  Por exemplo,

@example
@group
eye (3)
     @result{}  1  0  0
         0  1  0
         0  0  1
@end group
@end example

As seguintes express@~oes todas produzem o mesmo resultado:

@example
@group
eye (2)
@equiv{}
eye (2, 2)
@equiv{}
eye (size ([1, 2; 3, 4])
@end group
@end example

O argumento opcional @var{class}, permite a @code{eye} retornar um array do
tipo especificado, como

@example
val = zeros (n,m, "uint8")
@end example

Para manter a compatibilidade com @sc{Matlab}, chamando @code{eye} sem argumentos
@'e equivalente a chamar @code{eye} com argumento 1.
@end deftypefn
