md5="dc8a00dcab2aee06879be8807b220481";rev="1.1";by="Jorge Barros de Abreu <ficmatin01 at skipthis solar dot com dot br>"
-*- texinfo -*-
@deftypefn {Fun@value{cedilha}@~ao Carreg@'avel} {[@var{x}, @var{istate}, @var{msg}]} lsode (@var{fcn}, @var{x_0}, @var{t}, @var{t_crit})
Resolve um conjunto de equa@,{c}@~oes diferenciais
@tex
$$ {dx \over dt} = f (x, t) $$
com
$$ x(t_0) = x_0 $$
@end tex
@ifinfo

@example
dx
-- = f(x, t)
dt
@end example

com

@example
x(t_0) = x_0
@end example

@end ifinfo
A solu@,{c}@~ao @'e retornada na matriz @var{x}, com cada linha
correspondendo a um elemento de um vetor @var{t}.  O primeiro elemento
de @var{t} pode ser @math{t_0} e pode corresponder ao estado
inicial do sistema @var{x_0}, de forma que a primeira linha da sa@'ida
seja @var{x_0}.

O primeiro argumento, @var{fcn}, @'e uma seq@"u@^encia de caracteres, ou um array de c@'elulas de seq@"u@^encia de caracteres,
expl@'icita ou manuseador de fun@,{c}@~ao, que nomeia a fun@,{c}@~ao para chamar para calcular
o vetor do lado direito para o conjunto de equa@,{c}@~aoes. A fun@,{c}@~ao
deve ter a forma

@example
@var{xdot} = f (@var{x}, @var{t})
@end example

@noindent
na qual @var{xdot} e @var{x} s@~ao vetores e @var{t} @'e um escalar.

Se @var{fcn} for um array de seq@"u@^encia de caracteres de dois elementos, o primeiro elemento nomeia a
fun@value{cedilha}@~ao @math{f} descrita acima, e o segundo elemento nomeia uma fun@value{cedilha}@~ao
para calcular o jacobiano de @math{f}.  A fun@value{cedilha}@~ao Jacobiana deve ter a
forma

@example
@var{jac} = j (@var{x}, @var{t})
@end example

na qual @var{jac} @'e a matriz das derivadas parciais
@tex
$$ J = {\partial f_i \over \partial x_j} = \left[\matrix{
{\partial f_1 \over \partial x_1}
  & {\partial f_1 \over \partial x_2}
  & \cdots
  & {\partial f_1 \over \partial x_N} \cr
{\partial f_2 \over \partial x_1}
  & {\partial f_2 \over \partial x_2}
  & \cdots
  & {\partial f_2 \over \partial x_N} \cr
 \vdots & \vdots & \ddots & \vdots \cr
{\partial f_3 \over \partial x_1}
  & {\partial f_3 \over \partial x_2}
  & \cdots
  & {\partial f_3 \over \partial x_N} \cr}\right]$$
@end tex
@ifinfo

@example
             | df_1  df_1       df_1 |
             | ----  ----  ...  ---- |
             | dx_1  dx_2       dx_N |
             |                       |
             | df_2  df_2       df_2 |
             | ----  ----  ...  ---- |
      df_i   | dx_1  dx_2       dx_N |
jac = ---- = |                       |
      dx_j   |  .    .     .    .    |
             |  .    .      .   .    |
             |  .    .       .  .    |
             |                       |
             | df_N  df_N       df_N |
             | ----  ----  ...  ---- |
             | dx_1  dx_2       dx_N |
@end example

@end ifinfo

O segundo e o terceiro argumentos especificam o estado inicial do sistema,
@math{x_0}, e o valor inicial da vari@'avel independente @math{t_0}.

O quarto argumento @'e opcional, e pode ser usado para especificar um conjunto de
vezes que o resolvedor de equa@,{c}@~oes diferenciais ordin@'arias (ODE) @'e executado.  Isso @'e @'util para
evitar dificuldades com singularidades e pontos onde existe uma
discontinuidade na derivada.

Ap@'os um c@'alculo conclu@'ido com sucesso, o valor de @var{istate} ser@'a 2
(consistente com a vers@~ao Fortran de @sc{Lsode}).

Se o c@'alculo falhar, @var{istate} ser@'a alguma coisa
outra que n@~ao 2 e @var{msg} conter@'a informa@,{c}@~oes adicionais.

Voc@^e pode usar a fun@value{cedilha}@~ao @code{lsode_options} para escolher par@^ametros
opcionais para @code{lsode}.
@seealso{daspk, dassl, dasrt}
@end deftypefn
