This file documents the installation procedure of the Octave `queueing'
toolbox.

   `queueing' is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License, version 3 or
later, as published by the Free Software Foundation.

     Note: This file (`INSTALL') is automatically generated from
     `doc/installation.txi' in the `queueing' subversion sources.  Do
     not modify this document directly, as changes will be lost. Modify
     the source `doc/installation.txi' instead.

1 Installing the queueing toolbox
*********************************

1.1 Installation through Octave package management system
=========================================================

The most recent version of `queueing' is 1.1.1 and can be downloaded
from Octave-Forge

   `http://octave.sourceforge.net/queueing/'

   Additional information can be found at

   `http://www.moreno.marzolla.name/software/queueing/'

   If you have a recent version of GNU Octave and a network connection,
you can install `queueing' directly from Octave command prompt using
this command:

     octave:1> pkg install -forge queueing

   The command above will automaticall download and install the latest
version of the queueing toolbox from Octave Forge, and install it on
your machine. You can verify that the package is indeed installed:

     octave:1>pkg list queueing
     Package Name  | Version | Installation directory
     --------------+---------+-----------------------
         queueing *|   1.1.1 | /home/moreno/octave/queueing-1.1.1

   Alternatively, you can first download `queueing' from Octave-Forge;
then, to install the package in the system-wide location issue this
command at the Octave prompt:

     octave:1> pkg install _queueing-1.1.1.tar.gz_

(you may need to start Octave as root in order to allow the
installation to copy the files to the target locations). After this,
all functions will be readily available each time Octave starts,
without the need to tweak the search path.

   If you do not have root access, you can do a local install using:

     octave:1> pkg install -local queueing-1.1.1.tar.gz

   This will install `queueing' within your home directory, and the
package will be available to your user only.

     Note: Octave version 3.2.3 as shipped with Ubuntu 10.04 seems to
     ignore `-local' and always tries to install the package on the
     system directory.

   To remove `queueing' simply use

     octave:1> pkg uninstall queueing

1.2 Manual installation
=======================

If you want to manually install `queueing' in a custom location, you
can download the tarball and unpack it somewhere:

     tar xvfz queueing-1.1.1.tar.gz
     cd queueing-1.1.1/queueing/

   Copy all `.m' files from the `inst/' directory to some target
location. Then, start Octave with the `-p' option to add the target
location to the search path, so that Octave will find all `queueing'
functions automatically:

     octave -p _/path/to/queueing_

   For example, if all `queueing' m-files are in `/usr/local/queueing',
you can start Octave as follows:

     octave -p _/usr/local/queueing_

   If you want, you can add the following line to `~/.octaverc':

     addpath("_/path/to/queueing_");

so that the path `/usr/local/queueing' is automatically added to the
search path each time Octave is started, and you no longer need to
specify the `-p' option on the command line.

1.3 Using the queueing toolbox
==============================

You can use all functions by simply invoking their name with the
appropriate parameters; the `queueing' package should display an error
message in case of missing/wrong parameters. You can display the help
text for any function using the `help' command. For example:

     octave:2> help qnmvablo

   prints the documentation for the `qnmvablo' function.  Additional
information can be found in the `queueing' manual, which is available
in PDF format in `doc/queueing.pdf' and in HTML format in
`doc/queueing.html'.

   Within GNU Octave, you can also run the test and demo blocks
associated to the functions, using the `test' and `demo' commands
respectively. To run all the tests of, say, the `qnmvablo' function:

     octave:3> test qnmvablo
     -| PASSES 4 out of 4 tests

   To execute the demos of the `qnclosed' function, use the following:

     octave:4> demo qnclosed

