@c -*- texinfo -*-

@c Copyright (C) 2012 Moreno Marzolla
@c
@c This file is part of the queueing toolbox, a Queueing Networks
@c analysis package for GNU Octave.
@c
@c The queueing toolbox is free software; you can redistribute it
@c and/or modify it under the terms of the GNU General Public License
@c as published by the Free Software Foundation; either version 3 of
@c the License, or (at your option) any later version.
@c
@c The queueing toolbox is distributed in the hope that it will be
@c useful, but WITHOUT ANY WARRANTY; without even the implied warranty
@c of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with the queueing toolbox; see the file COPYING.  If not, see
@c <http://www.gnu.org/licenses/>.

@node Getting Started
@chapter Getting Started

@menu
* Naming Conventions::
* Quickstart Guide::
@end menu

@node Naming Conventions
@section Naming Conventions

Most of the functions in the @code{queueing} package obey a common
naming convention. Function names are made of several parts; the first
part is a prefix which indicates the class of problems the function
addresses:

@table @asis
@item @strong{ctmc-}
Functions for continuous-time Markov chains

@item @strong{dtmc-}
Functions for discrete-time Markov chains

@item @strong{qs-}
Functions for analyzing queueing systems (individual service centers)

@item @strong{qn-}
Functions for analyzing queueing networks

@end table

Functions dealing with Markov chains start with either the @code{ctmc}
or @code{dtmc} prefix; the prefix is optionally followed by an
additional string which hints at what the function does:

@table @asis
@item @strong{-bd}
Birth-Death process

@item @strong{-mtta}
Mean Time to Absorption

@item @strong{-fpt}
First Passage Times

@item @strong{-exps}
Expected Sojourn Times

@item @strong{-taexps}
Time-Averaged Expected Sojourn Times

@end table

For example, function @code{ctmcbd} returns the infinitesimal
generator matrix for a continuous birth-death process, while
@code{dtmcbd} returns the transition probability matrix for a discrete
birth-death process. Note that there exist functions @code{ctmc} and
@code{dtmc} (without any suffix) that compute steady-state and
transient state occupancy probabilities for CTMCs and DTMCs,
respectively. @xref{Markov Chains}.

Functions whose name starts with @code{qs-} deal with single station
queueing systems. The suffix describes the type of system, e.g.,
@code{qsmm1} for @math{M/M/1}, @code{qnmmm} for @math{M/M/m} and so
on. @xref{Single Station Queueing Systems}.

Finally, functions whose name starts with @code{qn-} deal with
queueing networks. The character that follows indicates whether the
function handles open (@code{'o'}) or closed (@code{'c'}) networks,
and whether there is a single customer class (@code{'s'}) or multiple
classes (@code{'m'}). The string @code{mix} indicates that the
function supports mixed networks with both open and closed customer
classes.

@table @asis
@item @strong{-os-}
Open, single-class network: open network with a single class of customers

@item @strong{-om-}
Open, multiclass network: open network with multiple job classes

@item @strong{-cs-}
Closed, single-class network

@item @strong{-cm-}
Closed, multiclass network

@item @strong{-mix-}
Mixed network with open and closed classes of customers

@end table

The last part of the function name indicates the algorithm implemented
by the function. @xref{Queueing Networks}.

@table @asis
@item @strong{-aba}
Asymptotic Bounds Analysis

@item @strong{-bsb}
Balanced System Bounds

@item @strong{-gb}
Geometric Bounds

@item @strong{-pb}
PB Bounds

@item @strong{-cb}
Composite Bounds (CB)

@item @strong{-mva}
Mean Value Analysis (MVA) algorithm

@item @strong{-cmva}
Conditional MVA

@item @strong{-mvald}
MVA with general load-dependent servers

@item @strong{-mvaap}
Approximate MVA

@item @strong{-mvablo}
MVABLO approximation for blocking queueing networks

@item @strong{-conv}
Convolution algorithm

@item @strong{-convld}
Convolution algorithm with general load-dependent servers

@end table

@node Quickstart Guide
@section Quickstart Guide

