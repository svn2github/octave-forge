md5="d5223776b257cd1db4ca849e16f43b74";rev="4142";by="Jorge Barros de Abreu <ficmatin01 at skipthis solar dot com dot br>"
-*- texinfo -*-
@deftypefn {Fun@value{cedilha}@~ao Carreg@'avel} {@var{p} =} colamd (@var{s})
@deftypefnx {Fun@value{cedilha}@~ao Carreg@'avel} {@var{p} =} colamd (@var{s}, @var{knobs})
@deftypefnx {Fun@value{cedilha}@~ao Carreg@'avel} {[@var{p}, @var{stats}] =} colamd (@var{s})
@deftypefnx {Fun@value{cedilha}@~ao Carreg@'avel} {[@var{p}, @var{stats}] =} colamd (@var{s}, @var{knobs})

Grau de permuta@,{c}@~ao m@'inimo aproximado da coluna. @code{@var{p} = colamd
(@var{s})} retorna o vetor grau de permuta@,{c}@~ao m@'inimo aproximado da
coluna para a matriz esparsa @var{s}. Para uma matriz n@~ao-sim@'etrica @var{s},
@code{@var{s} (:,@var{p})} tende a ter fatores triangulares alto e baixo esparsos como @var{s}.
A fatoriza@,{c}@~ao de Cholesky de @code{@var{s} (:,@var{p})' * @var{s}
(:,@var{p})} tamb@'em tende a ser esparsa como aquela de @code{@var{s}' *
@var{s}}.

@var{knobs} @'e um vetor de entrada opcional de "um para tr@^es elementos".  Se @var{s} for
m-por-n, ent@~ao linhas with mais que @code{max(16,@var{knobs}(1)*sqrt(n))} entradas
s@~ao ignoradas. Colunas com mais que @code{max(16,knobs(2)*sqrt(min(m,n)))}
entradas s@~ao removidos priorizando a ordena@,{c}@~ao, e ordenados por @'ultimo na permuta@,{c}@~ao de
sa@'ida @var{p}. Somente linhas completamente densas ou colunas completamente densas s@~ao removidas
se @code{@var{knobs} (1)} e @code{@var{knobs} (2)} forem < 0, respectivamente.
Se @code{@var{knobs} (3)} for n@~ao nulo, @var{stats} e @var{knobs} s@~ao
mostrados na tela.  O padr@~ao @'e @code{@var{knobs} = [10 10 0]}.  Note que
@var{knobs} difere em vers@~oes anteriores de @code{colamd}.

@var{knobs} @'e um vertor de entrada de dois elementos.  Se @var{s} for
m-por-n, ent@~ao linhas com mais que @code{(@var{knobs} (1)) * @var{n}}
entradas s@~ao ignoradas.  Colunas com mais que @code{(@var{knobs} (2)) *
@var{m}} entradas s@~ao removidas priorizando a ardena@,{c}@~ao, e ordenada por @'ultimo na
permuta@,{c}@~ao de sa@'ida @var{p}.  Se o par@^ametro knobs n@~ao estiver presente, ent@~ao
0.5 @'e usado em seu lugar, para ambos @code{@var{knobs} (1)} e
@code{@var{knobs} (2)}. @code{@var{knobs} (3)} controla a impress@~ao de
estat@'isticas e mensagens de erro.

@var{stats} @'e um vetor de sa@'ida opcional de 20 elementos que fornece dados
sobre a ordena@,{c}@~ao e a validade da matriz de entrada @var{s}. Ordena@,{c}@~oes
estat@'isticas est@~ao em @code{@var{stats} (1:3)}. @code{@var{stats} (1)} e
@code{@var{stats} (2)} s@~ao as linhas e colunas densas ou vazias
ignoradas por COLAMD e @code{@var{stats} (3)} @'e o n@'umero de c@'alculos
tempor@'arios executados sobre a estrutura de dados internos usados por COLAMD
(grosseiramente de tamanho @code{2.2 * nnz(@var{s}) + 4 * @var{m} + 7 * @var{n}}
inteiros).

Fun@value{cedilha}@~oes internas do Octave s@~ao criadas com a intens@~ao de gerar matrizes esparsas v@'alidas,
com entradas n@~ao duplicadas, com @'indices de linha ascendentes de elementos n@~ao zero
em cada coluna, com um n@'umero de entradas n@~ao negativo em cada coluna (!)
E assim por diante.  Se uma matriz for inv@'alida, ent@~ao COLAMD pode ou n@~ao estar habiltada
a continuar.  Se houverem entradas duplicadas (um @'indices de linha aparece duas ou
mais vezes na mesma coluna) ou se os @'indices de linha em uma coluna est@~ao fora
de ordem, ent@~ao COLAMD poce corrigir esses erros atrav@'es de desconsidera@,{c}@~ao da entrada
duplicada e ordenando cada coluna de sua c@'opia interna da matriz
@var{s} (a matriz de entrada @var{s} n@`ao @ reparada, todavia).  Se uma matriz
@'e inv@'alida por outros caminhos ent@~ao COLAMD n@`ao pode continuar, uma mensagem de erro @'e
mostrada, e nenhum argumento de sa@'ida (@var{p} ou @var{stats}) @'e retornado.
COLAMD @'e dessa forma um caminho simples para verificar se uma matriz esparsa @'e
v@'alida.

@code{@var{stats} (4:7)} fornece informa@value{cedilha}@~ao se COLAMD foi habilitada a
continuar. A matriz est@'a OK se @code{@var{stats} (4)} for zero, ou 1 se
inv@'alida. @code{@var{stats} (5)} @'e o mais alto @'indice de coluna que est@'a
n@~ao ordenado ou cont@'em entradas duplicadas, ou zero se tal coluna n@~ao existe.
@code{@var{stats} (6)} @'e o @'ultimo @'indice de linha vista duplicada ou fora de
ordem no @'indice de coluna dado por @code{@var{stats} (5)}, ou zero se tal
@'indice de coluna n@~ao existe. @code{@var{stats} (7)} @'e o n@'umero de @'indices de
linha duplicados ou forma de ordem. @code{@var{stats} (8:20)} @'e sempre zero na
vers@~ao atual de COLAMD (reservado para uso futuro).

A ordena@,{c}@~ao @'e seguida por uma @'arvore de elimina@,{c}@~ao de coluna p@'os-ordena@,{c}@~ao.

Os autores do c@'odigo em si mesmo s@~ao Stefan I. Larimore e Timothy A.
Davis (davis@@cise.ufl.edu), Universidade da Fl@'orida.  O algor@'itmo foi
desenvolvido em colabora@,{c}@~ao com John Gilbert, Xerox PARC, 3 Esmond
Ng, Oak Ridge National Laboratory. (veja
@url{http://www.cise.ufl.edu/research/sparse/colamd})
@seealso{colperm, symamd}
@end deftypefn

